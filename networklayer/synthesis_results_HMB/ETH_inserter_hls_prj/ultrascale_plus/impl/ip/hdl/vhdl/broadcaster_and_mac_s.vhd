-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity broadcaster_and_mac_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataIn_TVALID : IN STD_LOGIC;
    ip_header_out_V_din : OUT STD_LOGIC_VECTOR (576 downto 0);
    ip_header_out_V_full_n : IN STD_LOGIC;
    ip_header_out_V_write : OUT STD_LOGIC;
    no_ip_header_out_V_din : OUT STD_LOGIC_VECTOR (576 downto 0);
    no_ip_header_out_V_full_n : IN STD_LOGIC;
    no_ip_header_out_V_write : OUT STD_LOGIC;
    arpTableRequest_V_V_TREADY : IN STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    dataIn_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn_TREADY : OUT STD_LOGIC;
    dataIn_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    arpTableRequest_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpTableRequest_V_V_TVALID : OUT STD_LOGIC;
    regSubNetMask_V : IN STD_LOGIC_VECTOR (31 downto 0);
    regDefaultGateway_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of broadcaster_and_mac_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal tmp_nbreadreq_fu_60_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal ap_predicate_op21_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal bmr_fsm_state_load_reg_199 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_203 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op29_write_state2 : BOOLEAN;
    signal ap_predicate_op32_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln879_reg_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op26_write_state2 : BOOLEAN;
    signal ap_predicate_op27_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_arpTableRequest_V_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal bmr_fsm_state_load_reg_199_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_203_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_222_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op39_write_state3 : BOOLEAN;
    signal ap_predicate_op41_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bmr_fsm_state : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dataIn_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal arpTableRequest_V_V_TDATA_blk_n : STD_LOGIC;
    signal ip_header_out_V_blk_n : STD_LOGIC;
    signal no_ip_header_out_V_blk_n : STD_LOGIC;
    signal reg_127 : STD_LOGIC_VECTOR (511 downto 0);
    signal reg_131 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_123_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_ip_addr_V_fu_139_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal dst_ip_addr_V_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_226 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal xor_ln879_fu_149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln879_fu_155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal arpTableRequest_V_V_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableRequest_V_V_TVALID_int : STD_LOGIC;
    signal arpTableRequest_V_V_TREADY_int : STD_LOGIC;
    signal regslice_both_arpTableRequest_V_V_U_vld_out : STD_LOGIC;
    signal ap_condition_241 : BOOLEAN;
    signal ap_condition_338 : BOOLEAN;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_arpTableRequest_V_V_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => arpTableRequest_V_V_TDATA_int,
        vld_in => arpTableRequest_V_V_TVALID_int,
        ack_in => arpTableRequest_V_V_TREADY_int,
        data_out => arpTableRequest_V_V_TDATA,
        vld_out => regslice_both_arpTableRequest_V_V_U_vld_out,
        ack_out => arpTableRequest_V_V_TREADY,
        apdone_blk => regslice_both_arpTableRequest_V_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bmr_fsm_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_338)) then
                if (((grp_fu_123_p1 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1))) then 
                    bmr_fsm_state <= ap_const_lv1_0;
                elsif (((grp_fu_123_p1 = ap_const_lv1_0) and (bmr_fsm_state = ap_const_lv1_0))) then 
                    bmr_fsm_state <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bmr_fsm_state_load_reg_199 <= bmr_fsm_state;
                bmr_fsm_state_load_reg_199_pp0_iter1_reg <= bmr_fsm_state_load_reg_199;
                icmp_ln879_reg_222_pp0_iter1_reg <= icmp_ln879_reg_222;
                tmp_reg_203 <= tmp_nbreadreq_fu_60_p5;
                tmp_reg_203_pp0_iter1_reg <= tmp_reg_203;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dst_ip_addr_V_reg_212 <= dataIn_TDATA(159 downto 128);
                icmp_ln879_reg_222 <= icmp_ln879_fu_161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_127 <= dataIn_TDATA;
                reg_131 <= dataIn_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_2_reg_207 <= dataIn_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_reg_226 <= dataIn_TLAST;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln879_fu_155_p2 <= (xor_ln879_fu_149_p2 and regSubNetMask_V);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dataIn_TVALID, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1, ip_header_out_V_full_n, ap_predicate_op29_write_state2, no_ip_header_out_V_full_n, ap_predicate_op32_write_state2, regslice_both_arpTableRequest_V_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((no_ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (regslice_both_arpTableRequest_V_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dataIn_TVALID, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1, ip_header_out_V_full_n, ap_predicate_op29_write_state2, no_ip_header_out_V_full_n, ap_predicate_op32_write_state2, ap_block_state2_io, regslice_both_arpTableRequest_V_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_arpTableRequest_V_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((no_ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dataIn_TVALID, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1, ip_header_out_V_full_n, ap_predicate_op29_write_state2, no_ip_header_out_V_full_n, ap_predicate_op32_write_state2, ap_block_state2_io, regslice_both_arpTableRequest_V_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_arpTableRequest_V_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((no_ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(real_start, ap_done_reg, dataIn_TVALID, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dataIn_TVALID = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op26_write_state2, ap_predicate_op27_write_state2, arpTableRequest_V_V_TREADY_int)
    begin
                ap_block_state2_io <= (((arpTableRequest_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op26_write_state2 = ap_const_boolean_1)) or ((arpTableRequest_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ip_header_out_V_full_n, ap_predicate_op29_write_state2, no_ip_header_out_V_full_n, ap_predicate_op32_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((no_ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((ip_header_out_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op39_write_state3, ap_predicate_op41_write_state3, arpTableRequest_V_V_TREADY_int)
    begin
                ap_block_state3_io <= (((arpTableRequest_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op39_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(regslice_both_arpTableRequest_V_V_U_apdone_blk)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (regslice_both_arpTableRequest_V_V_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_condition_241_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_241 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_338_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_60_p5, ap_block_pp0_stage0_11001)
    begin
                ap_condition_338 <= ((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op21_read_state1_assign_proc : process(tmp_nbreadreq_fu_60_p5, bmr_fsm_state)
    begin
                ap_predicate_op21_read_state1 <= ((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1));
    end process;


    ap_predicate_op26_write_state2_assign_proc : process(bmr_fsm_state_load_reg_199, tmp_reg_203, icmp_ln879_reg_222)
    begin
                ap_predicate_op26_write_state2 <= ((tmp_reg_203 = ap_const_lv1_1) and (icmp_ln879_reg_222 = ap_const_lv1_0) and (bmr_fsm_state_load_reg_199 = ap_const_lv1_0));
    end process;


    ap_predicate_op27_write_state2_assign_proc : process(bmr_fsm_state_load_reg_199, tmp_reg_203, icmp_ln879_reg_222)
    begin
                ap_predicate_op27_write_state2 <= ((icmp_ln879_reg_222 = ap_const_lv1_1) and (tmp_reg_203 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_199 = ap_const_lv1_0));
    end process;


    ap_predicate_op29_write_state2_assign_proc : process(bmr_fsm_state_load_reg_199, tmp_reg_203)
    begin
                ap_predicate_op29_write_state2 <= ((tmp_reg_203 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_199 = ap_const_lv1_0));
    end process;


    ap_predicate_op32_write_state2_assign_proc : process(bmr_fsm_state_load_reg_199, tmp_reg_203)
    begin
                ap_predicate_op32_write_state2 <= ((tmp_reg_203 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_199 = ap_const_lv1_1));
    end process;


    ap_predicate_op39_write_state3_assign_proc : process(bmr_fsm_state_load_reg_199_pp0_iter1_reg, tmp_reg_203_pp0_iter1_reg, icmp_ln879_reg_222_pp0_iter1_reg)
    begin
                ap_predicate_op39_write_state3 <= ((tmp_reg_203_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln879_reg_222_pp0_iter1_reg = ap_const_lv1_0) and (bmr_fsm_state_load_reg_199_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op41_write_state3_assign_proc : process(bmr_fsm_state_load_reg_199_pp0_iter1_reg, tmp_reg_203_pp0_iter1_reg, icmp_ln879_reg_222_pp0_iter1_reg)
    begin
                ap_predicate_op41_write_state3 <= ((icmp_ln879_reg_222_pp0_iter1_reg = ap_const_lv1_1) and (tmp_reg_203_pp0_iter1_reg = ap_const_lv1_1) and (bmr_fsm_state_load_reg_199_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(tmp_nbreadreq_fu_60_p5, bmr_fsm_state)
    begin
                ap_predicate_op8_read_state1 <= ((tmp_nbreadreq_fu_60_p5 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    arpTableRequest_V_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op26_write_state2, ap_predicate_op27_write_state2, ap_predicate_op39_write_state3, ap_predicate_op41_write_state3, ap_block_pp0_stage0, arpTableRequest_V_V_TREADY_int)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op26_write_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op39_write_state3 = ap_const_boolean_1)))) then 
            arpTableRequest_V_V_TDATA_blk_n <= arpTableRequest_V_V_TREADY_int;
        else 
            arpTableRequest_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpTableRequest_V_V_TDATA_int_assign_proc : process(ap_predicate_op26_write_state2, ap_predicate_op27_write_state2, regDefaultGateway_V, dst_ip_addr_V_reg_212, ap_condition_241)
    begin
        if ((ap_const_boolean_1 = ap_condition_241)) then
            if ((ap_predicate_op27_write_state2 = ap_const_boolean_1)) then 
                arpTableRequest_V_V_TDATA_int <= dst_ip_addr_V_reg_212;
            elsif ((ap_predicate_op26_write_state2 = ap_const_boolean_1)) then 
                arpTableRequest_V_V_TDATA_int <= regDefaultGateway_V;
            else 
                arpTableRequest_V_V_TDATA_int <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arpTableRequest_V_V_TDATA_int <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    arpTableRequest_V_V_TVALID <= regslice_both_arpTableRequest_V_V_U_vld_out;

    arpTableRequest_V_V_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op26_write_state2, ap_predicate_op27_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op26_write_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)))) then 
            arpTableRequest_V_V_TVALID_int <= ap_const_logic_1;
        else 
            arpTableRequest_V_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    dataIn_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_pp0_stage0, dataIn_TVALID, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            dataIn_TDATA_blk_n <= dataIn_TVALID;
        else 
            dataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dataIn_TREADY_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op21_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) then 
            dataIn_TREADY <= ap_const_logic_1;
        else 
            dataIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    dst_ip_addr_V_fu_139_p4 <= dataIn_TDATA(159 downto 128);
    grp_fu_123_p1 <= dataIn_TLAST;
    icmp_ln879_fu_161_p2 <= "1" when (and_ln879_fu_155_p2 = ap_const_lv32_0) else "0";

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ip_header_out_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ip_header_out_V_full_n, ap_predicate_op29_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1))) then 
            ip_header_out_V_blk_n <= ip_header_out_V_full_n;
        else 
            ip_header_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ip_header_out_V_din <= ((tmp_last_V_2_reg_207 & reg_131) & reg_127);

    ip_header_out_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op29_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op29_write_state2 = ap_const_boolean_1))) then 
            ip_header_out_V_write <= ap_const_logic_1;
        else 
            ip_header_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    no_ip_header_out_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, no_ip_header_out_V_full_n, ap_predicate_op32_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            no_ip_header_out_V_blk_n <= no_ip_header_out_V_full_n;
        else 
            no_ip_header_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    no_ip_header_out_V_din <= ((tmp_last_V_reg_226 & reg_131) & reg_127);

    no_ip_header_out_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op32_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            no_ip_header_out_V_write <= ap_const_logic_1;
        else 
            no_ip_header_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_nbreadreq_fu_60_p5 <= (0=>(dataIn_TVALID), others=>'-');
    xor_ln879_fu_149_p2 <= (regDefaultGateway_V xor dst_ip_addr_V_fu_139_p4);
end behav;
