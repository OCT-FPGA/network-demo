// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module handle_output (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        no_ip_header_out_V_dout,
        no_ip_header_out_V_empty_n,
        no_ip_header_out_V_read,
        ip_header_checksum_V_dout,
        ip_header_checksum_V_empty_n,
        ip_header_checksum_V_read,
        arpTableReplay_V_TVALID,
        dataOut_TREADY,
        arpTableReplay_V_TDATA,
        arpTableReplay_V_TREADY,
        myMacAddress_V,
        dataOut_TDATA,
        dataOut_TVALID,
        dataOut_TKEEP,
        dataOut_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [576:0] no_ip_header_out_V_dout;
input   no_ip_header_out_V_empty_n;
output   no_ip_header_out_V_read;
input  [576:0] ip_header_checksum_V_dout;
input   ip_header_checksum_V_empty_n;
output   ip_header_checksum_V_read;
input   arpTableReplay_V_TVALID;
input   dataOut_TREADY;
input  [55:0] arpTableReplay_V_TDATA;
output   arpTableReplay_V_TREADY;
input  [47:0] myMacAddress_V;
output  [511:0] dataOut_TDATA;
output   dataOut_TVALID;
output  [63:0] dataOut_TKEEP;
output  [0:0] dataOut_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg no_ip_header_out_V_read;
reg ip_header_checksum_V_read;
reg arpTableReplay_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [2:0] mw_state_load_load_fu_221_p1;
wire   [0:0] grp_nbreadreq_fu_112_p3;
reg    ap_predicate_op10_read_state1;
wire   [0:0] grp_nbreadreq_fu_126_p3;
reg    ap_predicate_op25_read_state1;
reg    ap_predicate_op40_read_state1;
reg    ap_predicate_op45_read_state1;
wire   [0:0] tmp_nbreadreq_fu_140_p3;
reg    ap_predicate_op51_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [2:0] mw_state_load_reg_497;
reg   [0:0] tmp_4_reg_515;
reg    ap_predicate_op71_write_state2;
reg   [0:0] tmp_3_reg_537;
reg    ap_predicate_op75_write_state2;
reg    ap_block_state2_io;
wire    regslice_both_dataOut_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [2:0] mw_state_load_reg_497_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_515_pp0_iter1_reg;
reg    ap_predicate_op85_write_state3;
reg   [0:0] tmp_3_reg_537_pp0_iter1_reg;
reg    ap_predicate_op88_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] mw_state;
reg   [111:0] previous_word_data_V;
reg   [13:0] previous_word_keep_V;
reg    arpTableReplay_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    dataOut_TDATA_blk_n;
reg    ip_header_checksum_V_blk_n;
reg    no_ip_header_out_V_blk_n;
reg   [111:0] previous_word_data_V_1_reg_501;
reg   [13:0] previous_word_keep_V_1_reg_508;
wire   [399:0] trunc_ln647_1_fu_233_p1;
reg   [399:0] trunc_ln647_1_reg_522;
reg   [49:0] p_Result_8_i_reg_527;
wire   [0:0] p_Result_8_fu_287_p2;
wire   [0:0] grp_fu_205_p3;
wire   [399:0] trunc_ln647_fu_307_p1;
reg   [399:0] trunc_ln647_reg_541;
reg   [49:0] p_Result_2_i_reg_546;
wire   [0:0] tmp_last_V_fu_375_p2;
reg   [0:0] tmp_last_V_reg_551;
wire   [511:0] p_Result_13_fu_453_p3;
wire   [63:0] p_Result_14_fu_461_p3;
wire   [511:0] p_Result_11_fu_469_p3;
wire   [63:0] p_Result_12_fu_476_p3;
wire   [511:0] p_Result_9_fu_483_p3;
wire   [63:0] p_Result_10_fu_490_p3;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] ap_phi_mux_storemerge556_i_phi_fu_177_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge556_i_reg_174;
wire   [0:0] tmp_5_fu_413_p3;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185;
wire   [2:0] select_ln187_fu_293_p3;
wire   [2:0] select_ln321_fu_381_p3;
wire   [2:0] select_ln124_fu_395_p3;
wire   [2:0] zext_ln114_fu_443_p1;
wire   [111:0] p_Result_s_fu_421_p4;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_11_fu_279_p3;
wire   [0:0] tmp_9_fu_353_p3;
wire   [0:0] grp_fu_213_p3;
wire   [0:0] p_Result_5_fu_361_p2;
wire   [2:0] select_ln155_fu_367_p3;
wire   [47:0] trunc_ln321_fu_409_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [511:0] dataOut_TDATA_int;
reg    dataOut_TVALID_int;
wire    dataOut_TREADY_int;
wire    regslice_both_dataOut_V_data_V_U_vld_out;
wire    regslice_both_dataOut_V_keep_V_U_apdone_blk;
reg   [63:0] dataOut_TKEEP_int;
wire    regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_keep_V_U_vld_out;
wire    regslice_both_dataOut_V_last_V_U_apdone_blk;
reg   [0:0] dataOut_TLAST_int;
wire    regslice_both_dataOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_last_V_U_vld_out;
reg    ap_condition_225;
reg    ap_condition_291;
reg    ap_condition_156;
reg    ap_condition_342;
reg    ap_condition_278;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 mw_state = 3'd0;
#0 previous_word_data_V = 112'd0;
#0 previous_word_keep_V = 14'd0;
end

regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TDATA_int),
    .vld_in(dataOut_TVALID_int),
    .ack_in(dataOut_TREADY_int),
    .data_out(dataOut_TDATA),
    .vld_out(regslice_both_dataOut_V_data_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TKEEP_int),
    .vld_in(dataOut_TVALID_int),
    .ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy),
    .data_out(dataOut_TKEEP),
    .vld_out(regslice_both_dataOut_V_keep_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TLAST_int),
    .vld_in(dataOut_TVALID_int),
    .ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy),
    .data_out(dataOut_TLAST),
    .vld_out(regslice_both_dataOut_V_last_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((1'b1 == ap_condition_291)) begin
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 <= 1'd0;
        end else if ((1'b1 == ap_condition_225)) begin
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 <= p_Result_8_fu_287_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 <= ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_140_p3 == 1'd1) & (mw_state == 3'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state <= zext_ln114_fu_443_p1;
    end else if (((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state <= select_ln124_fu_395_p3;
    end else if (((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state <= select_ln321_fu_381_p3;
    end else if (((grp_fu_205_p3 == 1'd1) & (grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state <= select_ln187_fu_293_p3;
    end else if ((((grp_fu_205_p3 == 1'd1) & (grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((mw_state_load_load_fu_221_p1 == 3'd6) | (mw_state_load_load_fu_221_p1 == 3'd7))) | ((mw_state_load_load_fu_221_p1 == 3'd5) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mw_state <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((1'b1 == ap_condition_278)) begin
            previous_word_data_V <= p_Result_s_fu_421_p4;
        end else if (((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd3))) begin
            previous_word_data_V <= {{ip_header_checksum_V_dout[511:400]}};
        end else if (((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4))) begin
            previous_word_data_V <= {{no_ip_header_out_V_dout[511:400]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((1'b1 == ap_condition_278)) begin
            previous_word_keep_V <= 14'd16383;
        end else if (((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd3))) begin
            previous_word_keep_V <= {{ip_header_checksum_V_dout[575:562]}};
        end else if (((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4))) begin
            previous_word_keep_V <= {{no_ip_header_out_V_dout[575:562]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state_load_reg_497 <= mw_state;
        mw_state_load_reg_497_pp0_iter1_reg <= mw_state_load_reg_497;
        previous_word_data_V_1_reg_501 <= previous_word_data_V;
        previous_word_keep_V_1_reg_508 <= previous_word_keep_V;
        tmp_3_reg_537_pp0_iter1_reg <= tmp_3_reg_537;
        tmp_4_reg_515_pp0_iter1_reg <= tmp_4_reg_515;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_2_i_reg_546 <= {{ip_header_checksum_V_dout[561:512]}};
        tmp_last_V_reg_551 <= tmp_last_V_fu_375_p2;
        trunc_ln647_reg_541 <= trunc_ln647_fu_307_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_8_i_reg_527 <= {{no_ip_header_out_V_dout[561:512]}};
        trunc_ln647_1_reg_522 <= trunc_ln647_1_fu_233_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((mw_state == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_537 <= grp_nbreadreq_fu_126_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((mw_state == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_515 <= grp_nbreadreq_fu_112_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_140_p3 == 1'd1) & (mw_state == 3'd0))) begin
        if ((tmp_5_fu_413_p3 == 1'd0)) begin
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = 2'd1;
        end else if ((tmp_5_fu_413_p3 == 1'd1)) begin
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = 2'd3;
        end else begin
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_phi_reg_pp0_iter0_storemerge556_i_reg_174;
        end
    end else begin
        ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_phi_reg_pp0_iter0_storemerge556_i_reg_174;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op51_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpTableReplay_V_TDATA_blk_n = arpTableReplay_V_TVALID;
    end else begin
        arpTableReplay_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op51_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpTableReplay_V_TREADY = 1'b1;
    end else begin
        arpTableReplay_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op71_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((mw_state_load_reg_497 == 3'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op88_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op85_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((mw_state_load_reg_497_pp0_iter1_reg == 3'd5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        dataOut_TDATA_blk_n = dataOut_TREADY_int;
    end else begin
        dataOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((ap_predicate_op75_write_state2 == 1'b1)) begin
            dataOut_TDATA_int = p_Result_9_fu_483_p3;
        end else if ((ap_predicate_op71_write_state2 == 1'b1)) begin
            dataOut_TDATA_int = p_Result_11_fu_469_p3;
        end else if ((mw_state_load_reg_497 == 3'd5)) begin
            dataOut_TDATA_int = p_Result_13_fu_453_p3;
        end else begin
            dataOut_TDATA_int = 'bx;
        end
    end else begin
        dataOut_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((ap_predicate_op75_write_state2 == 1'b1)) begin
            dataOut_TKEEP_int = p_Result_10_fu_490_p3;
        end else if ((ap_predicate_op71_write_state2 == 1'b1)) begin
            dataOut_TKEEP_int = p_Result_12_fu_476_p3;
        end else if ((mw_state_load_reg_497 == 3'd5)) begin
            dataOut_TKEEP_int = p_Result_14_fu_461_p3;
        end else begin
            dataOut_TKEEP_int = 'bx;
        end
    end else begin
        dataOut_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((ap_predicate_op75_write_state2 == 1'b1)) begin
            dataOut_TLAST_int = tmp_last_V_reg_551;
        end else if ((ap_predicate_op71_write_state2 == 1'b1)) begin
            dataOut_TLAST_int = ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185;
        end else if ((mw_state_load_reg_497 == 3'd5)) begin
            dataOut_TLAST_int = 1'd1;
        end else begin
            dataOut_TLAST_int = 'bx;
        end
    end else begin
        dataOut_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op71_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((mw_state_load_reg_497 == 3'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataOut_TVALID_int = 1'b1;
    end else begin
        dataOut_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ip_header_checksum_V_blk_n = ip_header_checksum_V_empty_n;
    end else begin
        ip_header_checksum_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ip_header_checksum_V_read = 1'b1;
    end else begin
        ip_header_checksum_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        no_ip_header_out_V_blk_n = no_ip_header_out_V_empty_n;
    end else begin
        no_ip_header_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        no_ip_header_out_V_read = 1'b1;
    end else begin
        no_ip_header_out_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((arpTableReplay_V_TVALID == 1'b0) & (ap_predicate_op51_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op45_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op40_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((arpTableReplay_V_TVALID == 1'b0) & (ap_predicate_op51_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op45_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op40_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((arpTableReplay_V_TVALID == 1'b0) & (ap_predicate_op51_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op45_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op40_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((arpTableReplay_V_TVALID == 1'b0) & (ap_predicate_op51_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op45_read_state1 == 1'b1)) | ((ip_header_checksum_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op40_read_state1 == 1'b1)) | ((no_ip_header_out_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((dataOut_TREADY_int == 1'b0) & (ap_predicate_op75_write_state2 == 1'b1)) | ((dataOut_TREADY_int == 1'b0) & (ap_predicate_op71_write_state2 == 1'b1)) | ((mw_state_load_reg_497 == 3'd5) & (dataOut_TREADY_int == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((dataOut_TREADY_int == 1'b0) & (ap_predicate_op88_write_state3 == 1'b1)) | ((dataOut_TREADY_int == 1'b0) & (ap_predicate_op85_write_state3 == 1'b1)) | ((mw_state_load_reg_497_pp0_iter1_reg == 3'd5) & (dataOut_TREADY_int == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_156 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_225 = ((grp_fu_205_p3 == 1'd1) & (grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4));
end

always @ (*) begin
    ap_condition_278 = ((tmp_nbreadreq_fu_140_p3 == 1'd1) & (tmp_5_fu_413_p3 == 1'd1) & (mw_state == 3'd0));
end

always @ (*) begin
    ap_condition_291 = ((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4) & (grp_fu_205_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_342 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_storemerge556_i_reg_174 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185 = 'bx;

always @ (*) begin
    ap_predicate_op10_read_state1 = ((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd4));
end

always @ (*) begin
    ap_predicate_op25_read_state1 = ((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd3));
end

always @ (*) begin
    ap_predicate_op40_read_state1 = ((grp_nbreadreq_fu_112_p3 == 1'd1) & (mw_state == 3'd2));
end

always @ (*) begin
    ap_predicate_op45_read_state1 = ((grp_nbreadreq_fu_126_p3 == 1'd1) & (mw_state == 3'd1));
end

always @ (*) begin
    ap_predicate_op51_read_state1 = ((tmp_nbreadreq_fu_140_p3 == 1'd1) & (mw_state == 3'd0));
end

always @ (*) begin
    ap_predicate_op71_write_state2 = ((tmp_4_reg_515 == 1'd1) & (mw_state_load_reg_497 == 3'd4));
end

always @ (*) begin
    ap_predicate_op75_write_state2 = ((mw_state_load_reg_497 == 3'd3) & (tmp_3_reg_537 == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_write_state3 = ((tmp_4_reg_515_pp0_iter1_reg == 1'd1) & (mw_state_load_reg_497_pp0_iter1_reg == 3'd4));
end

always @ (*) begin
    ap_predicate_op88_write_state3 = ((mw_state_load_reg_497_pp0_iter1_reg == 3'd3) & (tmp_3_reg_537_pp0_iter1_reg == 1'd1));
end

assign dataOut_TVALID = regslice_both_dataOut_V_data_V_U_vld_out;

assign grp_fu_205_p3 = no_ip_header_out_V_dout[32'd576];

assign grp_fu_213_p3 = ip_header_checksum_V_dout[32'd576];

assign grp_nbreadreq_fu_112_p3 = no_ip_header_out_V_empty_n;

assign grp_nbreadreq_fu_126_p3 = ip_header_checksum_V_empty_n;

assign mw_state_load_load_fu_221_p1 = mw_state;

assign p_Result_10_fu_490_p3 = {{p_Result_2_i_reg_546}, {previous_word_keep_V_1_reg_508}};

assign p_Result_11_fu_469_p3 = {{trunc_ln647_1_reg_522}, {previous_word_data_V_1_reg_501}};

assign p_Result_12_fu_476_p3 = {{p_Result_8_i_reg_527}, {previous_word_keep_V_1_reg_508}};

assign p_Result_13_fu_453_p3 = {{400'd0}, {previous_word_data_V_1_reg_501}};

assign p_Result_14_fu_461_p3 = {{50'd0}, {previous_word_keep_V_1_reg_508}};

assign p_Result_5_fu_361_p2 = (tmp_9_fu_353_p3 ^ 1'd1);

assign p_Result_8_fu_287_p2 = (tmp_11_fu_279_p3 ^ 1'd1);

assign p_Result_9_fu_483_p3 = {{trunc_ln647_reg_541}, {previous_word_data_V_1_reg_501}};

assign p_Result_s_fu_421_p4 = {{{{16'd8}, {myMacAddress_V}}}, {trunc_ln321_fu_409_p1}};

assign select_ln124_fu_395_p3 = ((grp_fu_213_p3[0:0] === 1'b1) ? 3'd0 : 3'd2);

assign select_ln155_fu_367_p3 = ((tmp_9_fu_353_p3[0:0] === 1'b1) ? 3'd5 : 3'd0);

assign select_ln187_fu_293_p3 = ((tmp_11_fu_279_p3[0:0] === 1'b1) ? 3'd5 : 3'd0);

assign select_ln321_fu_381_p3 = ((grp_fu_213_p3[0:0] === 1'b1) ? select_ln155_fu_367_p3 : 3'd4);

assign tmp_11_fu_279_p3 = no_ip_header_out_V_dout[32'd562];

assign tmp_5_fu_413_p3 = arpTableReplay_V_TDATA[32'd48];

assign tmp_9_fu_353_p3 = ip_header_checksum_V_dout[32'd562];

assign tmp_last_V_fu_375_p2 = (p_Result_5_fu_361_p2 & grp_fu_213_p3);

assign tmp_nbreadreq_fu_140_p3 = arpTableReplay_V_TVALID;

assign trunc_ln321_fu_409_p1 = arpTableReplay_V_TDATA[47:0];

assign trunc_ln647_1_fu_233_p1 = no_ip_header_out_V_dout[399:0];

assign trunc_ln647_fu_307_p1 = ip_header_checksum_V_dout[399:0];

assign zext_ln114_fu_443_p1 = ap_phi_mux_storemerge556_i_phi_fu_177_p4;

endmodule //handle_output
