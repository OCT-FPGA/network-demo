// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ethernet_header_inserter_HH_
#define _ethernet_header_inserter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "broadcaster_and_mac_s.h"
#include "compute_and_insert_i.h"
#include "handle_output.h"
#include "fifo_w577_d16_A.h"
#include "start_for_computebkb.h"

namespace ap_rtl {

struct ethernet_header_inserter : public sc_module {
    // Port declarations 21
    sc_in< sc_lv<512> > dataIn_TDATA;
    sc_in< sc_lv<64> > dataIn_TKEEP;
    sc_in< sc_lv<1> > dataIn_TLAST;
    sc_out< sc_lv<512> > dataOut_TDATA;
    sc_out< sc_lv<64> > dataOut_TKEEP;
    sc_out< sc_lv<1> > dataOut_TLAST;
    sc_in< sc_lv<56> > arpTableReplay_V_TDATA;
    sc_out< sc_lv<32> > arpTableRequest_V_V_TDATA;
    sc_in< sc_lv<48> > myMacAddress_V;
    sc_in< sc_lv<32> > regSubNetMask_V;
    sc_in< sc_lv<32> > regDefaultGateway_V;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > dataIn_TVALID;
    sc_out< sc_logic > dataIn_TREADY;
    sc_out< sc_logic > arpTableRequest_V_V_TVALID;
    sc_in< sc_logic > arpTableRequest_V_V_TREADY;
    sc_in< sc_logic > arpTableReplay_V_TVALID;
    sc_out< sc_logic > arpTableReplay_V_TREADY;
    sc_out< sc_logic > dataOut_TVALID;
    sc_in< sc_logic > dataOut_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ethernet_header_inserter(sc_module_name name);
    SC_HAS_PROCESS(ethernet_header_inserter);

    ~ethernet_header_inserter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    broadcaster_and_mac_s* broadcaster_and_mac_U0;
    compute_and_insert_i* compute_and_insert_i_U0;
    handle_output* handle_output_U0;
    fifo_w577_d16_A* ip_header_out_V_U;
    fifo_w577_d16_A* no_ip_header_out_V_U;
    fifo_w577_d16_A* ip_header_checksum_V_U;
    start_for_computebkb* start_for_computebkb_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ap_start;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ap_done;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ap_continue;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ap_idle;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ap_ready;
    sc_signal< sc_lv<577> > broadcaster_and_mac_U0_ip_header_out_V_din;
    sc_signal< sc_logic > broadcaster_and_mac_U0_ip_header_out_V_write;
    sc_signal< sc_lv<577> > broadcaster_and_mac_U0_no_ip_header_out_V_din;
    sc_signal< sc_logic > broadcaster_and_mac_U0_no_ip_header_out_V_write;
    sc_signal< sc_logic > broadcaster_and_mac_U0_start_out;
    sc_signal< sc_logic > broadcaster_and_mac_U0_start_write;
    sc_signal< sc_logic > broadcaster_and_mac_U0_dataIn_TREADY;
    sc_signal< sc_lv<32> > broadcaster_and_mac_U0_arpTableRequest_V_V_TDATA;
    sc_signal< sc_logic > broadcaster_and_mac_U0_arpTableRequest_V_V_TVALID;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > compute_and_insert_i_U0_ap_start;
    sc_signal< sc_logic > compute_and_insert_i_U0_ap_done;
    sc_signal< sc_logic > compute_and_insert_i_U0_ap_continue;
    sc_signal< sc_logic > compute_and_insert_i_U0_ap_idle;
    sc_signal< sc_logic > compute_and_insert_i_U0_ap_ready;
    sc_signal< sc_logic > compute_and_insert_i_U0_ip_header_out_V_read;
    sc_signal< sc_lv<577> > compute_and_insert_i_U0_ip_header_checksum_V_din;
    sc_signal< sc_logic > compute_and_insert_i_U0_ip_header_checksum_V_write;
    sc_signal< sc_logic > handle_output_U0_ap_start;
    sc_signal< sc_logic > handle_output_U0_ap_done;
    sc_signal< sc_logic > handle_output_U0_ap_continue;
    sc_signal< sc_logic > handle_output_U0_ap_idle;
    sc_signal< sc_logic > handle_output_U0_ap_ready;
    sc_signal< sc_logic > handle_output_U0_no_ip_header_out_V_read;
    sc_signal< sc_logic > handle_output_U0_ip_header_checksum_V_read;
    sc_signal< sc_logic > handle_output_U0_arpTableReplay_V_TREADY;
    sc_signal< sc_lv<512> > handle_output_U0_dataOut_TDATA;
    sc_signal< sc_logic > handle_output_U0_dataOut_TVALID;
    sc_signal< sc_lv<64> > handle_output_U0_dataOut_TKEEP;
    sc_signal< sc_lv<1> > handle_output_U0_dataOut_TLAST;
    sc_signal< sc_logic > ip_header_out_V_full_n;
    sc_signal< sc_lv<577> > ip_header_out_V_dout;
    sc_signal< sc_logic > ip_header_out_V_empty_n;
    sc_signal< sc_logic > no_ip_header_out_V_full_n;
    sc_signal< sc_lv<577> > no_ip_header_out_V_dout;
    sc_signal< sc_logic > no_ip_header_out_V_empty_n;
    sc_signal< sc_logic > ip_header_checksum_V_full_n;
    sc_signal< sc_lv<577> > ip_header_checksum_V_dout;
    sc_signal< sc_logic > ip_header_checksum_V_empty_n;
    sc_signal< sc_lv<1> > start_for_compute_and_insert_i_U0_din;
    sc_signal< sc_logic > start_for_compute_and_insert_i_U0_full_n;
    sc_signal< sc_lv<1> > start_for_compute_and_insert_i_U0_dout;
    sc_signal< sc_logic > start_for_compute_and_insert_i_U0_empty_n;
    sc_signal< sc_logic > compute_and_insert_i_U0_start_full_n;
    sc_signal< sc_logic > compute_and_insert_i_U0_start_write;
    sc_signal< sc_logic > handle_output_U0_start_full_n;
    sc_signal< sc_logic > handle_output_U0_start_write;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_arpTableReplay_V_TREADY();
    void thread_arpTableRequest_V_V_TDATA();
    void thread_arpTableRequest_V_V_TVALID();
    void thread_broadcaster_and_mac_U0_ap_continue();
    void thread_broadcaster_and_mac_U0_ap_start();
    void thread_compute_and_insert_i_U0_ap_continue();
    void thread_compute_and_insert_i_U0_ap_start();
    void thread_compute_and_insert_i_U0_start_full_n();
    void thread_compute_and_insert_i_U0_start_write();
    void thread_dataIn_TREADY();
    void thread_dataOut_TDATA();
    void thread_dataOut_TKEEP();
    void thread_dataOut_TLAST();
    void thread_dataOut_TVALID();
    void thread_handle_output_U0_ap_continue();
    void thread_handle_output_U0_ap_start();
    void thread_handle_output_U0_start_full_n();
    void thread_handle_output_U0_start_write();
    void thread_start_for_compute_and_insert_i_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
