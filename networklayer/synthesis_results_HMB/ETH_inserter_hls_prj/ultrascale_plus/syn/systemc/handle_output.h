// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _handle_output_HH_
#define _handle_output_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct handle_output : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<577> > no_ip_header_out_V_dout;
    sc_in< sc_logic > no_ip_header_out_V_empty_n;
    sc_out< sc_logic > no_ip_header_out_V_read;
    sc_in< sc_lv<577> > ip_header_checksum_V_dout;
    sc_in< sc_logic > ip_header_checksum_V_empty_n;
    sc_out< sc_logic > ip_header_checksum_V_read;
    sc_in< sc_logic > arpTableReplay_V_TVALID;
    sc_in< sc_logic > dataOut_TREADY;
    sc_in< sc_lv<56> > arpTableReplay_V_TDATA;
    sc_out< sc_logic > arpTableReplay_V_TREADY;
    sc_in< sc_lv<48> > myMacAddress_V;
    sc_out< sc_lv<512> > dataOut_TDATA;
    sc_out< sc_logic > dataOut_TVALID;
    sc_out< sc_lv<64> > dataOut_TKEEP;
    sc_out< sc_lv<1> > dataOut_TLAST;


    // Module declarations
    handle_output(sc_module_name name);
    SC_HAS_PROCESS(handle_output);

    ~handle_output();

    sc_trace_file* mVcdFile;

    regslice_both<512>* regslice_both_dataOut_V_data_V_U;
    regslice_both<64>* regslice_both_dataOut_V_keep_V_U;
    regslice_both<1>* regslice_both_dataOut_V_last_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<3> > mw_state_load_load_fu_221_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_112_p3;
    sc_signal< bool > ap_predicate_op10_read_state1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_126_p3;
    sc_signal< bool > ap_predicate_op25_read_state1;
    sc_signal< bool > ap_predicate_op40_read_state1;
    sc_signal< bool > ap_predicate_op45_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_140_p3;
    sc_signal< bool > ap_predicate_op51_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_lv<3> > mw_state_load_reg_497;
    sc_signal< sc_lv<1> > tmp_4_reg_515;
    sc_signal< bool > ap_predicate_op71_write_state2;
    sc_signal< sc_lv<1> > tmp_3_reg_537;
    sc_signal< bool > ap_predicate_op75_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > regslice_both_dataOut_V_data_V_U_apdone_blk;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<3> > mw_state_load_reg_497_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_4_reg_515_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op85_write_state3;
    sc_signal< sc_lv<1> > tmp_3_reg_537_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op88_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > mw_state;
    sc_signal< sc_lv<112> > previous_word_data_V;
    sc_signal< sc_lv<14> > previous_word_keep_V;
    sc_signal< sc_logic > arpTableReplay_V_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > dataOut_TDATA_blk_n;
    sc_signal< sc_logic > ip_header_checksum_V_blk_n;
    sc_signal< sc_logic > no_ip_header_out_V_blk_n;
    sc_signal< sc_lv<112> > previous_word_data_V_1_reg_501;
    sc_signal< sc_lv<14> > previous_word_keep_V_1_reg_508;
    sc_signal< sc_lv<400> > trunc_ln647_1_fu_233_p1;
    sc_signal< sc_lv<400> > trunc_ln647_1_reg_522;
    sc_signal< sc_lv<50> > p_Result_8_i_reg_527;
    sc_signal< sc_lv<1> > p_Result_8_fu_287_p2;
    sc_signal< sc_lv<1> > grp_fu_205_p3;
    sc_signal< sc_lv<400> > trunc_ln647_fu_307_p1;
    sc_signal< sc_lv<400> > trunc_ln647_reg_541;
    sc_signal< sc_lv<50> > p_Result_2_i_reg_546;
    sc_signal< sc_lv<1> > tmp_last_V_fu_375_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_551;
    sc_signal< sc_lv<512> > p_Result_13_fu_453_p3;
    sc_signal< sc_lv<64> > p_Result_14_fu_461_p3;
    sc_signal< sc_lv<512> > p_Result_11_fu_469_p3;
    sc_signal< sc_lv<64> > p_Result_12_fu_476_p3;
    sc_signal< sc_lv<512> > p_Result_9_fu_483_p3;
    sc_signal< sc_lv<64> > p_Result_10_fu_490_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<2> > ap_phi_mux_storemerge556_i_phi_fu_177_p4;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_storemerge556_i_reg_174;
    sc_signal< sc_lv<1> > tmp_5_fu_413_p3;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185;
    sc_signal< sc_lv<3> > select_ln187_fu_293_p3;
    sc_signal< sc_lv<3> > select_ln321_fu_381_p3;
    sc_signal< sc_lv<3> > select_ln124_fu_395_p3;
    sc_signal< sc_lv<3> > zext_ln114_fu_443_p1;
    sc_signal< sc_lv<112> > p_Result_s_fu_421_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > tmp_11_fu_279_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_353_p3;
    sc_signal< sc_lv<1> > grp_fu_213_p3;
    sc_signal< sc_lv<1> > p_Result_5_fu_361_p2;
    sc_signal< sc_lv<3> > select_ln155_fu_367_p3;
    sc_signal< sc_lv<48> > trunc_ln321_fu_409_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<512> > dataOut_TDATA_int;
    sc_signal< sc_logic > dataOut_TVALID_int;
    sc_signal< sc_logic > dataOut_TREADY_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_apdone_blk;
    sc_signal< sc_lv<64> > dataOut_TKEEP_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > dataOut_TLAST_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_vld_out;
    sc_signal< bool > ap_condition_225;
    sc_signal< bool > ap_condition_291;
    sc_signal< bool > ap_condition_156;
    sc_signal< bool > ap_condition_342;
    sc_signal< bool > ap_condition_278;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const bool ap_const_boolean_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<14> ap_const_lv14_3FFF;
    static const sc_lv<32> ap_const_lv32_240;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_231;
    static const sc_lv<32> ap_const_lv32_190;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_232;
    static const sc_lv<32> ap_const_lv32_23F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<16> ap_const_lv16_8;
    static const sc_lv<400> ap_const_lv400_lc_1;
    static const sc_lv<50> ap_const_lv50_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_156();
    void thread_ap_condition_225();
    void thread_ap_condition_278();
    void thread_ap_condition_291();
    void thread_ap_condition_342();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_storemerge556_i_phi_fu_177_p4();
    void thread_ap_phi_reg_pp0_iter0_storemerge556_i_reg_174();
    void thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185();
    void thread_ap_predicate_op10_read_state1();
    void thread_ap_predicate_op25_read_state1();
    void thread_ap_predicate_op40_read_state1();
    void thread_ap_predicate_op45_read_state1();
    void thread_ap_predicate_op51_read_state1();
    void thread_ap_predicate_op71_write_state2();
    void thread_ap_predicate_op75_write_state2();
    void thread_ap_predicate_op85_write_state3();
    void thread_ap_predicate_op88_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_arpTableReplay_V_TDATA_blk_n();
    void thread_arpTableReplay_V_TREADY();
    void thread_dataOut_TDATA_blk_n();
    void thread_dataOut_TDATA_int();
    void thread_dataOut_TKEEP_int();
    void thread_dataOut_TLAST_int();
    void thread_dataOut_TVALID();
    void thread_dataOut_TVALID_int();
    void thread_grp_fu_205_p3();
    void thread_grp_fu_213_p3();
    void thread_grp_nbreadreq_fu_112_p3();
    void thread_grp_nbreadreq_fu_126_p3();
    void thread_ip_header_checksum_V_blk_n();
    void thread_ip_header_checksum_V_read();
    void thread_mw_state_load_load_fu_221_p1();
    void thread_no_ip_header_out_V_blk_n();
    void thread_no_ip_header_out_V_read();
    void thread_p_Result_10_fu_490_p3();
    void thread_p_Result_11_fu_469_p3();
    void thread_p_Result_12_fu_476_p3();
    void thread_p_Result_13_fu_453_p3();
    void thread_p_Result_14_fu_461_p3();
    void thread_p_Result_5_fu_361_p2();
    void thread_p_Result_8_fu_287_p2();
    void thread_p_Result_9_fu_483_p3();
    void thread_p_Result_s_fu_421_p4();
    void thread_select_ln124_fu_395_p3();
    void thread_select_ln155_fu_367_p3();
    void thread_select_ln187_fu_293_p3();
    void thread_select_ln321_fu_381_p3();
    void thread_tmp_11_fu_279_p3();
    void thread_tmp_5_fu_413_p3();
    void thread_tmp_9_fu_353_p3();
    void thread_tmp_last_V_fu_375_p2();
    void thread_tmp_nbreadreq_fu_140_p3();
    void thread_trunc_ln321_fu_409_p1();
    void thread_trunc_ln647_1_fu_233_p1();
    void thread_trunc_ln647_fu_307_p1();
    void thread_zext_ln114_fu_443_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
