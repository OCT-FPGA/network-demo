// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "handle_output.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic handle_output::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic handle_output::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> handle_output::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> handle_output::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool handle_output::ap_const_boolean_1 = true;
const sc_lv<3> handle_output::ap_const_lv3_4 = "100";
const sc_lv<1> handle_output::ap_const_lv1_1 = "1";
const sc_lv<3> handle_output::ap_const_lv3_3 = "11";
const sc_lv<3> handle_output::ap_const_lv3_2 = "10";
const sc_lv<3> handle_output::ap_const_lv3_1 = "1";
const sc_lv<3> handle_output::ap_const_lv3_0 = "000";
const sc_lv<3> handle_output::ap_const_lv3_5 = "101";
const bool handle_output::ap_const_boolean_0 = false;
const sc_lv<2> handle_output::ap_const_lv2_3 = "11";
const sc_lv<2> handle_output::ap_const_lv2_1 = "1";
const sc_lv<1> handle_output::ap_const_lv1_0 = "0";
const sc_lv<3> handle_output::ap_const_lv3_7 = "111";
const sc_lv<3> handle_output::ap_const_lv3_6 = "110";
const sc_lv<14> handle_output::ap_const_lv14_3FFF = "11111111111111";
const sc_lv<32> handle_output::ap_const_lv32_240 = "1001000000";
const sc_lv<32> handle_output::ap_const_lv32_200 = "1000000000";
const sc_lv<32> handle_output::ap_const_lv32_231 = "1000110001";
const sc_lv<32> handle_output::ap_const_lv32_190 = "110010000";
const sc_lv<32> handle_output::ap_const_lv32_1FF = "111111111";
const sc_lv<32> handle_output::ap_const_lv32_232 = "1000110010";
const sc_lv<32> handle_output::ap_const_lv32_23F = "1000111111";
const sc_lv<32> handle_output::ap_const_lv32_30 = "110000";
const sc_lv<16> handle_output::ap_const_lv16_8 = "1000";
const sc_lv<400> handle_output::ap_const_lv400_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<50> handle_output::ap_const_lv50_0 = "00000000000000000000000000000000000000000000000000";

handle_output::handle_output(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_dataOut_V_data_V_U = new regslice_both<512>("regslice_both_dataOut_V_data_V_U");
    regslice_both_dataOut_V_data_V_U->ap_clk(ap_clk);
    regslice_both_dataOut_V_data_V_U->ap_rst(ap_rst);
    regslice_both_dataOut_V_data_V_U->data_in(dataOut_TDATA_int);
    regslice_both_dataOut_V_data_V_U->vld_in(dataOut_TVALID_int);
    regslice_both_dataOut_V_data_V_U->ack_in(dataOut_TREADY_int);
    regslice_both_dataOut_V_data_V_U->data_out(dataOut_TDATA);
    regslice_both_dataOut_V_data_V_U->vld_out(regslice_both_dataOut_V_data_V_U_vld_out);
    regslice_both_dataOut_V_data_V_U->ack_out(dataOut_TREADY);
    regslice_both_dataOut_V_data_V_U->apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk);
    regslice_both_dataOut_V_keep_V_U = new regslice_both<64>("regslice_both_dataOut_V_keep_V_U");
    regslice_both_dataOut_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_dataOut_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_dataOut_V_keep_V_U->data_in(dataOut_TKEEP_int);
    regslice_both_dataOut_V_keep_V_U->vld_in(dataOut_TVALID_int);
    regslice_both_dataOut_V_keep_V_U->ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy);
    regslice_both_dataOut_V_keep_V_U->data_out(dataOut_TKEEP);
    regslice_both_dataOut_V_keep_V_U->vld_out(regslice_both_dataOut_V_keep_V_U_vld_out);
    regslice_both_dataOut_V_keep_V_U->ack_out(dataOut_TREADY);
    regslice_both_dataOut_V_keep_V_U->apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk);
    regslice_both_dataOut_V_last_V_U = new regslice_both<1>("regslice_both_dataOut_V_last_V_U");
    regslice_both_dataOut_V_last_V_U->ap_clk(ap_clk);
    regslice_both_dataOut_V_last_V_U->ap_rst(ap_rst);
    regslice_both_dataOut_V_last_V_U->data_in(dataOut_TLAST_int);
    regslice_both_dataOut_V_last_V_U->vld_in(dataOut_TVALID_int);
    regslice_both_dataOut_V_last_V_U->ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy);
    regslice_both_dataOut_V_last_V_U->data_out(dataOut_TLAST);
    regslice_both_dataOut_V_last_V_U->vld_out(regslice_both_dataOut_V_last_V_U_vld_out);
    regslice_both_dataOut_V_last_V_U->ack_out(dataOut_TREADY);
    regslice_both_dataOut_V_last_V_U->apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( no_ip_header_out_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ip_header_checksum_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( arpTableReplay_V_TVALID );
    sensitive << ( ap_predicate_op51_read_state1 );
    sensitive << ( regslice_both_dataOut_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( no_ip_header_out_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ip_header_checksum_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( arpTableReplay_V_TVALID );
    sensitive << ( ap_predicate_op51_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_dataOut_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( no_ip_header_out_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ip_header_checksum_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( arpTableReplay_V_TVALID );
    sensitive << ( ap_predicate_op51_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_dataOut_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( no_ip_header_out_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ip_header_checksum_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( arpTableReplay_V_TVALID );
    sensitive << ( ap_predicate_op51_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( dataOut_TREADY_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( mw_state_load_reg_497_pp0_iter1_reg );
    sensitive << ( ap_predicate_op85_write_state3 );
    sensitive << ( ap_predicate_op88_write_state3 );
    sensitive << ( dataOut_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( regslice_both_dataOut_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_condition_156);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_225);
    sensitive << ( grp_nbreadreq_fu_112_p3 );
    sensitive << ( mw_state );
    sensitive << ( grp_fu_205_p3 );

    SC_METHOD(thread_ap_condition_278);
    sensitive << ( tmp_nbreadreq_fu_140_p3 );
    sensitive << ( mw_state );
    sensitive << ( tmp_5_fu_413_p3 );

    SC_METHOD(thread_ap_condition_291);
    sensitive << ( grp_nbreadreq_fu_112_p3 );
    sensitive << ( mw_state );
    sensitive << ( grp_fu_205_p3 );

    SC_METHOD(thread_ap_condition_342);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_storemerge556_i_phi_fu_177_p4);
    sensitive << ( tmp_nbreadreq_fu_140_p3 );
    sensitive << ( mw_state );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge556_i_reg_174 );
    sensitive << ( tmp_5_fu_413_p3 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge556_i_reg_174);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185);

    SC_METHOD(thread_ap_predicate_op10_read_state1);
    sensitive << ( grp_nbreadreq_fu_112_p3 );
    sensitive << ( mw_state );

    SC_METHOD(thread_ap_predicate_op25_read_state1);
    sensitive << ( grp_nbreadreq_fu_126_p3 );
    sensitive << ( mw_state );

    SC_METHOD(thread_ap_predicate_op40_read_state1);
    sensitive << ( grp_nbreadreq_fu_112_p3 );
    sensitive << ( mw_state );

    SC_METHOD(thread_ap_predicate_op45_read_state1);
    sensitive << ( grp_nbreadreq_fu_126_p3 );
    sensitive << ( mw_state );

    SC_METHOD(thread_ap_predicate_op51_read_state1);
    sensitive << ( tmp_nbreadreq_fu_140_p3 );
    sensitive << ( mw_state );

    SC_METHOD(thread_ap_predicate_op71_write_state2);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( tmp_4_reg_515 );

    SC_METHOD(thread_ap_predicate_op75_write_state2);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( tmp_3_reg_537 );

    SC_METHOD(thread_ap_predicate_op85_write_state3);
    sensitive << ( mw_state_load_reg_497_pp0_iter1_reg );
    sensitive << ( tmp_4_reg_515_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op88_write_state3);
    sensitive << ( mw_state_load_reg_497_pp0_iter1_reg );
    sensitive << ( tmp_3_reg_537_pp0_iter1_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_arpTableReplay_V_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( arpTableReplay_V_TVALID );
    sensitive << ( ap_predicate_op51_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_arpTableReplay_V_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op51_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dataOut_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( mw_state_load_reg_497_pp0_iter1_reg );
    sensitive << ( ap_predicate_op85_write_state3 );
    sensitive << ( ap_predicate_op88_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( dataOut_TREADY_int );

    SC_METHOD(thread_dataOut_TDATA_int);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( p_Result_13_fu_453_p3 );
    sensitive << ( p_Result_11_fu_469_p3 );
    sensitive << ( p_Result_9_fu_483_p3 );
    sensitive << ( ap_condition_342 );

    SC_METHOD(thread_dataOut_TKEEP_int);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( p_Result_14_fu_461_p3 );
    sensitive << ( p_Result_12_fu_476_p3 );
    sensitive << ( p_Result_10_fu_490_p3 );
    sensitive << ( ap_condition_342 );

    SC_METHOD(thread_dataOut_TLAST_int);
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( tmp_last_V_reg_551 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 );
    sensitive << ( ap_condition_342 );

    SC_METHOD(thread_dataOut_TVALID);
    sensitive << ( regslice_both_dataOut_V_data_V_U_vld_out );

    SC_METHOD(thread_dataOut_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( mw_state_load_reg_497 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op75_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_205_p3);
    sensitive << ( no_ip_header_out_V_dout );

    SC_METHOD(thread_grp_fu_213_p3);
    sensitive << ( ip_header_checksum_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_112_p3);
    sensitive << ( no_ip_header_out_V_empty_n );

    SC_METHOD(thread_grp_nbreadreq_fu_126_p3);
    sensitive << ( ip_header_checksum_V_empty_n );

    SC_METHOD(thread_ip_header_checksum_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ip_header_checksum_V_empty_n );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ip_header_checksum_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op25_read_state1 );
    sensitive << ( ap_predicate_op45_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mw_state_load_load_fu_221_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mw_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_no_ip_header_out_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( no_ip_header_out_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_no_ip_header_out_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( ap_predicate_op40_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Result_10_fu_490_p3);
    sensitive << ( previous_word_keep_V_1_reg_508 );
    sensitive << ( p_Result_2_i_reg_546 );

    SC_METHOD(thread_p_Result_11_fu_469_p3);
    sensitive << ( previous_word_data_V_1_reg_501 );
    sensitive << ( trunc_ln647_1_reg_522 );

    SC_METHOD(thread_p_Result_12_fu_476_p3);
    sensitive << ( previous_word_keep_V_1_reg_508 );
    sensitive << ( p_Result_8_i_reg_527 );

    SC_METHOD(thread_p_Result_13_fu_453_p3);
    sensitive << ( previous_word_data_V_1_reg_501 );

    SC_METHOD(thread_p_Result_14_fu_461_p3);
    sensitive << ( previous_word_keep_V_1_reg_508 );

    SC_METHOD(thread_p_Result_5_fu_361_p2);
    sensitive << ( tmp_9_fu_353_p3 );

    SC_METHOD(thread_p_Result_8_fu_287_p2);
    sensitive << ( tmp_11_fu_279_p3 );

    SC_METHOD(thread_p_Result_9_fu_483_p3);
    sensitive << ( previous_word_data_V_1_reg_501 );
    sensitive << ( trunc_ln647_reg_541 );

    SC_METHOD(thread_p_Result_s_fu_421_p4);
    sensitive << ( myMacAddress_V );
    sensitive << ( trunc_ln321_fu_409_p1 );

    SC_METHOD(thread_select_ln124_fu_395_p3);
    sensitive << ( grp_fu_213_p3 );

    SC_METHOD(thread_select_ln155_fu_367_p3);
    sensitive << ( tmp_9_fu_353_p3 );

    SC_METHOD(thread_select_ln187_fu_293_p3);
    sensitive << ( tmp_11_fu_279_p3 );

    SC_METHOD(thread_select_ln321_fu_381_p3);
    sensitive << ( grp_fu_213_p3 );
    sensitive << ( select_ln155_fu_367_p3 );

    SC_METHOD(thread_tmp_11_fu_279_p3);
    sensitive << ( no_ip_header_out_V_dout );

    SC_METHOD(thread_tmp_5_fu_413_p3);
    sensitive << ( arpTableReplay_V_TDATA );

    SC_METHOD(thread_tmp_9_fu_353_p3);
    sensitive << ( ip_header_checksum_V_dout );

    SC_METHOD(thread_tmp_last_V_fu_375_p2);
    sensitive << ( grp_fu_213_p3 );
    sensitive << ( p_Result_5_fu_361_p2 );

    SC_METHOD(thread_tmp_nbreadreq_fu_140_p3);
    sensitive << ( arpTableReplay_V_TVALID );

    SC_METHOD(thread_trunc_ln321_fu_409_p1);
    sensitive << ( arpTableReplay_V_TDATA );

    SC_METHOD(thread_trunc_ln647_1_fu_233_p1);
    sensitive << ( no_ip_header_out_V_dout );

    SC_METHOD(thread_trunc_ln647_fu_307_p1);
    sensitive << ( ip_header_checksum_V_dout );

    SC_METHOD(thread_zext_ln114_fu_443_p1);
    sensitive << ( ap_phi_mux_storemerge556_i_phi_fu_177_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    mw_state = "000";
    previous_word_data_V = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    previous_word_keep_V = "00000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "handle_output_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, no_ip_header_out_V_dout, "(port)no_ip_header_out_V_dout");
    sc_trace(mVcdFile, no_ip_header_out_V_empty_n, "(port)no_ip_header_out_V_empty_n");
    sc_trace(mVcdFile, no_ip_header_out_V_read, "(port)no_ip_header_out_V_read");
    sc_trace(mVcdFile, ip_header_checksum_V_dout, "(port)ip_header_checksum_V_dout");
    sc_trace(mVcdFile, ip_header_checksum_V_empty_n, "(port)ip_header_checksum_V_empty_n");
    sc_trace(mVcdFile, ip_header_checksum_V_read, "(port)ip_header_checksum_V_read");
    sc_trace(mVcdFile, arpTableReplay_V_TVALID, "(port)arpTableReplay_V_TVALID");
    sc_trace(mVcdFile, dataOut_TREADY, "(port)dataOut_TREADY");
    sc_trace(mVcdFile, arpTableReplay_V_TDATA, "(port)arpTableReplay_V_TDATA");
    sc_trace(mVcdFile, arpTableReplay_V_TREADY, "(port)arpTableReplay_V_TREADY");
    sc_trace(mVcdFile, myMacAddress_V, "(port)myMacAddress_V");
    sc_trace(mVcdFile, dataOut_TDATA, "(port)dataOut_TDATA");
    sc_trace(mVcdFile, dataOut_TVALID, "(port)dataOut_TVALID");
    sc_trace(mVcdFile, dataOut_TKEEP, "(port)dataOut_TKEEP");
    sc_trace(mVcdFile, dataOut_TLAST, "(port)dataOut_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, mw_state_load_load_fu_221_p1, "mw_state_load_load_fu_221_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_112_p3, "grp_nbreadreq_fu_112_p3");
    sc_trace(mVcdFile, ap_predicate_op10_read_state1, "ap_predicate_op10_read_state1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_126_p3, "grp_nbreadreq_fu_126_p3");
    sc_trace(mVcdFile, ap_predicate_op25_read_state1, "ap_predicate_op25_read_state1");
    sc_trace(mVcdFile, ap_predicate_op40_read_state1, "ap_predicate_op40_read_state1");
    sc_trace(mVcdFile, ap_predicate_op45_read_state1, "ap_predicate_op45_read_state1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_140_p3, "tmp_nbreadreq_fu_140_p3");
    sc_trace(mVcdFile, ap_predicate_op51_read_state1, "ap_predicate_op51_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, mw_state_load_reg_497, "mw_state_load_reg_497");
    sc_trace(mVcdFile, tmp_4_reg_515, "tmp_4_reg_515");
    sc_trace(mVcdFile, ap_predicate_op71_write_state2, "ap_predicate_op71_write_state2");
    sc_trace(mVcdFile, tmp_3_reg_537, "tmp_3_reg_537");
    sc_trace(mVcdFile, ap_predicate_op75_write_state2, "ap_predicate_op75_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, regslice_both_dataOut_V_data_V_U_apdone_blk, "regslice_both_dataOut_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, mw_state_load_reg_497_pp0_iter1_reg, "mw_state_load_reg_497_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_4_reg_515_pp0_iter1_reg, "tmp_4_reg_515_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op85_write_state3, "ap_predicate_op85_write_state3");
    sc_trace(mVcdFile, tmp_3_reg_537_pp0_iter1_reg, "tmp_3_reg_537_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op88_write_state3, "ap_predicate_op88_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, mw_state, "mw_state");
    sc_trace(mVcdFile, previous_word_data_V, "previous_word_data_V");
    sc_trace(mVcdFile, previous_word_keep_V, "previous_word_keep_V");
    sc_trace(mVcdFile, arpTableReplay_V_TDATA_blk_n, "arpTableReplay_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, dataOut_TDATA_blk_n, "dataOut_TDATA_blk_n");
    sc_trace(mVcdFile, ip_header_checksum_V_blk_n, "ip_header_checksum_V_blk_n");
    sc_trace(mVcdFile, no_ip_header_out_V_blk_n, "no_ip_header_out_V_blk_n");
    sc_trace(mVcdFile, previous_word_data_V_1_reg_501, "previous_word_data_V_1_reg_501");
    sc_trace(mVcdFile, previous_word_keep_V_1_reg_508, "previous_word_keep_V_1_reg_508");
    sc_trace(mVcdFile, trunc_ln647_1_fu_233_p1, "trunc_ln647_1_fu_233_p1");
    sc_trace(mVcdFile, trunc_ln647_1_reg_522, "trunc_ln647_1_reg_522");
    sc_trace(mVcdFile, p_Result_8_i_reg_527, "p_Result_8_i_reg_527");
    sc_trace(mVcdFile, p_Result_8_fu_287_p2, "p_Result_8_fu_287_p2");
    sc_trace(mVcdFile, grp_fu_205_p3, "grp_fu_205_p3");
    sc_trace(mVcdFile, trunc_ln647_fu_307_p1, "trunc_ln647_fu_307_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_541, "trunc_ln647_reg_541");
    sc_trace(mVcdFile, p_Result_2_i_reg_546, "p_Result_2_i_reg_546");
    sc_trace(mVcdFile, tmp_last_V_fu_375_p2, "tmp_last_V_fu_375_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_551, "tmp_last_V_reg_551");
    sc_trace(mVcdFile, p_Result_13_fu_453_p3, "p_Result_13_fu_453_p3");
    sc_trace(mVcdFile, p_Result_14_fu_461_p3, "p_Result_14_fu_461_p3");
    sc_trace(mVcdFile, p_Result_11_fu_469_p3, "p_Result_11_fu_469_p3");
    sc_trace(mVcdFile, p_Result_12_fu_476_p3, "p_Result_12_fu_476_p3");
    sc_trace(mVcdFile, p_Result_9_fu_483_p3, "p_Result_9_fu_483_p3");
    sc_trace(mVcdFile, p_Result_10_fu_490_p3, "p_Result_10_fu_490_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_storemerge556_i_phi_fu_177_p4, "ap_phi_mux_storemerge556_i_phi_fu_177_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge556_i_reg_174, "ap_phi_reg_pp0_iter0_storemerge556_i_reg_174");
    sc_trace(mVcdFile, tmp_5_fu_413_p3, "tmp_5_fu_413_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185, "ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185, "ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185");
    sc_trace(mVcdFile, select_ln187_fu_293_p3, "select_ln187_fu_293_p3");
    sc_trace(mVcdFile, select_ln321_fu_381_p3, "select_ln321_fu_381_p3");
    sc_trace(mVcdFile, select_ln124_fu_395_p3, "select_ln124_fu_395_p3");
    sc_trace(mVcdFile, zext_ln114_fu_443_p1, "zext_ln114_fu_443_p1");
    sc_trace(mVcdFile, p_Result_s_fu_421_p4, "p_Result_s_fu_421_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_11_fu_279_p3, "tmp_11_fu_279_p3");
    sc_trace(mVcdFile, tmp_9_fu_353_p3, "tmp_9_fu_353_p3");
    sc_trace(mVcdFile, grp_fu_213_p3, "grp_fu_213_p3");
    sc_trace(mVcdFile, p_Result_5_fu_361_p2, "p_Result_5_fu_361_p2");
    sc_trace(mVcdFile, select_ln155_fu_367_p3, "select_ln155_fu_367_p3");
    sc_trace(mVcdFile, trunc_ln321_fu_409_p1, "trunc_ln321_fu_409_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, dataOut_TDATA_int, "dataOut_TDATA_int");
    sc_trace(mVcdFile, dataOut_TVALID_int, "dataOut_TVALID_int");
    sc_trace(mVcdFile, dataOut_TREADY_int, "dataOut_TREADY_int");
    sc_trace(mVcdFile, regslice_both_dataOut_V_data_V_U_vld_out, "regslice_both_dataOut_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_dataOut_V_keep_V_U_apdone_blk, "regslice_both_dataOut_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, dataOut_TKEEP_int, "dataOut_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_dataOut_V_keep_V_U_ack_in_dummy, "regslice_both_dataOut_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_dataOut_V_keep_V_U_vld_out, "regslice_both_dataOut_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_dataOut_V_last_V_U_apdone_blk, "regslice_both_dataOut_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, dataOut_TLAST_int, "dataOut_TLAST_int");
    sc_trace(mVcdFile, regslice_both_dataOut_V_last_V_U_ack_in_dummy, "regslice_both_dataOut_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_dataOut_V_last_V_U_vld_out, "regslice_both_dataOut_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_225, "ap_condition_225");
    sc_trace(mVcdFile, ap_condition_291, "ap_condition_291");
    sc_trace(mVcdFile, ap_condition_156, "ap_condition_156");
    sc_trace(mVcdFile, ap_condition_342, "ap_condition_342");
    sc_trace(mVcdFile, ap_condition_278, "ap_condition_278");
#endif

    }
}

handle_output::~handle_output() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_dataOut_V_data_V_U;
    delete regslice_both_dataOut_V_keep_V_U;
    delete regslice_both_dataOut_V_last_V_U;
}

void handle_output::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_156.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_291.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_condition_225.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 = p_Result_8_fu_287_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185 = ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_140_p3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mw_state = zext_ln114_fu_443_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()) && 
                esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mw_state = select_ln124_fu_395_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mw_state = select_ln321_fu_381_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_205_p3.read()))) {
        mw_state = select_ln187_fu_293_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,3,3>(mw_state_load_load_fu_221_p1.read(), ap_const_lv3_5)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_205_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 (esl_seteq<1,3,3>(mw_state_load_load_fu_221_p1.read(), ap_const_lv3_7) || 
                  esl_seteq<1,3,3>(mw_state_load_load_fu_221_p1.read(), ap_const_lv3_6))))) {
        mw_state = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_156.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_278.read(), ap_const_boolean_1)) {
            previous_word_data_V = p_Result_s_fu_421_p4.read();
        } else if ((esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()))) {
            previous_word_data_V = ip_header_checksum_V_dout.read().range(511, 400);
        } else if ((esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && 
                    esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1))) {
            previous_word_data_V = no_ip_header_out_V_dout.read().range(511, 400);
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_156.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_278.read(), ap_const_boolean_1)) {
            previous_word_keep_V = ap_const_lv14_3FFF;
        } else if ((esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()))) {
            previous_word_keep_V = ip_header_checksum_V_dout.read().range(575, 562);
        } else if ((esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && 
                    esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1))) {
            previous_word_keep_V = no_ip_header_out_V_dout.read().range(575, 562);
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mw_state_load_reg_497 = mw_state.read();
        mw_state_load_reg_497_pp0_iter1_reg = mw_state_load_reg_497.read();
        previous_word_data_V_1_reg_501 = previous_word_data_V.read();
        previous_word_keep_V_1_reg_508 = previous_word_keep_V.read();
        tmp_3_reg_537_pp0_iter1_reg = tmp_3_reg_537.read();
        tmp_4_reg_515_pp0_iter1_reg = tmp_4_reg_515.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_2_i_reg_546 = ip_header_checksum_V_dout.read().range(561, 512);
        tmp_last_V_reg_551 = tmp_last_V_fu_375_p2.read();
        trunc_ln647_reg_541 = trunc_ln647_fu_307_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_8_i_reg_527 = no_ip_header_out_V_dout.read().range(561, 512);
        trunc_ln647_1_reg_522 = trunc_ln647_1_fu_233_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_3_reg_537 = grp_nbreadreq_fu_126_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_515 = grp_nbreadreq_fu_112_p3.read();
    }
}

void handle_output::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void handle_output::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void handle_output::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, arpTableReplay_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_dataOut_V_data_V_U_apdone_blk.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void handle_output::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, arpTableReplay_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_dataOut_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void handle_output::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, arpTableReplay_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_dataOut_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void handle_output::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, no_ip_header_out_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ip_header_checksum_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, arpTableReplay_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void handle_output::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())));
}

void handle_output::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void handle_output::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,3,3>(ap_const_lv3_5, mw_state_load_reg_497_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op85_write_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op88_write_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dataOut_TREADY_int.read())));
}

void handle_output::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_dataOut_V_data_V_U_apdone_blk.read());
}

void handle_output::thread_ap_condition_156() {
    ap_condition_156 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void handle_output::thread_ap_condition_225() {
    ap_condition_225 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_205_p3.read()));
}

void handle_output::thread_ap_condition_278() {
    ap_condition_278 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_140_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_413_p3.read()));
}

void handle_output::thread_ap_condition_291() {
    ap_condition_291 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(grp_fu_205_p3.read(), ap_const_lv1_0));
}

void handle_output::thread_ap_condition_342() {
    ap_condition_342 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void handle_output::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void handle_output::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void handle_output::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void handle_output::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void handle_output::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void handle_output::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void handle_output::thread_ap_phi_mux_storemerge556_i_phi_fu_177_p4() {
    if ((esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_140_p3.read()))) {
        if (esl_seteq<1,1,1>(tmp_5_fu_413_p3.read(), ap_const_lv1_0)) {
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_413_p3.read())) {
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_const_lv2_3;
        } else {
            ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_phi_reg_pp0_iter0_storemerge556_i_reg_174.read();
        }
    } else {
        ap_phi_mux_storemerge556_i_phi_fu_177_p4 = ap_phi_reg_pp0_iter0_storemerge556_i_reg_174.read();
    }
}

void handle_output::thread_ap_phi_reg_pp0_iter0_storemerge556_i_reg_174() {
    ap_phi_reg_pp0_iter0_storemerge556_i_reg_174 =  (sc_lv<2>) ("XX");
}

void handle_output::thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185() {
    ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_185 =  (sc_lv<1>) ("X");
}

void handle_output::thread_ap_predicate_op10_read_state1() {
    ap_predicate_op10_read_state1 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1));
}

void handle_output::thread_ap_predicate_op25_read_state1() {
    ap_predicate_op25_read_state1 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_3) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()));
}

void handle_output::thread_ap_predicate_op40_read_state1() {
    ap_predicate_op40_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_112_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_2));
}

void handle_output::thread_ap_predicate_op45_read_state1() {
    ap_predicate_op45_read_state1 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_126_p3.read()) && esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_1));
}

void handle_output::thread_ap_predicate_op51_read_state1() {
    ap_predicate_op51_read_state1 = (esl_seteq<1,3,3>(mw_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_140_p3.read()));
}

void handle_output::thread_ap_predicate_op71_write_state2() {
    ap_predicate_op71_write_state2 = (esl_seteq<1,3,3>(ap_const_lv3_4, mw_state_load_reg_497.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_515.read()));
}

void handle_output::thread_ap_predicate_op75_write_state2() {
    ap_predicate_op75_write_state2 = (esl_seteq<1,3,3>(ap_const_lv3_3, mw_state_load_reg_497.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_537.read()));
}

void handle_output::thread_ap_predicate_op85_write_state3() {
    ap_predicate_op85_write_state3 = (esl_seteq<1,3,3>(ap_const_lv3_4, mw_state_load_reg_497_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_515_pp0_iter1_reg.read()));
}

void handle_output::thread_ap_predicate_op88_write_state3() {
    ap_predicate_op88_write_state3 = (esl_seteq<1,3,3>(ap_const_lv3_3, mw_state_load_reg_497_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_537_pp0_iter1_reg.read()));
}

void handle_output::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void handle_output::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void handle_output::thread_arpTableReplay_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        arpTableReplay_V_TDATA_blk_n = arpTableReplay_V_TVALID.read();
    } else {
        arpTableReplay_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void handle_output::thread_arpTableReplay_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        arpTableReplay_V_TREADY = ap_const_logic_1;
    } else {
        arpTableReplay_V_TREADY = ap_const_logic_0;
    }
}

void handle_output::thread_dataOut_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op88_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op85_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,3,3>(ap_const_lv3_5, mw_state_load_reg_497_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        dataOut_TDATA_blk_n = dataOut_TREADY_int.read();
    } else {
        dataOut_TDATA_blk_n = ap_const_logic_1;
    }
}

void handle_output::thread_dataOut_TDATA_int() {
    if (esl_seteq<1,1,1>(ap_condition_342.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read())) {
            dataOut_TDATA_int = p_Result_9_fu_483_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) {
            dataOut_TDATA_int = p_Result_11_fu_469_p3.read();
        } else if (esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5)) {
            dataOut_TDATA_int = p_Result_13_fu_453_p3.read();
        } else {
            dataOut_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        dataOut_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void handle_output::thread_dataOut_TKEEP_int() {
    if (esl_seteq<1,1,1>(ap_condition_342.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read())) {
            dataOut_TKEEP_int = p_Result_10_fu_490_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) {
            dataOut_TKEEP_int = p_Result_12_fu_476_p3.read();
        } else if (esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5)) {
            dataOut_TKEEP_int = p_Result_14_fu_461_p3.read();
        } else {
            dataOut_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        dataOut_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void handle_output::thread_dataOut_TLAST_int() {
    if (esl_seteq<1,1,1>(ap_condition_342.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read())) {
            dataOut_TLAST_int = tmp_last_V_reg_551.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) {
            dataOut_TLAST_int = ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_185.read();
        } else if (esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5)) {
            dataOut_TLAST_int = ap_const_lv1_1;
        } else {
            dataOut_TLAST_int =  (sc_lv<1>) ("X");
        }
    } else {
        dataOut_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void handle_output::thread_dataOut_TVALID() {
    dataOut_TVALID = regslice_both_dataOut_V_data_V_U_vld_out.read();
}

void handle_output::thread_dataOut_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,3,3>(mw_state_load_reg_497.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op75_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        dataOut_TVALID_int = ap_const_logic_1;
    } else {
        dataOut_TVALID_int = ap_const_logic_0;
    }
}

void handle_output::thread_grp_fu_205_p3() {
    grp_fu_205_p3 = no_ip_header_out_V_dout.read().range(576, 576);
}

void handle_output::thread_grp_fu_213_p3() {
    grp_fu_213_p3 = ip_header_checksum_V_dout.read().range(576, 576);
}

void handle_output::thread_grp_nbreadreq_fu_112_p3() {
    grp_nbreadreq_fu_112_p3 =  (sc_lv<1>) ((no_ip_header_out_V_empty_n.read()));
}

void handle_output::thread_grp_nbreadreq_fu_126_p3() {
    grp_nbreadreq_fu_126_p3 =  (sc_lv<1>) ((ip_header_checksum_V_empty_n.read()));
}

void handle_output::thread_ip_header_checksum_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        ip_header_checksum_V_blk_n = ip_header_checksum_V_empty_n.read();
    } else {
        ip_header_checksum_V_blk_n = ap_const_logic_1;
    }
}

void handle_output::thread_ip_header_checksum_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op25_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        ip_header_checksum_V_read = ap_const_logic_1;
    } else {
        ip_header_checksum_V_read = ap_const_logic_0;
    }
}

void handle_output::thread_mw_state_load_load_fu_221_p1() {
    mw_state_load_load_fu_221_p1 = mw_state.read();
}

void handle_output::thread_no_ip_header_out_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        no_ip_header_out_V_blk_n = no_ip_header_out_V_empty_n.read();
    } else {
        no_ip_header_out_V_blk_n = ap_const_logic_1;
    }
}

void handle_output::thread_no_ip_header_out_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op10_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        no_ip_header_out_V_read = ap_const_logic_1;
    } else {
        no_ip_header_out_V_read = ap_const_logic_0;
    }
}

void handle_output::thread_p_Result_10_fu_490_p3() {
    p_Result_10_fu_490_p3 = esl_concat<50,14>(p_Result_2_i_reg_546.read(), previous_word_keep_V_1_reg_508.read());
}

void handle_output::thread_p_Result_11_fu_469_p3() {
    p_Result_11_fu_469_p3 = esl_concat<400,112>(trunc_ln647_1_reg_522.read(), previous_word_data_V_1_reg_501.read());
}

void handle_output::thread_p_Result_12_fu_476_p3() {
    p_Result_12_fu_476_p3 = esl_concat<50,14>(p_Result_8_i_reg_527.read(), previous_word_keep_V_1_reg_508.read());
}

void handle_output::thread_p_Result_13_fu_453_p3() {
    p_Result_13_fu_453_p3 = esl_concat<400,112>(ap_const_lv400_lc_1, previous_word_data_V_1_reg_501.read());
}

void handle_output::thread_p_Result_14_fu_461_p3() {
    p_Result_14_fu_461_p3 = esl_concat<50,14>(ap_const_lv50_0, previous_word_keep_V_1_reg_508.read());
}

void handle_output::thread_p_Result_5_fu_361_p2() {
    p_Result_5_fu_361_p2 = (tmp_9_fu_353_p3.read() ^ ap_const_lv1_1);
}

void handle_output::thread_p_Result_8_fu_287_p2() {
    p_Result_8_fu_287_p2 = (tmp_11_fu_279_p3.read() ^ ap_const_lv1_1);
}

void handle_output::thread_p_Result_9_fu_483_p3() {
    p_Result_9_fu_483_p3 = esl_concat<400,112>(trunc_ln647_reg_541.read(), previous_word_data_V_1_reg_501.read());
}

void handle_output::thread_p_Result_s_fu_421_p4() {
    p_Result_s_fu_421_p4 = esl_concat<64,48>(esl_concat<16,48>(ap_const_lv16_8, myMacAddress_V.read()), trunc_ln321_fu_409_p1.read());
}

void handle_output::thread_select_ln124_fu_395_p3() {
    select_ln124_fu_395_p3 = (!grp_fu_213_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_213_p3.read()[0].to_bool())? ap_const_lv3_0: ap_const_lv3_2);
}

void handle_output::thread_select_ln155_fu_367_p3() {
    select_ln155_fu_367_p3 = (!tmp_9_fu_353_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_9_fu_353_p3.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_0);
}

void handle_output::thread_select_ln187_fu_293_p3() {
    select_ln187_fu_293_p3 = (!tmp_11_fu_279_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_11_fu_279_p3.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_0);
}

void handle_output::thread_select_ln321_fu_381_p3() {
    select_ln321_fu_381_p3 = (!grp_fu_213_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_213_p3.read()[0].to_bool())? select_ln155_fu_367_p3.read(): ap_const_lv3_4);
}

void handle_output::thread_tmp_11_fu_279_p3() {
    tmp_11_fu_279_p3 = no_ip_header_out_V_dout.read().range(562, 562);
}

void handle_output::thread_tmp_5_fu_413_p3() {
    tmp_5_fu_413_p3 = arpTableReplay_V_TDATA.read().range(48, 48);
}

void handle_output::thread_tmp_9_fu_353_p3() {
    tmp_9_fu_353_p3 = ip_header_checksum_V_dout.read().range(562, 562);
}

void handle_output::thread_tmp_last_V_fu_375_p2() {
    tmp_last_V_fu_375_p2 = (grp_fu_213_p3.read() & p_Result_5_fu_361_p2.read());
}

void handle_output::thread_tmp_nbreadreq_fu_140_p3() {
    tmp_nbreadreq_fu_140_p3 =  (sc_lv<1>) ((arpTableReplay_V_TVALID.read()));
}

void handle_output::thread_trunc_ln321_fu_409_p1() {
    trunc_ln321_fu_409_p1 = arpTableReplay_V_TDATA.read().range(48-1, 0);
}

void handle_output::thread_trunc_ln647_1_fu_233_p1() {
    trunc_ln647_1_fu_233_p1 = no_ip_header_out_V_dout.read().range(400-1, 0);
}

void handle_output::thread_trunc_ln647_fu_307_p1() {
    trunc_ln647_fu_307_p1 = ip_header_checksum_V_dout.read().range(400-1, 0);
}

void handle_output::thread_zext_ln114_fu_443_p1() {
    zext_ln114_fu_443_p1 = esl_zext<3,2>(ap_phi_mux_storemerge556_i_phi_fu_177_p4.read());
}

void handle_output::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

