-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity packet_identificatio is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_TVALID : IN STD_LOGIC;
    eth_level_pkt_V_din : OUT STD_LOGIC_VECTOR (579 downto 0);
    eth_level_pkt_V_full_n : IN STD_LOGIC;
    eth_level_pkt_V_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    s_axis_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    s_axis_TREADY : OUT STD_LOGIC;
    s_axis_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of packet_identificatio is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv16_806 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000110";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal grp_nbreadreq_fu_86_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op6_read_state1 : BOOLEAN;
    signal ap_predicate_op11_read_state1 : BOOLEAN;
    signal ap_predicate_op17_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal pi_fsm_state_load_reg_387 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op63_write_state2 : BOOLEAN;
    signal tmp_reg_408 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_3_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op71_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pi_fsm_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tdest_r_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal s_axis_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal eth_level_pkt_V_blk_n : STD_LOGIC;
    signal reg_144 : STD_LOGIC_VECTOR (511 downto 0);
    signal reg_148 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_126_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_403 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal sendWord_dest_V_fu_288_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sendWord_dest_V_reg_417 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln879_3_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_storemerge_i_phi_fu_118_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_reg_115 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln228_fu_338_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_111_fu_367_p1 : STD_LOGIC_VECTOR (579 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp3_fu_382_p1 : STD_LOGIC_VECTOR (579 downto 0);
    signal p_Result_i_i_9_fu_166_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_fu_156_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ethernetType_V_fu_176_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ipVersion_V_fu_184_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ipProtocol_V_fu_194_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln879_4_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_1_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_2_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln879_fu_278_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln198_fu_240_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln198_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_3_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_4_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_2_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_1_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_356_p5 : STD_LOGIC_VECTOR (578 downto 0);
    signal tmp_4_fu_372_p5 : STD_LOGIC_VECTOR (578 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_199 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pi_fsm_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                pi_fsm_state <= select_ln228_fu_338_p3;
            elsif ((((grp_fu_126_p1 = ap_const_lv1_1) and (grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_fu_126_p1 = ap_const_lv1_1) and (grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_2) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                pi_fsm_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln879_3_reg_422 <= or_ln879_3_fu_326_p2;
                sendWord_dest_V_reg_417 <= sendWord_dest_V_fu_288_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pi_fsm_state_load_reg_387 <= pi_fsm_state;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_144 <= s_axis_TDATA;
                reg_148 <= s_axis_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tdest_r_V <= sendWord_dest_V_fu_288_p3;
                tmp_last_V_2_reg_412 <= s_axis_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_reg_399 <= grp_nbreadreq_fu_86_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_last_V_reg_403 <= s_axis_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_408 <= grp_nbreadreq_fu_86_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln879_1_fu_266_p2 <= (icmp_ln879_3_fu_222_p2 and icmp_ln879_2_fu_216_p2);
    and_ln879_2_fu_272_p2 <= (and_ln879_fu_260_p2 and and_ln879_1_fu_266_p2);
    and_ln879_3_fu_296_p2 <= (or_ln198_fu_248_p2 and icmp_ln879_1_fu_210_p2);
    and_ln879_4_fu_308_p2 <= (xor_ln879_1_fu_302_p2 and and_ln879_fu_260_p2);
    and_ln879_fu_260_p2 <= (xor_ln879_fu_254_p2 and icmp_ln879_1_fu_210_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_TVALID, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1, eth_level_pkt_V_full_n, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1)) or ((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)))) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_TVALID, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1, eth_level_pkt_V_full_n, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1)) or ((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)))) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_TVALID, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1, eth_level_pkt_V_full_n, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1)) or ((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)))) or ((real_start = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(real_start, ap_done_reg, s_axis_TVALID, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)) or ((s_axis_TVALID = ap_const_logic_0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(eth_level_pkt_V_full_n, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1)) or ((eth_level_pkt_V_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_199_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_199 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_118_p4_assign_proc : process(grp_nbreadreq_fu_86_p5, pi_fsm_state, or_ln879_3_fu_326_p2, ap_phi_reg_pp0_iter0_storemerge_i_reg_115)
    begin
        if (((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0))) then
            if ((or_ln879_3_fu_326_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_phi_fu_118_p4 <= ap_const_lv2_2;
            elsif ((or_ln879_3_fu_326_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_phi_fu_118_p4 <= ap_const_lv2_1;
            else 
                ap_phi_mux_storemerge_i_phi_fu_118_p4 <= ap_phi_reg_pp0_iter0_storemerge_i_reg_115;
            end if;
        else 
            ap_phi_mux_storemerge_i_phi_fu_118_p4 <= ap_phi_reg_pp0_iter0_storemerge_i_reg_115;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_reg_115 <= "XX";

    ap_predicate_op11_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p5, pi_fsm_state)
    begin
                ap_predicate_op11_read_state1 <= ((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1));
    end process;


    ap_predicate_op17_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p5, pi_fsm_state)
    begin
                ap_predicate_op17_read_state1 <= ((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0));
    end process;


    ap_predicate_op63_write_state2_assign_proc : process(pi_fsm_state_load_reg_387, tmp_1_reg_399)
    begin
                ap_predicate_op63_write_state2 <= ((pi_fsm_state_load_reg_387 = ap_const_lv2_1) and (tmp_1_reg_399 = ap_const_lv1_1));
    end process;


    ap_predicate_op6_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p5, pi_fsm_state)
    begin
                ap_predicate_op6_read_state1 <= ((grp_nbreadreq_fu_86_p5 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_2));
    end process;


    ap_predicate_op71_write_state2_assign_proc : process(pi_fsm_state_load_reg_387, tmp_reg_408, or_ln879_3_reg_422)
    begin
                ap_predicate_op71_write_state2 <= ((pi_fsm_state_load_reg_387 = ap_const_lv2_0) and (or_ln879_3_reg_422 = ap_const_lv1_1) and (tmp_reg_408 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    eth_level_pkt_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, eth_level_pkt_V_full_n, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            eth_level_pkt_V_blk_n <= eth_level_pkt_V_full_n;
        else 
            eth_level_pkt_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    eth_level_pkt_V_din_assign_proc : process(ap_predicate_op63_write_state2, ap_predicate_op71_write_state2, tmp_111_fu_367_p1, tmp3_fu_382_p1, ap_condition_199)
    begin
        if ((ap_const_boolean_1 = ap_condition_199)) then
            if ((ap_predicate_op71_write_state2 = ap_const_boolean_1)) then 
                eth_level_pkt_V_din <= tmp3_fu_382_p1;
            elsif ((ap_predicate_op63_write_state2 = ap_const_boolean_1)) then 
                eth_level_pkt_V_din <= tmp_111_fu_367_p1;
            else 
                eth_level_pkt_V_din
            end if;
        else 
            eth_level_pkt_V_din
        end if; 
    end process;


    eth_level_pkt_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op63_write_state2, ap_predicate_op71_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op71_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            eth_level_pkt_V_write <= ap_const_logic_1;
        else 
            eth_level_pkt_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ethernetType_V_fu_176_p3 <= (p_Result_i_i_9_fu_166_p4 & p_Result_i_i_fu_156_p4);
    grp_fu_126_p1 <= s_axis_TLAST;
    grp_nbreadreq_fu_86_p5 <= (0=>(s_axis_TVALID), others=>'-');
    icmp_ln879_1_fu_210_p2 <= "1" when (ethernetType_V_fu_176_p3 = ap_const_lv16_800) else "0";
    icmp_ln879_2_fu_216_p2 <= "1" when (ipVersion_V_fu_184_p4 = ap_const_lv4_4) else "0";
    icmp_ln879_3_fu_222_p2 <= "1" when (ipProtocol_V_fu_194_p4 = ap_const_lv8_1) else "0";
    icmp_ln879_4_fu_228_p2 <= "1" when (ipProtocol_V_fu_194_p4 = ap_const_lv8_6) else "0";
    icmp_ln879_5_fu_234_p2 <= "1" when (ipProtocol_V_fu_194_p4 = ap_const_lv8_11) else "0";
    icmp_ln879_fu_204_p2 <= "1" when (ethernetType_V_fu_176_p3 = ap_const_lv16_806) else "0";

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ipProtocol_V_fu_194_p4 <= s_axis_TDATA(191 downto 184);
    ipVersion_V_fu_184_p4 <= s_axis_TDATA(119 downto 116);
    or_ln198_fu_248_p2 <= (icmp_ln879_5_fu_234_p2 or icmp_ln879_4_fu_228_p2);
    or_ln879_1_fu_314_p2 <= (icmp_ln879_fu_204_p2 or and_ln879_3_fu_296_p2);
    or_ln879_2_fu_320_p2 <= (and_ln879_4_fu_308_p2 or and_ln879_2_fu_272_p2);
    or_ln879_3_fu_326_p2 <= (or_ln879_2_fu_320_p2 or or_ln879_1_fu_314_p2);
    or_ln879_fu_282_p2 <= (icmp_ln879_fu_204_p2 or and_ln879_2_fu_272_p2);
    p_Result_i_i_9_fu_166_p4 <= s_axis_TDATA(103 downto 96);
    p_Result_i_i_fu_156_p4 <= s_axis_TDATA(111 downto 104);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    s_axis_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_pp0_stage0, s_axis_TVALID, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            s_axis_TDATA_blk_n <= s_axis_TVALID;
        else 
            s_axis_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_axis_TREADY_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op6_read_state1, ap_predicate_op11_read_state1, ap_predicate_op17_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op6_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            s_axis_TREADY <= ap_const_logic_1;
        else 
            s_axis_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln198_fu_240_p3 <= 
        ap_const_lv2_2 when (icmp_ln879_4_fu_228_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln228_fu_338_p3 <= 
        ap_const_lv2_0 when (s_axis_TLAST(0) = '1') else 
        ap_phi_mux_storemerge_i_phi_fu_118_p4;
    sendWord_dest_V_fu_288_p3 <= 
        zext_ln879_fu_278_p1 when (or_ln879_fu_282_p2(0) = '1') else 
        select_ln198_fu_240_p3;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp3_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_372_p5),580));
    tmp_111_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_356_p5),580));
    tmp_3_fu_356_p5 <= (((tdest_r_V & tmp_last_V_reg_403) & reg_148) & reg_144);
    tmp_4_fu_372_p5 <= (((sendWord_dest_V_reg_417 & tmp_last_V_2_reg_412) & reg_148) & reg_144);
    xor_ln879_1_fu_302_p2 <= (icmp_ln879_2_fu_216_p2 xor ap_const_lv1_1);
    xor_ln879_fu_254_p2 <= (icmp_ln879_fu_204_p2 xor ap_const_lv1_1);
    zext_ln879_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln879_2_fu_272_p2),2));
end behav;
