// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ethernet_remover_HH_
#define _ethernet_remover_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ethernet_remover : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<580> > eth_level_pkt_V_dout;
    sc_in< sc_logic > eth_level_pkt_V_empty_n;
    sc_out< sc_logic > eth_level_pkt_V_read;
    sc_in< sc_logic > m_axis_TREADY;
    sc_out< sc_lv<512> > m_axis_TDATA;
    sc_out< sc_logic > m_axis_TVALID;
    sc_out< sc_lv<64> > m_axis_TKEEP;
    sc_out< sc_lv<1> > m_axis_TLAST;
    sc_out< sc_lv<3> > m_axis_TDEST;


    // Module declarations
    ethernet_remover(sc_module_name name);
    SC_HAS_PROCESS(ethernet_remover);

    ~ethernet_remover();

    sc_trace_file* mVcdFile;

    regslice_both<512>* regslice_both_dataOut_V_data_V_U;
    regslice_both<64>* regslice_both_dataOut_V_keep_V_U;
    regslice_both<1>* regslice_both_dataOut_V_last_V_U;
    regslice_both<3>* regslice_both_dataOut_V_dest_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<2> > er_fsm_state_load_load_fu_274_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_108_p3;
    sc_signal< bool > ap_predicate_op11_read_state1;
    sc_signal< bool > ap_predicate_op25_read_state1;
    sc_signal< bool > ap_predicate_op33_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_lv<2> > er_fsm_state_load_reg_474;
    sc_signal< sc_lv<1> > tmp_4_reg_488;
    sc_signal< bool > ap_predicate_op67_write_state2;
    sc_signal< sc_lv<1> > tmp_3_reg_518;
    sc_signal< bool > ap_predicate_op68_write_state2;
    sc_signal< sc_lv<1> > tmp_reg_538;
    sc_signal< sc_lv<1> > sendWord_last_V_reg_542;
    sc_signal< sc_lv<1> > icmp_ln879_reg_546;
    sc_signal< bool > ap_predicate_op69_write_state2;
    sc_signal< bool > ap_predicate_op70_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > regslice_both_dataOut_V_data_V_U_apdone_blk;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<2> > er_fsm_state_load_reg_474_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_4_reg_488_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op82_write_state3;
    sc_signal< sc_lv<1> > tmp_3_reg_518_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op83_write_state3;
    sc_signal< sc_lv<1> > tmp_reg_538_pp0_iter1_reg;
    sc_signal< sc_lv<1> > sendWord_last_V_reg_542_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln879_reg_546_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op84_write_state3;
    sc_signal< bool > ap_predicate_op86_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > er_fsm_state;
    sc_signal< sc_lv<512> > prevWord_data_V;
    sc_signal< sc_lv<64> > prevWord_keep_V;
    sc_signal< sc_lv<3> > prevWord_dest_V;
    sc_signal< sc_logic > m_axis_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > eth_level_pkt_V_blk_n;
    sc_signal< sc_lv<3> > grp_fu_229_p4;
    sc_signal< sc_lv<3> > reg_263;
    sc_signal< sc_lv<512> > p_Val2_s_reg_478;
    sc_signal< sc_lv<64> > p_Val2_1_reg_483;
    sc_signal< sc_lv<1> > grp_fu_221_p3;
    sc_signal< sc_lv<1> > currWord_last_V_2_reg_492;
    sc_signal< sc_lv<112> > trunc_ln647_fu_290_p1;
    sc_signal< sc_lv<112> > trunc_ln647_reg_498;
    sc_signal< sc_lv<14> > p_Result_8_i_reg_503;
    sc_signal< sc_lv<1> > tmp_8_fu_304_p3;
    sc_signal< sc_lv<1> > tmp_8_reg_508;
    sc_signal< sc_lv<2> > select_ln114_fu_312_p3;
    sc_signal< sc_lv<512> > currWord_data_V_fu_326_p1;
    sc_signal< sc_lv<512> > currWord_data_V_reg_522;
    sc_signal< sc_lv<64> > grp_fu_211_p4;
    sc_signal< sc_lv<64> > currWord_keep_V_reg_527;
    sc_signal< sc_lv<1> > currWord_last_V_reg_532;
    sc_signal< sc_lv<1> > icmp_ln879_fu_334_p2;
    sc_signal< sc_lv<1> > tmp_last_V_4_fu_382_p2;
    sc_signal< sc_lv<1> > tmp_last_V_4_reg_550;
    sc_signal< sc_lv<64> > sendWord_keep_V_fu_388_p3;
    sc_signal< sc_lv<64> > sendWord_keep_V_reg_555;
    sc_signal< sc_lv<512> > sendWord_data_V_fu_396_p3;
    sc_signal< sc_lv<512> > sendWord_data_V_reg_560;
    sc_signal< sc_lv<2> > select_ln879_fu_404_p3;
    sc_signal< sc_lv<512> > p_Result_5_fu_423_p3;
    sc_signal< sc_lv<64> > p_Result_6_fu_432_p3;
    sc_signal< sc_lv<512> > p_Result_3_fu_441_p3;
    sc_signal< sc_lv<64> > p_Result_4_fu_449_p3;
    sc_signal< sc_lv<1> > tmp_last_V_3_fu_462_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_er_fsm_state_new_0_i_reg_140;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter1_er_fsm_state_new_0_i_reg_140;
    sc_signal< sc_lv<1> > ap_phi_mux_er_fsm_state_flag_6_s_phi_fu_156_p16;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_er_fsm_state_flag_6_s_reg_151;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_er_fsm_state_flag_6_s_reg_151;
    sc_signal< sc_lv<2> > ap_phi_mux_er_fsm_state_new_6_i_phi_fu_186_p16;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_er_fsm_state_new_6_i_reg_181;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter1_er_fsm_state_new_6_i_reg_181;
    sc_signal< sc_lv<2> > ap_sig_allocacmp_er_fsm_state_load;
    sc_signal< sc_lv<512> > currWord_data_V_1_fu_286_p1;
    sc_signal< sc_lv<512> > sendWord_data_V_4_fu_330_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<400> > p_Result_10_i_fu_340_p4;
    sc_signal< sc_lv<50> > p_Result_12_i_fu_358_p4;
    sc_signal< sc_lv<1> > xor_ln879_fu_376_p2;
    sc_signal< sc_lv<64> > p_Result_2_fu_368_p3;
    sc_signal< sc_lv<512> > p_Result_1_fu_350_p3;
    sc_signal< sc_lv<400> > grp_fu_245_p4;
    sc_signal< sc_lv<50> > grp_fu_254_p4;
    sc_signal< sc_lv<1> > p_Result_s_fu_457_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<512> > m_axis_TDATA_int;
    sc_signal< sc_logic > m_axis_TVALID_int;
    sc_signal< sc_logic > m_axis_TREADY_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_apdone_blk;
    sc_signal< sc_lv<64> > m_axis_TKEEP_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dataOut_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > m_axis_TLAST_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dataOut_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_dataOut_V_dest_V_U_apdone_blk;
    sc_signal< sc_lv<3> > m_axis_TDEST_int;
    sc_signal< sc_logic > regslice_both_dataOut_V_dest_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_dataOut_V_dest_V_U_vld_out;
    sc_signal< bool > ap_condition_312;
    sc_signal< bool > ap_condition_316;
    sc_signal< bool > ap_condition_172;
    sc_signal< bool > ap_condition_569;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_23F;
    static const sc_lv<32> ap_const_lv32_240;
    static const sc_lv<32> ap_const_lv32_241;
    static const sc_lv<32> ap_const_lv32_243;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_20D;
    static const sc_lv<32> ap_const_lv32_20E;
    static const sc_lv<112> ap_const_lv112_0;
    static const sc_lv<14> ap_const_lv14_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_172();
    void thread_ap_condition_312();
    void thread_ap_condition_316();
    void thread_ap_condition_569();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_er_fsm_state_flag_6_s_phi_fu_156_p16();
    void thread_ap_phi_mux_er_fsm_state_new_6_i_phi_fu_186_p16();
    void thread_ap_phi_reg_pp0_iter0_er_fsm_state_flag_6_s_reg_151();
    void thread_ap_phi_reg_pp0_iter0_er_fsm_state_new_0_i_reg_140();
    void thread_ap_phi_reg_pp0_iter0_er_fsm_state_new_6_i_reg_181();
    void thread_ap_predicate_op11_read_state1();
    void thread_ap_predicate_op25_read_state1();
    void thread_ap_predicate_op33_read_state1();
    void thread_ap_predicate_op67_write_state2();
    void thread_ap_predicate_op68_write_state2();
    void thread_ap_predicate_op69_write_state2();
    void thread_ap_predicate_op70_write_state2();
    void thread_ap_predicate_op82_write_state3();
    void thread_ap_predicate_op83_write_state3();
    void thread_ap_predicate_op84_write_state3();
    void thread_ap_predicate_op86_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_sig_allocacmp_er_fsm_state_load();
    void thread_currWord_data_V_1_fu_286_p1();
    void thread_currWord_data_V_fu_326_p1();
    void thread_er_fsm_state_load_load_fu_274_p1();
    void thread_eth_level_pkt_V_blk_n();
    void thread_eth_level_pkt_V_read();
    void thread_grp_fu_211_p4();
    void thread_grp_fu_221_p3();
    void thread_grp_fu_229_p4();
    void thread_grp_fu_245_p4();
    void thread_grp_fu_254_p4();
    void thread_grp_nbreadreq_fu_108_p3();
    void thread_icmp_ln879_fu_334_p2();
    void thread_m_axis_TDATA_blk_n();
    void thread_m_axis_TDATA_int();
    void thread_m_axis_TDEST_int();
    void thread_m_axis_TKEEP_int();
    void thread_m_axis_TLAST_int();
    void thread_m_axis_TVALID();
    void thread_m_axis_TVALID_int();
    void thread_p_Result_10_i_fu_340_p4();
    void thread_p_Result_12_i_fu_358_p4();
    void thread_p_Result_1_fu_350_p3();
    void thread_p_Result_2_fu_368_p3();
    void thread_p_Result_3_fu_441_p3();
    void thread_p_Result_4_fu_449_p3();
    void thread_p_Result_5_fu_423_p3();
    void thread_p_Result_6_fu_432_p3();
    void thread_p_Result_s_fu_457_p2();
    void thread_select_ln114_fu_312_p3();
    void thread_select_ln879_fu_404_p3();
    void thread_sendWord_data_V_4_fu_330_p1();
    void thread_sendWord_data_V_fu_396_p3();
    void thread_sendWord_keep_V_fu_388_p3();
    void thread_tmp_8_fu_304_p3();
    void thread_tmp_last_V_3_fu_462_p2();
    void thread_tmp_last_V_4_fu_382_p2();
    void thread_trunc_ln647_fu_290_p1();
    void thread_xor_ln879_fu_376_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
