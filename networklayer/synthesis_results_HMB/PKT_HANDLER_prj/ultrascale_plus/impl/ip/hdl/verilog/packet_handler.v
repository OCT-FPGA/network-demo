// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="packet_handler,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.100000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.527500,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=33,HLS_SYN_DSP=0,HLS_SYN_FF=3654,HLS_SYN_LUT=1340,HLS_VERSION=2020_1}" *)

module packet_handler (
        s_axis_TDATA,
        s_axis_TKEEP,
        s_axis_TLAST,
        m_axis_TDATA,
        m_axis_TKEEP,
        m_axis_TLAST,
        m_axis_TDEST,
        ap_clk,
        ap_rst_n,
        s_axis_TVALID,
        s_axis_TREADY,
        m_axis_TVALID,
        m_axis_TREADY
);


input  [511:0] s_axis_TDATA;
input  [63:0] s_axis_TKEEP;
input  [0:0] s_axis_TLAST;
output  [511:0] m_axis_TDATA;
output  [63:0] m_axis_TKEEP;
output  [0:0] m_axis_TLAST;
output  [2:0] m_axis_TDEST;
input   ap_clk;
input   ap_rst_n;
input   s_axis_TVALID;
output   s_axis_TREADY;
output   m_axis_TVALID;
input   m_axis_TREADY;

 reg    ap_rst_n_inv;
wire    packet_identificatio_U0_ap_start;
wire    packet_identificatio_U0_ap_done;
wire    packet_identificatio_U0_ap_continue;
wire    packet_identificatio_U0_ap_idle;
wire    packet_identificatio_U0_ap_ready;
wire   [579:0] packet_identificatio_U0_eth_level_pkt_V_din;
wire    packet_identificatio_U0_eth_level_pkt_V_write;
wire    packet_identificatio_U0_start_out;
wire    packet_identificatio_U0_start_write;
wire    packet_identificatio_U0_s_axis_TREADY;
wire    ethernet_remover_U0_ap_start;
wire    ethernet_remover_U0_ap_done;
wire    ethernet_remover_U0_ap_continue;
wire    ethernet_remover_U0_ap_idle;
wire    ethernet_remover_U0_ap_ready;
wire    ethernet_remover_U0_eth_level_pkt_V_read;
wire   [511:0] ethernet_remover_U0_m_axis_TDATA;
wire    ethernet_remover_U0_m_axis_TVALID;
wire   [63:0] ethernet_remover_U0_m_axis_TKEEP;
wire   [0:0] ethernet_remover_U0_m_axis_TLAST;
wire   [2:0] ethernet_remover_U0_m_axis_TDEST;
wire    ap_sync_continue;
wire    eth_level_pkt_V_full_n;
wire   [579:0] eth_level_pkt_V_dout;
wire    eth_level_pkt_V_empty_n;
wire   [0:0] start_for_ethernet_remover_U0_din;
wire    start_for_ethernet_remover_U0_full_n;
wire   [0:0] start_for_ethernet_remover_U0_dout;
wire    start_for_ethernet_remover_U0_empty_n;
wire    ethernet_remover_U0_start_full_n;
wire    ethernet_remover_U0_start_write;

packet_identificatio packet_identificatio_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(packet_identificatio_U0_ap_start),
    .start_full_n(start_for_ethernet_remover_U0_full_n),
    .ap_done(packet_identificatio_U0_ap_done),
    .ap_continue(packet_identificatio_U0_ap_continue),
    .ap_idle(packet_identificatio_U0_ap_idle),
    .ap_ready(packet_identificatio_U0_ap_ready),
    .s_axis_TVALID(s_axis_TVALID),
    .eth_level_pkt_V_din(packet_identificatio_U0_eth_level_pkt_V_din),
    .eth_level_pkt_V_full_n(eth_level_pkt_V_full_n),
    .eth_level_pkt_V_write(packet_identificatio_U0_eth_level_pkt_V_write),
    .start_out(packet_identificatio_U0_start_out),
    .start_write(packet_identificatio_U0_start_write),
    .s_axis_TDATA(s_axis_TDATA),
    .s_axis_TREADY(packet_identificatio_U0_s_axis_TREADY),
    .s_axis_TKEEP(s_axis_TKEEP),
    .s_axis_TLAST(s_axis_TLAST)
);

ethernet_remover ethernet_remover_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ethernet_remover_U0_ap_start),
    .ap_done(ethernet_remover_U0_ap_done),
    .ap_continue(ethernet_remover_U0_ap_continue),
    .ap_idle(ethernet_remover_U0_ap_idle),
    .ap_ready(ethernet_remover_U0_ap_ready),
    .eth_level_pkt_V_dout(eth_level_pkt_V_dout),
    .eth_level_pkt_V_empty_n(eth_level_pkt_V_empty_n),
    .eth_level_pkt_V_read(ethernet_remover_U0_eth_level_pkt_V_read),
    .m_axis_TREADY(m_axis_TREADY),
    .m_axis_TDATA(ethernet_remover_U0_m_axis_TDATA),
    .m_axis_TVALID(ethernet_remover_U0_m_axis_TVALID),
    .m_axis_TKEEP(ethernet_remover_U0_m_axis_TKEEP),
    .m_axis_TLAST(ethernet_remover_U0_m_axis_TLAST),
    .m_axis_TDEST(ethernet_remover_U0_m_axis_TDEST)
);

fifo_w580_d16_A eth_level_pkt_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(packet_identificatio_U0_eth_level_pkt_V_din),
    .if_full_n(eth_level_pkt_V_full_n),
    .if_write(packet_identificatio_U0_eth_level_pkt_V_write),
    .if_dout(eth_level_pkt_V_dout),
    .if_empty_n(eth_level_pkt_V_empty_n),
    .if_read(ethernet_remover_U0_eth_level_pkt_V_read)
);

start_for_ethernebkb start_for_ethernebkb_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ethernet_remover_U0_din),
    .if_full_n(start_for_ethernet_remover_U0_full_n),
    .if_write(packet_identificatio_U0_start_write),
    .if_dout(start_for_ethernet_remover_U0_dout),
    .if_empty_n(start_for_ethernet_remover_U0_empty_n),
    .if_read(ethernet_remover_U0_ap_ready)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign ethernet_remover_U0_ap_continue = 1'b1;

assign ethernet_remover_U0_ap_start = start_for_ethernet_remover_U0_empty_n;

assign ethernet_remover_U0_start_full_n = 1'b1;

assign ethernet_remover_U0_start_write = 1'b0;

assign m_axis_TDATA = ethernet_remover_U0_m_axis_TDATA;

assign m_axis_TDEST = ethernet_remover_U0_m_axis_TDEST;

assign m_axis_TKEEP = ethernet_remover_U0_m_axis_TKEEP;

assign m_axis_TLAST = ethernet_remover_U0_m_axis_TLAST;

assign m_axis_TVALID = ethernet_remover_U0_m_axis_TVALID;

assign packet_identificatio_U0_ap_continue = 1'b1;

assign packet_identificatio_U0_ap_start = 1'b1;

assign s_axis_TREADY = packet_identificatio_U0_s_axis_TREADY;

assign start_for_ethernet_remover_U0_din = 1'b1;

endmodule //packet_handler
