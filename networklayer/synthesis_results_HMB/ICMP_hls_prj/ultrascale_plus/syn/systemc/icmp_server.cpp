// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "icmp_server.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic icmp_server::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic icmp_server::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> icmp_server::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<2> icmp_server::ap_const_lv2_0 = "00";
const sc_lv<32> icmp_server::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<8> icmp_server::ap_const_lv8_0 = "00000000";
const sc_lv<16> icmp_server::ap_const_lv16_0 = "0000000000000000";
const bool icmp_server::ap_const_boolean_1 = true;
const bool icmp_server::ap_const_boolean_0 = false;
const sc_lv<1> icmp_server::ap_const_lv1_1 = "1";
const sc_lv<2> icmp_server::ap_const_lv2_3 = "11";
const sc_lv<2> icmp_server::ap_const_lv2_2 = "10";
const sc_lv<2> icmp_server::ap_const_lv2_1 = "1";
const sc_lv<8> icmp_server::ap_const_lv8_8 = "1000";
const sc_lv<32> icmp_server::ap_const_lv32_8 = "1000";
const sc_lv<32> icmp_server::ap_const_lv32_F = "1111";
const sc_lv<32> icmp_server::ap_const_lv32_10 = "10000";
const sc_lv<32> icmp_server::ap_const_lv32_17 = "10111";
const sc_lv<32> icmp_server::ap_const_lv32_18 = "11000";
const sc_lv<32> icmp_server::ap_const_lv32_1F = "11111";
const sc_lv<32> icmp_server::ap_const_lv32_20 = "100000";
const sc_lv<32> icmp_server::ap_const_lv32_27 = "100111";
const sc_lv<32> icmp_server::ap_const_lv32_28 = "101000";
const sc_lv<32> icmp_server::ap_const_lv32_2F = "101111";
const sc_lv<32> icmp_server::ap_const_lv32_30 = "110000";
const sc_lv<32> icmp_server::ap_const_lv32_37 = "110111";
const sc_lv<32> icmp_server::ap_const_lv32_38 = "111000";
const sc_lv<32> icmp_server::ap_const_lv32_3F = "111111";
const sc_lv<32> icmp_server::ap_const_lv32_40 = "1000000";
const sc_lv<32> icmp_server::ap_const_lv32_47 = "1000111";
const sc_lv<32> icmp_server::ap_const_lv32_48 = "1001000";
const sc_lv<32> icmp_server::ap_const_lv32_4F = "1001111";
const sc_lv<32> icmp_server::ap_const_lv32_50 = "1010000";
const sc_lv<32> icmp_server::ap_const_lv32_57 = "1010111";
const sc_lv<32> icmp_server::ap_const_lv32_58 = "1011000";
const sc_lv<32> icmp_server::ap_const_lv32_5F = "1011111";
const sc_lv<32> icmp_server::ap_const_lv32_60 = "1100000";
const sc_lv<32> icmp_server::ap_const_lv32_67 = "1100111";
const sc_lv<32> icmp_server::ap_const_lv32_68 = "1101000";
const sc_lv<32> icmp_server::ap_const_lv32_6F = "1101111";
const sc_lv<32> icmp_server::ap_const_lv32_70 = "1110000";
const sc_lv<32> icmp_server::ap_const_lv32_77 = "1110111";
const sc_lv<32> icmp_server::ap_const_lv32_78 = "1111000";
const sc_lv<32> icmp_server::ap_const_lv32_7F = "1111111";
const sc_lv<32> icmp_server::ap_const_lv32_80 = "10000000";
const sc_lv<32> icmp_server::ap_const_lv32_87 = "10000111";
const sc_lv<32> icmp_server::ap_const_lv32_88 = "10001000";
const sc_lv<32> icmp_server::ap_const_lv32_8F = "10001111";
const sc_lv<32> icmp_server::ap_const_lv32_90 = "10010000";
const sc_lv<32> icmp_server::ap_const_lv32_97 = "10010111";
const sc_lv<32> icmp_server::ap_const_lv32_98 = "10011000";
const sc_lv<32> icmp_server::ap_const_lv32_9F = "10011111";
const sc_lv<32> icmp_server::ap_const_lv32_A0 = "10100000";
const sc_lv<32> icmp_server::ap_const_lv32_A7 = "10100111";
const sc_lv<32> icmp_server::ap_const_lv32_A8 = "10101000";
const sc_lv<32> icmp_server::ap_const_lv32_AF = "10101111";
const sc_lv<32> icmp_server::ap_const_lv32_B8 = "10111000";
const sc_lv<32> icmp_server::ap_const_lv32_BF = "10111111";
const sc_lv<32> icmp_server::ap_const_lv32_B0 = "10110000";
const sc_lv<32> icmp_server::ap_const_lv32_B7 = "10110111";
const sc_lv<17> icmp_server::ap_const_lv17_800 = "100000000000";
const sc_lv<8> icmp_server::ap_const_lv8_80 = "10000000";
const sc_lv<24> icmp_server::ap_const_lv24_1 = "1";
const sc_lv<32> icmp_server::ap_const_lv32_13 = "10011";
const sc_lv<5> icmp_server::ap_const_lv5_1 = "1";
const sc_lv<16> icmp_server::ap_const_lv16_FFFF = "1111111111111111";

icmp_server::icmp_server(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_m_axis_icmp_V_data_V_U = new regslice_both<512>("regslice_both_m_axis_icmp_V_data_V_U");
    regslice_both_m_axis_icmp_V_data_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_icmp_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_icmp_V_data_V_U->data_in(m_axis_icmp_TDATA_int);
    regslice_both_m_axis_icmp_V_data_V_U->vld_in(m_axis_icmp_TVALID_int);
    regslice_both_m_axis_icmp_V_data_V_U->ack_in(m_axis_icmp_TREADY_int);
    regslice_both_m_axis_icmp_V_data_V_U->data_out(m_axis_icmp_TDATA);
    regslice_both_m_axis_icmp_V_data_V_U->vld_out(regslice_both_m_axis_icmp_V_data_V_U_vld_out);
    regslice_both_m_axis_icmp_V_data_V_U->ack_out(m_axis_icmp_TREADY);
    regslice_both_m_axis_icmp_V_data_V_U->apdone_blk(regslice_both_m_axis_icmp_V_data_V_U_apdone_blk);
    regslice_both_m_axis_icmp_V_keep_V_U = new regslice_both<64>("regslice_both_m_axis_icmp_V_keep_V_U");
    regslice_both_m_axis_icmp_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_icmp_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_icmp_V_keep_V_U->data_in(m_axis_icmp_TKEEP_int);
    regslice_both_m_axis_icmp_V_keep_V_U->vld_in(m_axis_icmp_TVALID_int);
    regslice_both_m_axis_icmp_V_keep_V_U->ack_in(regslice_both_m_axis_icmp_V_keep_V_U_ack_in_dummy);
    regslice_both_m_axis_icmp_V_keep_V_U->data_out(m_axis_icmp_TKEEP);
    regslice_both_m_axis_icmp_V_keep_V_U->vld_out(regslice_both_m_axis_icmp_V_keep_V_U_vld_out);
    regslice_both_m_axis_icmp_V_keep_V_U->ack_out(m_axis_icmp_TREADY);
    regslice_both_m_axis_icmp_V_keep_V_U->apdone_blk(regslice_both_m_axis_icmp_V_keep_V_U_apdone_blk);
    regslice_both_m_axis_icmp_V_last_V_U = new regslice_both<1>("regslice_both_m_axis_icmp_V_last_V_U");
    regslice_both_m_axis_icmp_V_last_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_icmp_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_icmp_V_last_V_U->data_in(m_axis_icmp_TLAST_int);
    regslice_both_m_axis_icmp_V_last_V_U->vld_in(m_axis_icmp_TVALID_int);
    regslice_both_m_axis_icmp_V_last_V_U->ack_in(regslice_both_m_axis_icmp_V_last_V_U_ack_in_dummy);
    regslice_both_m_axis_icmp_V_last_V_U->data_out(m_axis_icmp_TLAST);
    regslice_both_m_axis_icmp_V_last_V_U->vld_out(regslice_both_m_axis_icmp_V_last_V_U_vld_out);
    regslice_both_m_axis_icmp_V_last_V_U->ack_out(m_axis_icmp_TREADY);
    regslice_both_m_axis_icmp_V_last_V_U->apdone_blk(regslice_both_m_axis_icmp_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1353_1_fu_757_p2);
    sensitive << ( zext_ln215_3_fu_753_p1 );
    sensitive << ( zext_ln215_2_fu_749_p1 );

    SC_METHOD(thread_add_ln1353_2_fu_771_p2);
    sensitive << ( zext_ln215_5_fu_767_p1 );
    sensitive << ( zext_ln215_4_fu_763_p1 );

    SC_METHOD(thread_add_ln1353_3_fu_785_p2);
    sensitive << ( zext_ln215_7_fu_781_p1 );
    sensitive << ( zext_ln215_6_fu_777_p1 );

    SC_METHOD(thread_add_ln1353_4_fu_799_p2);
    sensitive << ( zext_ln215_9_fu_795_p1 );
    sensitive << ( zext_ln215_8_fu_791_p1 );

    SC_METHOD(thread_add_ln1353_fu_743_p2);
    sensitive << ( zext_ln215_1_fu_739_p1 );
    sensitive << ( zext_ln215_fu_735_p1 );

    SC_METHOD(thread_add_ln214_fu_1081_p2);
    sensitive << ( zext_ln209_2_fu_1071_p1 );

    SC_METHOD(thread_add_ln306_fu_715_p2);
    sensitive << ( zext_ln306_fu_711_p1 );

    SC_METHOD(thread_add_ln681_fu_1091_p2);
    sensitive << ( trunc_ln357_fu_1049_p1 );
    sensitive << ( zext_ln681_fu_1087_p1 );

    SC_METHOD(thread_aiFSMState_load_load_fu_263_p1);
    sensitive << ( aiFSMState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_and_ln170_1_fu_343_p2);
    sensitive << ( icmp_ln879_2_fu_325_p2 );
    sensitive << ( icmp_ln879_3_fu_331_p2 );

    SC_METHOD(thread_and_ln170_2_fu_349_p2);
    sensitive << ( and_ln170_1_fu_343_p2 );
    sensitive << ( and_ln170_fu_337_p2 );

    SC_METHOD(thread_and_ln170_fu_337_p2);
    sensitive << ( icmp_ln879_fu_313_p2 );
    sensitive << ( icmp_ln879_1_fu_319_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( s_axis_icmp_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( regslice_both_m_axis_icmp_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( s_axis_icmp_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_m_axis_icmp_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( s_axis_icmp_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_m_axis_icmp_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( s_axis_icmp_TVALID );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( ap_predicate_op31_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_predicate_op106_write_state2 );
    sensitive << ( m_axis_icmp_TREADY_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( aiFSMState_load_reg_1129_pp0_iter1_reg );
    sensitive << ( ap_predicate_op160_write_state3 );
    sensitive << ( m_axis_icmp_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( regslice_both_m_axis_icmp_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_condition_136);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_170);
    sensitive << ( aiFSMState );
    sensitive << ( grp_nbreadreq_fu_210_p5 );
    sensitive << ( grp_fu_259_p1 );

    SC_METHOD(thread_ap_condition_220);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_predicate_op106_write_state2);
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( tmp_1_reg_1138 );

    SC_METHOD(thread_ap_predicate_op12_read_state1);
    sensitive << ( aiFSMState );
    sensitive << ( grp_nbreadreq_fu_210_p5 );

    SC_METHOD(thread_ap_predicate_op160_write_state3);
    sensitive << ( aiFSMState_load_reg_1129_pp0_iter1_reg );
    sensitive << ( tmp_1_reg_1138_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op31_read_state1);
    sensitive << ( aiFSMState );
    sensitive << ( grp_nbreadreq_fu_210_p5 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_allocacmp_auxInchecksum_r_V_lo);
    sensitive << ( auxInchecksum_r_V );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( tmp_reg_1157 );
    sensitive << ( xor_ln306_fu_1117_p2 );

    SC_METHOD(thread_checksumL4_r_V_fu_1075_p2);
    sensitive << ( zext_ln209_1_fu_1067_p1 );
    sensitive << ( zext_ln209_fu_1063_p1 );

    SC_METHOD(thread_grp_fu_259_p1);
    sensitive << ( s_axis_icmp_TLAST );

    SC_METHOD(thread_grp_nbreadreq_fu_210_p5);
    sensitive << ( s_axis_icmp_TVALID );

    SC_METHOD(thread_icmpChecksumTmp_V_fu_984_p2);
    sensitive << ( zext_ln215_10_fu_980_p1 );
    sensitive << ( p_Result_8_fu_968_p1 );

    SC_METHOD(thread_icmp_ln879_1_fu_319_p2);
    sensitive << ( icmpType_V );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( aiFSMState_load_load_fu_263_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln879_2_fu_325_p2);
    sensitive << ( icmpCode_V );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( aiFSMState_load_load_fu_263_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln879_3_fu_331_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( aiFSMState_load_load_fu_263_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_sig_allocacmp_auxInchecksum_r_V_lo );

    SC_METHOD(thread_icmp_ln879_fu_313_p2);
    sensitive << ( myIpAddress_V );
    sensitive << ( ipDestination_V );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( aiFSMState_load_load_fu_263_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lhs_V_1_fu_819_p1);
    sensitive << ( add_ln1353_2_fu_771_p2 );

    SC_METHOD(thread_lhs_V_2_fu_833_p1);
    sensitive << ( ret_V_1_fu_813_p2 );

    SC_METHOD(thread_lhs_V_3_fu_1037_p1);
    sensitive << ( ret_V_3_reg_1166 );

    SC_METHOD(thread_lhs_V_fu_805_p1);
    sensitive << ( add_ln1353_fu_743_p2 );

    SC_METHOD(thread_m_axis_icmp_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( aiFSMState_load_reg_1129_pp0_iter1_reg );
    sensitive << ( tmp_1_reg_1138 );
    sensitive << ( tmp_1_reg_1138_pp0_iter1_reg );
    sensitive << ( m_axis_icmp_TREADY_int );

    SC_METHOD(thread_m_axis_icmp_TDATA_int);
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_predicate_op106_write_state2 );
    sensitive << ( tmp_data_V_3_reg_1142 );
    sensitive << ( p_Result_17_fu_1024_p5 );
    sensitive << ( ap_condition_220 );

    SC_METHOD(thread_m_axis_icmp_TKEEP_int);
    sensitive << ( prevWord_keep_V );
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_predicate_op106_write_state2 );
    sensitive << ( tmp_keep_V_3_reg_1147 );
    sensitive << ( ap_condition_220 );

    SC_METHOD(thread_m_axis_icmp_TLAST_int);
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_predicate_op106_write_state2 );
    sensitive << ( currWord_last_V_reg_1133 );
    sensitive << ( tmp_last_V_3_reg_1152 );
    sensitive << ( ap_condition_220 );

    SC_METHOD(thread_m_axis_icmp_TVALID);
    sensitive << ( regslice_both_m_axis_icmp_V_data_V_U_vld_out );

    SC_METHOD(thread_m_axis_icmp_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( aiFSMState_load_reg_1129 );
    sensitive << ( ap_predicate_op106_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Result_12_fu_683_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_13_fu_693_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_14_fu_727_p3);
    sensitive << ( p_Result_16_17_fu_615_p4 );
    sensitive << ( p_Result_16_18_fu_625_p4 );

    SC_METHOD(thread_p_Result_15_fu_1053_p4);
    sensitive << ( ret_V_5_fu_1043_p2 );

    SC_METHOD(thread_p_Result_16_10_fu_513_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_11_fu_531_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_12_fu_541_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_13_fu_559_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_14_fu_569_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_15_fu_587_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_16_fu_597_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_17_fu_615_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_18_fu_625_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_1_fu_373_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_2_fu_391_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_3_fu_401_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_4_fu_419_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_5_fu_429_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_6_fu_447_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_7_fu_457_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_8_fu_475_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_9_fu_485_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_16_fu_990_p5);
    sensitive << ( p_Result_7_fu_948_p5 );

    SC_METHOD(thread_p_Result_16_s_fu_503_p4);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_p_Result_17_fu_1024_p5);
    sensitive << ( p_Result_16_fu_990_p5 );
    sensitive << ( tmp_3_fu_1016_p3 );

    SC_METHOD(thread_p_Result_1_fu_880_p5);
    sensitive << ( prevWord_data_V );

    SC_METHOD(thread_p_Result_2_fu_938_p4);
    sensitive << ( prevWord_data_V );

    SC_METHOD(thread_p_Result_3_fu_892_p5);
    sensitive << ( p_Result_1_fu_880_p5 );

    SC_METHOD(thread_p_Result_4_fu_904_p5);
    sensitive << ( p_Result_3_fu_892_p5 );

    SC_METHOD(thread_p_Result_5_fu_926_p5);
    sensitive << ( p_Result_4_fu_904_p5 );
    sensitive << ( p_Result_s_20_fu_916_p4 );

    SC_METHOD(thread_p_Result_6_fu_1002_p4);
    sensitive << ( icmpChecksumTmp_V_fu_984_p2 );

    SC_METHOD(thread_p_Result_7_fu_948_p5);
    sensitive << ( p_Result_5_fu_926_p5 );
    sensitive << ( p_Result_2_fu_938_p4 );

    SC_METHOD(thread_p_Result_8_fu_968_p1);
    sensitive << ( trunc_ln647_fu_964_p1 );

    SC_METHOD(thread_p_Result_s_20_fu_916_p4);
    sensitive << ( prevWord_data_V );

    SC_METHOD(thread_p_Result_s_fu_1097_p3);
    sensitive << ( checksumL4_r_V_fu_1075_p2 );

    SC_METHOD(thread_ret_V_1_fu_813_p2);
    sensitive << ( lhs_V_fu_805_p1 );
    sensitive << ( rhs_V_fu_809_p1 );

    SC_METHOD(thread_ret_V_2_fu_827_p2);
    sensitive << ( lhs_V_1_fu_819_p1 );
    sensitive << ( rhs_V_1_fu_823_p1 );

    SC_METHOD(thread_ret_V_3_fu_841_p2);
    sensitive << ( lhs_V_2_fu_833_p1 );
    sensitive << ( rhs_V_2_fu_837_p1 );

    SC_METHOD(thread_ret_V_5_fu_1043_p2);
    sensitive << ( rhs_V_3_fu_1040_p1 );
    sensitive << ( lhs_V_3_fu_1037_p1 );

    SC_METHOD(thread_rhs_V_1_fu_823_p1);
    sensitive << ( add_ln1353_3_fu_785_p2 );

    SC_METHOD(thread_rhs_V_2_fu_837_p1);
    sensitive << ( ret_V_2_fu_827_p2 );

    SC_METHOD(thread_rhs_V_3_fu_1040_p1);
    sensitive << ( add_ln1353_4_reg_1161 );

    SC_METHOD(thread_rhs_V_fu_809_p1);
    sensitive << ( add_ln1353_1_fu_757_p2 );

    SC_METHOD(thread_s_axis_icmp_TDATA_blk_n);
    sensitive << ( s_axis_icmp_TVALID );
    sensitive << ( aiFSMState );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_nbreadreq_fu_210_p5 );

    SC_METHOD(thread_s_axis_icmp_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op12_read_state1 );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln170_fu_355_p3);
    sensitive << ( and_ln170_2_fu_349_p2 );

    SC_METHOD(thread_select_ln201_fu_299_p3);
    sensitive << ( xor_ln201_fu_293_p2 );

    SC_METHOD(thread_select_ln791_fu_1109_p3);
    sensitive << ( p_Result_s_fu_1097_p3 );
    sensitive << ( add_ln681_fu_1091_p2 );
    sensitive << ( trunc_ln681_fu_1105_p1 );

    SC_METHOD(thread_tmp_10_fu_607_p3);
    sensitive << ( p_Result_16_15_fu_587_p4 );
    sensitive << ( p_Result_16_16_fu_597_p4 );

    SC_METHOD(thread_tmp_11_fu_703_p3);
    sensitive << ( p_Result_13_fu_693_p4 );
    sensitive << ( p_Result_12_fu_683_p4 );

    SC_METHOD(thread_tmp_12_fu_972_p3);
    sensitive << ( icmpChecksum_V );

    SC_METHOD(thread_tmp_2_fu_579_p3);
    sensitive << ( p_Result_16_13_fu_559_p4 );
    sensitive << ( p_Result_16_14_fu_569_p4 );

    SC_METHOD(thread_tmp_3_fu_1016_p3);
    sensitive << ( trunc_ln647_1_fu_1012_p1 );
    sensitive << ( p_Result_6_fu_1002_p4 );

    SC_METHOD(thread_tmp_4_fu_383_p3);
    sensitive << ( trunc_ln647_2_fu_369_p1 );
    sensitive << ( p_Result_16_1_fu_373_p4 );

    SC_METHOD(thread_tmp_5_fu_411_p3);
    sensitive << ( p_Result_16_2_fu_391_p4 );
    sensitive << ( p_Result_16_3_fu_401_p4 );

    SC_METHOD(thread_tmp_6_fu_439_p3);
    sensitive << ( p_Result_16_4_fu_419_p4 );
    sensitive << ( p_Result_16_5_fu_429_p4 );

    SC_METHOD(thread_tmp_7_fu_467_p3);
    sensitive << ( p_Result_16_6_fu_447_p4 );
    sensitive << ( p_Result_16_7_fu_457_p4 );

    SC_METHOD(thread_tmp_8_fu_495_p3);
    sensitive << ( p_Result_16_8_fu_475_p4 );
    sensitive << ( p_Result_16_9_fu_485_p4 );

    SC_METHOD(thread_tmp_9_fu_523_p3);
    sensitive << ( p_Result_16_s_fu_503_p4 );
    sensitive << ( p_Result_16_10_fu_513_p4 );

    SC_METHOD(thread_tmp_s_fu_551_p3);
    sensitive << ( p_Result_16_11_fu_531_p4 );
    sensitive << ( p_Result_16_12_fu_541_p4 );

    SC_METHOD(thread_trunc_ln357_fu_1049_p1);
    sensitive << ( ret_V_5_fu_1043_p2 );

    SC_METHOD(thread_trunc_ln647_1_fu_1012_p1);
    sensitive << ( icmpChecksumTmp_V_fu_984_p2 );

    SC_METHOD(thread_trunc_ln647_2_fu_369_p1);
    sensitive << ( s_axis_icmp_TDATA );

    SC_METHOD(thread_trunc_ln647_fu_964_p1);
    sensitive << ( icmpChecksum_V );

    SC_METHOD(thread_trunc_ln681_fu_1105_p1);
    sensitive << ( checksumL4_r_V_fu_1075_p2 );

    SC_METHOD(thread_xor_ln201_fu_293_p2);
    sensitive << ( prevWord_last_V );

    SC_METHOD(thread_xor_ln306_fu_1117_p2);
    sensitive << ( select_ln791_fu_1109_p3 );

    SC_METHOD(thread_zext_ln209_1_fu_1067_p1);
    sensitive << ( p_Result_15_fu_1053_p4 );

    SC_METHOD(thread_zext_ln209_2_fu_1071_p1);
    sensitive << ( p_Result_15_fu_1053_p4 );

    SC_METHOD(thread_zext_ln209_fu_1063_p1);
    sensitive << ( trunc_ln357_fu_1049_p1 );

    SC_METHOD(thread_zext_ln215_10_fu_980_p1);
    sensitive << ( tmp_12_fu_972_p3 );

    SC_METHOD(thread_zext_ln215_1_fu_739_p1);
    sensitive << ( tmp_10_fu_607_p3 );

    SC_METHOD(thread_zext_ln215_2_fu_749_p1);
    sensitive << ( tmp_2_fu_579_p3 );

    SC_METHOD(thread_zext_ln215_3_fu_753_p1);
    sensitive << ( tmp_s_fu_551_p3 );

    SC_METHOD(thread_zext_ln215_4_fu_763_p1);
    sensitive << ( tmp_9_fu_523_p3 );

    SC_METHOD(thread_zext_ln215_5_fu_767_p1);
    sensitive << ( tmp_8_fu_495_p3 );

    SC_METHOD(thread_zext_ln215_6_fu_777_p1);
    sensitive << ( tmp_7_fu_467_p3 );

    SC_METHOD(thread_zext_ln215_7_fu_781_p1);
    sensitive << ( tmp_6_fu_439_p3 );

    SC_METHOD(thread_zext_ln215_8_fu_791_p1);
    sensitive << ( tmp_5_fu_411_p3 );

    SC_METHOD(thread_zext_ln215_9_fu_795_p1);
    sensitive << ( tmp_4_fu_383_p3 );

    SC_METHOD(thread_zext_ln215_fu_735_p1);
    sensitive << ( p_Result_14_fu_727_p3 );

    SC_METHOD(thread_zext_ln306_fu_711_p1);
    sensitive << ( tmp_11_fu_703_p3 );

    SC_METHOD(thread_zext_ln681_fu_1087_p1);
    sensitive << ( add_ln214_fu_1081_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    aiFSMState = "00";
    ipDestination_V = "00000000000000000000000000000000";
    icmpType_V = "00000000";
    icmpCode_V = "00000000";
    auxInchecksum_r_V = "0000000000000000";
    prevWord_last_V = "0";
    icmpChecksum_V = "00000000000000000";
    prevWord_data_V = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    prevWord_keep_V = "0000000000000000000000000000000000000000000000000000000000000000";
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "icmp_server_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axis_icmp_TDATA, "(port)s_axis_icmp_TDATA");
    sc_trace(mVcdFile, s_axis_icmp_TVALID, "(port)s_axis_icmp_TVALID");
    sc_trace(mVcdFile, s_axis_icmp_TREADY, "(port)s_axis_icmp_TREADY");
    sc_trace(mVcdFile, s_axis_icmp_TKEEP, "(port)s_axis_icmp_TKEEP");
    sc_trace(mVcdFile, s_axis_icmp_TLAST, "(port)s_axis_icmp_TLAST");
    sc_trace(mVcdFile, myIpAddress_V, "(port)myIpAddress_V");
    sc_trace(mVcdFile, m_axis_icmp_TDATA, "(port)m_axis_icmp_TDATA");
    sc_trace(mVcdFile, m_axis_icmp_TVALID, "(port)m_axis_icmp_TVALID");
    sc_trace(mVcdFile, m_axis_icmp_TREADY, "(port)m_axis_icmp_TREADY");
    sc_trace(mVcdFile, m_axis_icmp_TKEEP, "(port)m_axis_icmp_TKEEP");
    sc_trace(mVcdFile, m_axis_icmp_TLAST, "(port)m_axis_icmp_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, aiFSMState, "aiFSMState");
    sc_trace(mVcdFile, ipDestination_V, "ipDestination_V");
    sc_trace(mVcdFile, icmpType_V, "icmpType_V");
    sc_trace(mVcdFile, icmpCode_V, "icmpCode_V");
    sc_trace(mVcdFile, auxInchecksum_r_V, "auxInchecksum_r_V");
    sc_trace(mVcdFile, prevWord_last_V, "prevWord_last_V");
    sc_trace(mVcdFile, icmpChecksum_V, "icmpChecksum_V");
    sc_trace(mVcdFile, prevWord_data_V, "prevWord_data_V");
    sc_trace(mVcdFile, prevWord_keep_V, "prevWord_keep_V");
    sc_trace(mVcdFile, s_axis_icmp_TDATA_blk_n, "s_axis_icmp_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, aiFSMState_load_load_fu_263_p1, "aiFSMState_load_load_fu_263_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_210_p5, "grp_nbreadreq_fu_210_p5");
    sc_trace(mVcdFile, m_axis_icmp_TDATA_blk_n, "m_axis_icmp_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, aiFSMState_load_reg_1129, "aiFSMState_load_reg_1129");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, aiFSMState_load_reg_1129_pp0_iter1_reg, "aiFSMState_load_reg_1129_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_1_reg_1138, "tmp_1_reg_1138");
    sc_trace(mVcdFile, tmp_1_reg_1138_pp0_iter1_reg, "tmp_1_reg_1138_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op12_read_state1, "ap_predicate_op12_read_state1");
    sc_trace(mVcdFile, ap_predicate_op31_read_state1, "ap_predicate_op31_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op106_write_state2, "ap_predicate_op106_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_data_V_U_apdone_blk, "regslice_both_m_axis_icmp_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op160_write_state3, "ap_predicate_op160_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, currWord_last_V_reg_1133, "currWord_last_V_reg_1133");
    sc_trace(mVcdFile, tmp_data_V_3_reg_1142, "tmp_data_V_3_reg_1142");
    sc_trace(mVcdFile, tmp_keep_V_3_reg_1147, "tmp_keep_V_3_reg_1147");
    sc_trace(mVcdFile, grp_fu_259_p1, "grp_fu_259_p1");
    sc_trace(mVcdFile, tmp_last_V_3_reg_1152, "tmp_last_V_3_reg_1152");
    sc_trace(mVcdFile, tmp_reg_1157, "tmp_reg_1157");
    sc_trace(mVcdFile, add_ln1353_4_fu_799_p2, "add_ln1353_4_fu_799_p2");
    sc_trace(mVcdFile, add_ln1353_4_reg_1161, "add_ln1353_4_reg_1161");
    sc_trace(mVcdFile, ret_V_3_fu_841_p2, "ret_V_3_fu_841_p2");
    sc_trace(mVcdFile, ret_V_3_reg_1166, "ret_V_3_reg_1166");
    sc_trace(mVcdFile, p_Result_17_fu_1024_p5, "p_Result_17_fu_1024_p5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, select_ln201_fu_299_p3, "select_ln201_fu_299_p3");
    sc_trace(mVcdFile, select_ln170_fu_355_p3, "select_ln170_fu_355_p3");
    sc_trace(mVcdFile, xor_ln306_fu_1117_p2, "xor_ln306_fu_1117_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_auxInchecksum_r_V_lo, "ap_sig_allocacmp_auxInchecksum_r_V_lo");
    sc_trace(mVcdFile, add_ln306_fu_715_p2, "add_ln306_fu_715_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, xor_ln201_fu_293_p2, "xor_ln201_fu_293_p2");
    sc_trace(mVcdFile, icmp_ln879_fu_313_p2, "icmp_ln879_fu_313_p2");
    sc_trace(mVcdFile, icmp_ln879_1_fu_319_p2, "icmp_ln879_1_fu_319_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_325_p2, "icmp_ln879_2_fu_325_p2");
    sc_trace(mVcdFile, icmp_ln879_3_fu_331_p2, "icmp_ln879_3_fu_331_p2");
    sc_trace(mVcdFile, and_ln170_1_fu_343_p2, "and_ln170_1_fu_343_p2");
    sc_trace(mVcdFile, and_ln170_fu_337_p2, "and_ln170_fu_337_p2");
    sc_trace(mVcdFile, and_ln170_2_fu_349_p2, "and_ln170_2_fu_349_p2");
    sc_trace(mVcdFile, trunc_ln647_2_fu_369_p1, "trunc_ln647_2_fu_369_p1");
    sc_trace(mVcdFile, p_Result_16_1_fu_373_p4, "p_Result_16_1_fu_373_p4");
    sc_trace(mVcdFile, p_Result_16_2_fu_391_p4, "p_Result_16_2_fu_391_p4");
    sc_trace(mVcdFile, p_Result_16_3_fu_401_p4, "p_Result_16_3_fu_401_p4");
    sc_trace(mVcdFile, p_Result_16_4_fu_419_p4, "p_Result_16_4_fu_419_p4");
    sc_trace(mVcdFile, p_Result_16_5_fu_429_p4, "p_Result_16_5_fu_429_p4");
    sc_trace(mVcdFile, p_Result_16_6_fu_447_p4, "p_Result_16_6_fu_447_p4");
    sc_trace(mVcdFile, p_Result_16_7_fu_457_p4, "p_Result_16_7_fu_457_p4");
    sc_trace(mVcdFile, p_Result_16_8_fu_475_p4, "p_Result_16_8_fu_475_p4");
    sc_trace(mVcdFile, p_Result_16_9_fu_485_p4, "p_Result_16_9_fu_485_p4");
    sc_trace(mVcdFile, p_Result_16_s_fu_503_p4, "p_Result_16_s_fu_503_p4");
    sc_trace(mVcdFile, p_Result_16_10_fu_513_p4, "p_Result_16_10_fu_513_p4");
    sc_trace(mVcdFile, p_Result_16_11_fu_531_p4, "p_Result_16_11_fu_531_p4");
    sc_trace(mVcdFile, p_Result_16_12_fu_541_p4, "p_Result_16_12_fu_541_p4");
    sc_trace(mVcdFile, p_Result_16_13_fu_559_p4, "p_Result_16_13_fu_559_p4");
    sc_trace(mVcdFile, p_Result_16_14_fu_569_p4, "p_Result_16_14_fu_569_p4");
    sc_trace(mVcdFile, p_Result_16_15_fu_587_p4, "p_Result_16_15_fu_587_p4");
    sc_trace(mVcdFile, p_Result_16_16_fu_597_p4, "p_Result_16_16_fu_597_p4");
    sc_trace(mVcdFile, p_Result_13_fu_693_p4, "p_Result_13_fu_693_p4");
    sc_trace(mVcdFile, p_Result_12_fu_683_p4, "p_Result_12_fu_683_p4");
    sc_trace(mVcdFile, tmp_11_fu_703_p3, "tmp_11_fu_703_p3");
    sc_trace(mVcdFile, zext_ln306_fu_711_p1, "zext_ln306_fu_711_p1");
    sc_trace(mVcdFile, p_Result_16_17_fu_615_p4, "p_Result_16_17_fu_615_p4");
    sc_trace(mVcdFile, p_Result_16_18_fu_625_p4, "p_Result_16_18_fu_625_p4");
    sc_trace(mVcdFile, p_Result_14_fu_727_p3, "p_Result_14_fu_727_p3");
    sc_trace(mVcdFile, tmp_10_fu_607_p3, "tmp_10_fu_607_p3");
    sc_trace(mVcdFile, zext_ln215_1_fu_739_p1, "zext_ln215_1_fu_739_p1");
    sc_trace(mVcdFile, zext_ln215_fu_735_p1, "zext_ln215_fu_735_p1");
    sc_trace(mVcdFile, tmp_2_fu_579_p3, "tmp_2_fu_579_p3");
    sc_trace(mVcdFile, tmp_s_fu_551_p3, "tmp_s_fu_551_p3");
    sc_trace(mVcdFile, zext_ln215_3_fu_753_p1, "zext_ln215_3_fu_753_p1");
    sc_trace(mVcdFile, zext_ln215_2_fu_749_p1, "zext_ln215_2_fu_749_p1");
    sc_trace(mVcdFile, tmp_9_fu_523_p3, "tmp_9_fu_523_p3");
    sc_trace(mVcdFile, tmp_8_fu_495_p3, "tmp_8_fu_495_p3");
    sc_trace(mVcdFile, zext_ln215_5_fu_767_p1, "zext_ln215_5_fu_767_p1");
    sc_trace(mVcdFile, zext_ln215_4_fu_763_p1, "zext_ln215_4_fu_763_p1");
    sc_trace(mVcdFile, tmp_7_fu_467_p3, "tmp_7_fu_467_p3");
    sc_trace(mVcdFile, tmp_6_fu_439_p3, "tmp_6_fu_439_p3");
    sc_trace(mVcdFile, zext_ln215_7_fu_781_p1, "zext_ln215_7_fu_781_p1");
    sc_trace(mVcdFile, zext_ln215_6_fu_777_p1, "zext_ln215_6_fu_777_p1");
    sc_trace(mVcdFile, tmp_5_fu_411_p3, "tmp_5_fu_411_p3");
    sc_trace(mVcdFile, tmp_4_fu_383_p3, "tmp_4_fu_383_p3");
    sc_trace(mVcdFile, zext_ln215_9_fu_795_p1, "zext_ln215_9_fu_795_p1");
    sc_trace(mVcdFile, zext_ln215_8_fu_791_p1, "zext_ln215_8_fu_791_p1");
    sc_trace(mVcdFile, add_ln1353_fu_743_p2, "add_ln1353_fu_743_p2");
    sc_trace(mVcdFile, add_ln1353_1_fu_757_p2, "add_ln1353_1_fu_757_p2");
    sc_trace(mVcdFile, lhs_V_fu_805_p1, "lhs_V_fu_805_p1");
    sc_trace(mVcdFile, rhs_V_fu_809_p1, "rhs_V_fu_809_p1");
    sc_trace(mVcdFile, add_ln1353_2_fu_771_p2, "add_ln1353_2_fu_771_p2");
    sc_trace(mVcdFile, add_ln1353_3_fu_785_p2, "add_ln1353_3_fu_785_p2");
    sc_trace(mVcdFile, lhs_V_1_fu_819_p1, "lhs_V_1_fu_819_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_823_p1, "rhs_V_1_fu_823_p1");
    sc_trace(mVcdFile, ret_V_1_fu_813_p2, "ret_V_1_fu_813_p2");
    sc_trace(mVcdFile, ret_V_2_fu_827_p2, "ret_V_2_fu_827_p2");
    sc_trace(mVcdFile, lhs_V_2_fu_833_p1, "lhs_V_2_fu_833_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_837_p1, "rhs_V_2_fu_837_p1");
    sc_trace(mVcdFile, p_Result_1_fu_880_p5, "p_Result_1_fu_880_p5");
    sc_trace(mVcdFile, p_Result_3_fu_892_p5, "p_Result_3_fu_892_p5");
    sc_trace(mVcdFile, p_Result_4_fu_904_p5, "p_Result_4_fu_904_p5");
    sc_trace(mVcdFile, p_Result_s_20_fu_916_p4, "p_Result_s_20_fu_916_p4");
    sc_trace(mVcdFile, p_Result_5_fu_926_p5, "p_Result_5_fu_926_p5");
    sc_trace(mVcdFile, p_Result_2_fu_938_p4, "p_Result_2_fu_938_p4");
    sc_trace(mVcdFile, trunc_ln647_fu_964_p1, "trunc_ln647_fu_964_p1");
    sc_trace(mVcdFile, tmp_12_fu_972_p3, "tmp_12_fu_972_p3");
    sc_trace(mVcdFile, zext_ln215_10_fu_980_p1, "zext_ln215_10_fu_980_p1");
    sc_trace(mVcdFile, p_Result_8_fu_968_p1, "p_Result_8_fu_968_p1");
    sc_trace(mVcdFile, p_Result_7_fu_948_p5, "p_Result_7_fu_948_p5");
    sc_trace(mVcdFile, icmpChecksumTmp_V_fu_984_p2, "icmpChecksumTmp_V_fu_984_p2");
    sc_trace(mVcdFile, trunc_ln647_1_fu_1012_p1, "trunc_ln647_1_fu_1012_p1");
    sc_trace(mVcdFile, p_Result_6_fu_1002_p4, "p_Result_6_fu_1002_p4");
    sc_trace(mVcdFile, p_Result_16_fu_990_p5, "p_Result_16_fu_990_p5");
    sc_trace(mVcdFile, tmp_3_fu_1016_p3, "tmp_3_fu_1016_p3");
    sc_trace(mVcdFile, rhs_V_3_fu_1040_p1, "rhs_V_3_fu_1040_p1");
    sc_trace(mVcdFile, lhs_V_3_fu_1037_p1, "lhs_V_3_fu_1037_p1");
    sc_trace(mVcdFile, ret_V_5_fu_1043_p2, "ret_V_5_fu_1043_p2");
    sc_trace(mVcdFile, trunc_ln357_fu_1049_p1, "trunc_ln357_fu_1049_p1");
    sc_trace(mVcdFile, p_Result_15_fu_1053_p4, "p_Result_15_fu_1053_p4");
    sc_trace(mVcdFile, zext_ln209_1_fu_1067_p1, "zext_ln209_1_fu_1067_p1");
    sc_trace(mVcdFile, zext_ln209_fu_1063_p1, "zext_ln209_fu_1063_p1");
    sc_trace(mVcdFile, zext_ln209_2_fu_1071_p1, "zext_ln209_2_fu_1071_p1");
    sc_trace(mVcdFile, add_ln214_fu_1081_p2, "add_ln214_fu_1081_p2");
    sc_trace(mVcdFile, zext_ln681_fu_1087_p1, "zext_ln681_fu_1087_p1");
    sc_trace(mVcdFile, checksumL4_r_V_fu_1075_p2, "checksumL4_r_V_fu_1075_p2");
    sc_trace(mVcdFile, p_Result_s_fu_1097_p3, "p_Result_s_fu_1097_p3");
    sc_trace(mVcdFile, add_ln681_fu_1091_p2, "add_ln681_fu_1091_p2");
    sc_trace(mVcdFile, trunc_ln681_fu_1105_p1, "trunc_ln681_fu_1105_p1");
    sc_trace(mVcdFile, select_ln791_fu_1109_p3, "select_ln791_fu_1109_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, m_axis_icmp_TDATA_int, "m_axis_icmp_TDATA_int");
    sc_trace(mVcdFile, m_axis_icmp_TVALID_int, "m_axis_icmp_TVALID_int");
    sc_trace(mVcdFile, m_axis_icmp_TREADY_int, "m_axis_icmp_TREADY_int");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_data_V_U_vld_out, "regslice_both_m_axis_icmp_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_keep_V_U_apdone_blk, "regslice_both_m_axis_icmp_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, m_axis_icmp_TKEEP_int, "m_axis_icmp_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_keep_V_U_ack_in_dummy, "regslice_both_m_axis_icmp_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_keep_V_U_vld_out, "regslice_both_m_axis_icmp_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_last_V_U_apdone_blk, "regslice_both_m_axis_icmp_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, m_axis_icmp_TLAST_int, "m_axis_icmp_TLAST_int");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_last_V_U_ack_in_dummy, "regslice_both_m_axis_icmp_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_icmp_V_last_V_U_vld_out, "regslice_both_m_axis_icmp_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_170, "ap_condition_170");
    sc_trace(mVcdFile, ap_condition_136, "ap_condition_136");
    sc_trace(mVcdFile, ap_condition_220, "ap_condition_220");
#endif

    }
    mHdltvinHandle.open("icmp_server.hdltvin.dat");
    mHdltvoutHandle.open("icmp_server.hdltvout.dat");
}

icmp_server::~icmp_server() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete regslice_both_m_axis_icmp_V_data_V_U;
    delete regslice_both_m_axis_icmp_V_keep_V_U;
    delete regslice_both_m_axis_icmp_V_last_V_U;
}

void icmp_server::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_condition_136.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && 
             esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1))) {
            aiFSMState = ap_const_lv2_1;
        } else if (esl_seteq<1,2,2>(aiFSMState_load_load_fu_263_p1.read(), ap_const_lv2_1)) {
            aiFSMState = select_ln170_fu_355_p3.read();
        } else if (esl_seteq<1,2,2>(aiFSMState_load_load_fu_263_p1.read(), ap_const_lv2_2)) {
            aiFSMState = select_ln201_fu_299_p3.read();
        } else if (esl_seteq<1,1,1>(ap_condition_170.read(), ap_const_boolean_1)) {
            aiFSMState = ap_const_lv2_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        add_ln1353_4_reg_1161 = add_ln1353_4_fu_799_p2.read();
        ret_V_3_reg_1166 = ret_V_3_fu_841_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        aiFSMState_load_reg_1129 = aiFSMState.read();
        aiFSMState_load_reg_1129_pp0_iter1_reg = aiFSMState_load_reg_1129.read();
        currWord_last_V_reg_1133 = prevWord_last_V.read();
        tmp_1_reg_1138_pp0_iter1_reg = tmp_1_reg_1138.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState_load_reg_1129.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_1157.read()))) {
        auxInchecksum_r_V = xor_ln306_fu_1117_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmpChecksum_V = add_ln306_fu_715_p2.read();
        icmpCode_V = s_axis_icmp_TDATA.read().range(175, 168);
        icmpType_V = s_axis_icmp_TDATA.read().range(167, 160);
        ipDestination_V = s_axis_icmp_TDATA.read().range(159, 128);
        prevWord_data_V = s_axis_icmp_TDATA.read();
        prevWord_keep_V = s_axis_icmp_TKEEP.read();
        prevWord_last_V = s_axis_icmp_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,2,2>(aiFSMState.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_1138 = grp_nbreadreq_fu_210_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(aiFSMState.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_3_reg_1142 = s_axis_icmp_TDATA.read();
        tmp_keep_V_3_reg_1147 = s_axis_icmp_TKEEP.read();
        tmp_last_V_3_reg_1152 = s_axis_icmp_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_1157 = grp_nbreadreq_fu_210_p5.read();
    }
}

void icmp_server::thread_add_ln1353_1_fu_757_p2() {
    add_ln1353_1_fu_757_p2 = (!zext_ln215_3_fu_753_p1.read().is_01() || !zext_ln215_2_fu_749_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_3_fu_753_p1.read()) + sc_biguint<17>(zext_ln215_2_fu_749_p1.read()));
}

void icmp_server::thread_add_ln1353_2_fu_771_p2() {
    add_ln1353_2_fu_771_p2 = (!zext_ln215_5_fu_767_p1.read().is_01() || !zext_ln215_4_fu_763_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_5_fu_767_p1.read()) + sc_biguint<17>(zext_ln215_4_fu_763_p1.read()));
}

void icmp_server::thread_add_ln1353_3_fu_785_p2() {
    add_ln1353_3_fu_785_p2 = (!zext_ln215_7_fu_781_p1.read().is_01() || !zext_ln215_6_fu_777_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_7_fu_781_p1.read()) + sc_biguint<17>(zext_ln215_6_fu_777_p1.read()));
}

void icmp_server::thread_add_ln1353_4_fu_799_p2() {
    add_ln1353_4_fu_799_p2 = (!zext_ln215_9_fu_795_p1.read().is_01() || !zext_ln215_8_fu_791_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_9_fu_795_p1.read()) + sc_biguint<17>(zext_ln215_8_fu_791_p1.read()));
}

void icmp_server::thread_add_ln1353_fu_743_p2() {
    add_ln1353_fu_743_p2 = (!zext_ln215_1_fu_739_p1.read().is_01() || !zext_ln215_fu_735_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_1_fu_739_p1.read()) + sc_biguint<17>(zext_ln215_fu_735_p1.read()));
}

void icmp_server::thread_add_ln214_fu_1081_p2() {
    add_ln214_fu_1081_p2 = (!ap_const_lv5_1.is_01() || !zext_ln209_2_fu_1071_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(zext_ln209_2_fu_1071_p1.read()));
}

void icmp_server::thread_add_ln306_fu_715_p2() {
    add_ln306_fu_715_p2 = (!ap_const_lv17_800.is_01() || !zext_ln306_fu_711_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_800) + sc_biguint<17>(zext_ln306_fu_711_p1.read()));
}

void icmp_server::thread_add_ln681_fu_1091_p2() {
    add_ln681_fu_1091_p2 = (!trunc_ln357_fu_1049_p1.read().is_01() || !zext_ln681_fu_1087_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(trunc_ln357_fu_1049_p1.read()) + sc_biguint<16>(zext_ln681_fu_1087_p1.read()));
}

void icmp_server::thread_aiFSMState_load_load_fu_263_p1() {
    aiFSMState_load_load_fu_263_p1 = aiFSMState.read();
}

void icmp_server::thread_and_ln170_1_fu_343_p2() {
    and_ln170_1_fu_343_p2 = (icmp_ln879_2_fu_325_p2.read() & icmp_ln879_3_fu_331_p2.read());
}

void icmp_server::thread_and_ln170_2_fu_349_p2() {
    and_ln170_2_fu_349_p2 = (and_ln170_1_fu_343_p2.read() & and_ln170_fu_337_p2.read());
}

void icmp_server::thread_and_ln170_fu_337_p2() {
    and_ln170_fu_337_p2 = (icmp_ln879_fu_313_p2.read() & icmp_ln879_1_fu_319_p2.read());
}

void icmp_server::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void icmp_server::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void icmp_server::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_m_axis_icmp_V_data_V_U_apdone_blk.read())));
}

void icmp_server::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_m_axis_icmp_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))));
}

void icmp_server::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_m_axis_icmp_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))));
}

void icmp_server::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = ((esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, s_axis_icmp_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())));
}

void icmp_server::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axis_icmp_TREADY_int.read())) || (esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axis_icmp_TREADY_int.read())));
}

void icmp_server::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void icmp_server::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op160_write_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axis_icmp_TREADY_int.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, aiFSMState_load_reg_1129_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axis_icmp_TREADY_int.read())));
}

void icmp_server::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_m_axis_icmp_V_data_V_U_apdone_blk.read());
}

void icmp_server::thread_ap_condition_136() {
    ap_condition_136 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void icmp_server::thread_ap_condition_170() {
    ap_condition_170 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(aiFSMState.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_259_p1.read()));
}

void icmp_server::thread_ap_condition_220() {
    ap_condition_220 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void icmp_server::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void icmp_server::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void icmp_server::thread_ap_predicate_op106_write_state2() {
    ap_predicate_op106_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_3, aiFSMState_load_reg_1129.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_1138.read()));
}

void icmp_server::thread_ap_predicate_op12_read_state1() {
    ap_predicate_op12_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(aiFSMState.read(), ap_const_lv2_3));
}

void icmp_server::thread_ap_predicate_op160_write_state3() {
    ap_predicate_op160_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_3, aiFSMState_load_reg_1129_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_1138_pp0_iter1_reg.read()));
}

void icmp_server::thread_ap_predicate_op31_read_state1() {
    ap_predicate_op31_read_state1 = (esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1));
}

void icmp_server::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void icmp_server::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void icmp_server::thread_ap_sig_allocacmp_auxInchecksum_r_V_lo() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState_load_reg_1129.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_1157.read()))) {
        ap_sig_allocacmp_auxInchecksum_r_V_lo = xor_ln306_fu_1117_p2.read();
    } else {
        ap_sig_allocacmp_auxInchecksum_r_V_lo = auxInchecksum_r_V.read();
    }
}

void icmp_server::thread_checksumL4_r_V_fu_1075_p2() {
    checksumL4_r_V_fu_1075_p2 = (!zext_ln209_1_fu_1067_p1.read().is_01() || !zext_ln209_fu_1063_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln209_1_fu_1067_p1.read()) + sc_biguint<17>(zext_ln209_fu_1063_p1.read()));
}

void icmp_server::thread_grp_fu_259_p1() {
    grp_fu_259_p1 = s_axis_icmp_TLAST.read();
}

void icmp_server::thread_grp_nbreadreq_fu_210_p5() {
    grp_nbreadreq_fu_210_p5 =  (sc_lv<1>) ((s_axis_icmp_TVALID.read()));
}

void icmp_server::thread_icmpChecksumTmp_V_fu_984_p2() {
    icmpChecksumTmp_V_fu_984_p2 = (!zext_ln215_10_fu_980_p1.read().is_01() || !p_Result_8_fu_968_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln215_10_fu_980_p1.read()) + sc_biguint<17>(p_Result_8_fu_968_p1.read()));
}

void icmp_server::thread_icmp_ln879_1_fu_319_p2() {
    icmp_ln879_1_fu_319_p2 = (!icmpType_V.read().is_01() || !ap_const_lv8_8.is_01())? sc_lv<1>(): sc_lv<1>(icmpType_V.read() == ap_const_lv8_8);
}

void icmp_server::thread_icmp_ln879_2_fu_325_p2() {
    icmp_ln879_2_fu_325_p2 = (!icmpCode_V.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(icmpCode_V.read() == ap_const_lv8_0);
}

void icmp_server::thread_icmp_ln879_3_fu_331_p2() {
    icmp_ln879_3_fu_331_p2 = (!ap_sig_allocacmp_auxInchecksum_r_V_lo.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_sig_allocacmp_auxInchecksum_r_V_lo.read() == ap_const_lv16_0);
}

void icmp_server::thread_icmp_ln879_fu_313_p2() {
    icmp_ln879_fu_313_p2 = (!ipDestination_V.read().is_01() || !myIpAddress_V.read().is_01())? sc_lv<1>(): sc_lv<1>(ipDestination_V.read() == myIpAddress_V.read());
}

void icmp_server::thread_lhs_V_1_fu_819_p1() {
    lhs_V_1_fu_819_p1 = esl_zext<18,17>(add_ln1353_2_fu_771_p2.read());
}

void icmp_server::thread_lhs_V_2_fu_833_p1() {
    lhs_V_2_fu_833_p1 = esl_zext<19,18>(ret_V_1_fu_813_p2.read());
}

void icmp_server::thread_lhs_V_3_fu_1037_p1() {
    lhs_V_3_fu_1037_p1 = esl_zext<20,19>(ret_V_3_reg_1166.read());
}

void icmp_server::thread_lhs_V_fu_805_p1() {
    lhs_V_fu_805_p1 = esl_zext<18,17>(add_ln1353_fu_743_p2.read());
}

void icmp_server::thread_m_axis_icmp_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, aiFSMState_load_reg_1129_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, aiFSMState_load_reg_1129.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_1138.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, aiFSMState_load_reg_1129_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_1138_pp0_iter1_reg.read())))) {
        m_axis_icmp_TDATA_blk_n = m_axis_icmp_TREADY_int.read();
    } else {
        m_axis_icmp_TDATA_blk_n = ap_const_logic_1;
    }
}

void icmp_server::thread_m_axis_icmp_TDATA_int() {
    if (esl_seteq<1,1,1>(ap_condition_220.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2)) {
            m_axis_icmp_TDATA_int = p_Result_17_fu_1024_p5.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state2.read())) {
            m_axis_icmp_TDATA_int = tmp_data_V_3_reg_1142.read();
        } else {
            m_axis_icmp_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        m_axis_icmp_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void icmp_server::thread_m_axis_icmp_TKEEP_int() {
    if (esl_seteq<1,1,1>(ap_condition_220.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2)) {
            m_axis_icmp_TKEEP_int = prevWord_keep_V.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state2.read())) {
            m_axis_icmp_TKEEP_int = tmp_keep_V_3_reg_1147.read();
        } else {
            m_axis_icmp_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axis_icmp_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void icmp_server::thread_m_axis_icmp_TLAST_int() {
    if (esl_seteq<1,1,1>(ap_condition_220.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2)) {
            m_axis_icmp_TLAST_int = currWord_last_V_reg_1133.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state2.read())) {
            m_axis_icmp_TLAST_int = tmp_last_V_3_reg_1152.read();
        } else {
            m_axis_icmp_TLAST_int =  (sc_lv<1>) ("X");
        }
    } else {
        m_axis_icmp_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void icmp_server::thread_m_axis_icmp_TVALID() {
    m_axis_icmp_TVALID = regslice_both_m_axis_icmp_V_data_V_U_vld_out.read();
}

void icmp_server::thread_m_axis_icmp_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op106_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(aiFSMState_load_reg_1129.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axis_icmp_TVALID_int = ap_const_logic_1;
    } else {
        m_axis_icmp_TVALID_int = ap_const_logic_0;
    }
}

void icmp_server::thread_p_Result_12_fu_683_p4() {
    p_Result_12_fu_683_p4 = s_axis_icmp_TDATA.read().range(191, 184);
}

void icmp_server::thread_p_Result_13_fu_693_p4() {
    p_Result_13_fu_693_p4 = s_axis_icmp_TDATA.read().range(183, 176);
}

void icmp_server::thread_p_Result_14_fu_727_p3() {
    p_Result_14_fu_727_p3 = esl_concat<8,8>(p_Result_16_17_fu_615_p4.read(), p_Result_16_18_fu_625_p4.read());
}

void icmp_server::thread_p_Result_15_fu_1053_p4() {
    p_Result_15_fu_1053_p4 = ret_V_5_fu_1043_p2.read().range(19, 16);
}

void icmp_server::thread_p_Result_16_10_fu_513_p4() {
    p_Result_16_10_fu_513_p4 = s_axis_icmp_TDATA.read().range(95, 88);
}

void icmp_server::thread_p_Result_16_11_fu_531_p4() {
    p_Result_16_11_fu_531_p4 = s_axis_icmp_TDATA.read().range(103, 96);
}

void icmp_server::thread_p_Result_16_12_fu_541_p4() {
    p_Result_16_12_fu_541_p4 = s_axis_icmp_TDATA.read().range(111, 104);
}

void icmp_server::thread_p_Result_16_13_fu_559_p4() {
    p_Result_16_13_fu_559_p4 = s_axis_icmp_TDATA.read().range(119, 112);
}

void icmp_server::thread_p_Result_16_14_fu_569_p4() {
    p_Result_16_14_fu_569_p4 = s_axis_icmp_TDATA.read().range(127, 120);
}

void icmp_server::thread_p_Result_16_15_fu_587_p4() {
    p_Result_16_15_fu_587_p4 = s_axis_icmp_TDATA.read().range(135, 128);
}

void icmp_server::thread_p_Result_16_16_fu_597_p4() {
    p_Result_16_16_fu_597_p4 = s_axis_icmp_TDATA.read().range(143, 136);
}

void icmp_server::thread_p_Result_16_17_fu_615_p4() {
    p_Result_16_17_fu_615_p4 = s_axis_icmp_TDATA.read().range(151, 144);
}

void icmp_server::thread_p_Result_16_18_fu_625_p4() {
    p_Result_16_18_fu_625_p4 = s_axis_icmp_TDATA.read().range(159, 152);
}

void icmp_server::thread_p_Result_16_1_fu_373_p4() {
    p_Result_16_1_fu_373_p4 = s_axis_icmp_TDATA.read().range(15, 8);
}

void icmp_server::thread_p_Result_16_2_fu_391_p4() {
    p_Result_16_2_fu_391_p4 = s_axis_icmp_TDATA.read().range(23, 16);
}

void icmp_server::thread_p_Result_16_3_fu_401_p4() {
    p_Result_16_3_fu_401_p4 = s_axis_icmp_TDATA.read().range(31, 24);
}

void icmp_server::thread_p_Result_16_4_fu_419_p4() {
    p_Result_16_4_fu_419_p4 = s_axis_icmp_TDATA.read().range(39, 32);
}

void icmp_server::thread_p_Result_16_5_fu_429_p4() {
    p_Result_16_5_fu_429_p4 = s_axis_icmp_TDATA.read().range(47, 40);
}

void icmp_server::thread_p_Result_16_6_fu_447_p4() {
    p_Result_16_6_fu_447_p4 = s_axis_icmp_TDATA.read().range(55, 48);
}

void icmp_server::thread_p_Result_16_7_fu_457_p4() {
    p_Result_16_7_fu_457_p4 = s_axis_icmp_TDATA.read().range(63, 56);
}

void icmp_server::thread_p_Result_16_8_fu_475_p4() {
    p_Result_16_8_fu_475_p4 = s_axis_icmp_TDATA.read().range(71, 64);
}

void icmp_server::thread_p_Result_16_9_fu_485_p4() {
    p_Result_16_9_fu_485_p4 = s_axis_icmp_TDATA.read().range(79, 72);
}

void icmp_server::thread_p_Result_16_fu_990_p5() {
    p_Result_16_fu_990_p5 = esl_partset<512,512,8,32,32>(p_Result_7_fu_948_p5.read(), ap_const_lv8_0, ap_const_lv32_A0, ap_const_lv32_A7);
}

void icmp_server::thread_p_Result_16_s_fu_503_p4() {
    p_Result_16_s_fu_503_p4 = s_axis_icmp_TDATA.read().range(87, 80);
}

void icmp_server::thread_p_Result_17_fu_1024_p5() {
    p_Result_17_fu_1024_p5 = esl_partset<512,512,16,32,32>(p_Result_16_fu_990_p5.read(), tmp_3_fu_1016_p3.read(), ap_const_lv32_B0, ap_const_lv32_BF);
}

void icmp_server::thread_p_Result_1_fu_880_p5() {
    p_Result_1_fu_880_p5 = esl_partset<512,512,8,32,32>(prevWord_data_V.read(), ap_const_lv8_80, ap_const_lv32_40, ap_const_lv32_47);
}

void icmp_server::thread_p_Result_2_fu_938_p4() {
    p_Result_2_fu_938_p4 = prevWord_data_V.read().range(127, 96);
}

void icmp_server::thread_p_Result_3_fu_892_p5() {
    p_Result_3_fu_892_p5 = esl_partset<512,512,24,32,32>(p_Result_1_fu_880_p5.read(), ap_const_lv24_1, ap_const_lv32_48, ap_const_lv32_5F);
}

void icmp_server::thread_p_Result_4_fu_904_p5() {
    p_Result_4_fu_904_p5 = esl_partset<512,512,16,32,32>(p_Result_3_fu_892_p5.read(), ap_const_lv16_0, ap_const_lv32_50, ap_const_lv32_5F);
}

void icmp_server::thread_p_Result_5_fu_926_p5() {
    p_Result_5_fu_926_p5 = esl_partset<512,512,32,32,32>(p_Result_4_fu_904_p5.read(), p_Result_s_20_fu_916_p4.read(), ap_const_lv32_60, ap_const_lv32_7F);
}

void icmp_server::thread_p_Result_6_fu_1002_p4() {
    p_Result_6_fu_1002_p4 = icmpChecksumTmp_V_fu_984_p2.read().range(15, 8);
}

void icmp_server::thread_p_Result_7_fu_948_p5() {
    p_Result_7_fu_948_p5 = esl_partset<512,512,32,32,32>(p_Result_5_fu_926_p5.read(), p_Result_2_fu_938_p4.read(), ap_const_lv32_80, ap_const_lv32_9F);
}

void icmp_server::thread_p_Result_8_fu_968_p1() {
    p_Result_8_fu_968_p1 = esl_zext<17,16>(trunc_ln647_fu_964_p1.read());
}

void icmp_server::thread_p_Result_s_20_fu_916_p4() {
    p_Result_s_20_fu_916_p4 = prevWord_data_V.read().range(159, 128);
}

void icmp_server::thread_p_Result_s_fu_1097_p3() {
    p_Result_s_fu_1097_p3 = checksumL4_r_V_fu_1075_p2.read().range(16, 16);
}

void icmp_server::thread_ret_V_1_fu_813_p2() {
    ret_V_1_fu_813_p2 = (!lhs_V_fu_805_p1.read().is_01() || !rhs_V_fu_809_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(lhs_V_fu_805_p1.read()) + sc_biguint<18>(rhs_V_fu_809_p1.read()));
}

void icmp_server::thread_ret_V_2_fu_827_p2() {
    ret_V_2_fu_827_p2 = (!lhs_V_1_fu_819_p1.read().is_01() || !rhs_V_1_fu_823_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(lhs_V_1_fu_819_p1.read()) + sc_biguint<18>(rhs_V_1_fu_823_p1.read()));
}

void icmp_server::thread_ret_V_3_fu_841_p2() {
    ret_V_3_fu_841_p2 = (!lhs_V_2_fu_833_p1.read().is_01() || !rhs_V_2_fu_837_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(lhs_V_2_fu_833_p1.read()) + sc_biguint<19>(rhs_V_2_fu_837_p1.read()));
}

void icmp_server::thread_ret_V_5_fu_1043_p2() {
    ret_V_5_fu_1043_p2 = (!rhs_V_3_fu_1040_p1.read().is_01() || !lhs_V_3_fu_1037_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(rhs_V_3_fu_1040_p1.read()) + sc_biguint<20>(lhs_V_3_fu_1037_p1.read()));
}

void icmp_server::thread_rhs_V_1_fu_823_p1() {
    rhs_V_1_fu_823_p1 = esl_zext<18,17>(add_ln1353_3_fu_785_p2.read());
}

void icmp_server::thread_rhs_V_2_fu_837_p1() {
    rhs_V_2_fu_837_p1 = esl_zext<19,18>(ret_V_2_fu_827_p2.read());
}

void icmp_server::thread_rhs_V_3_fu_1040_p1() {
    rhs_V_3_fu_1040_p1 = esl_zext<20,17>(add_ln1353_4_reg_1161.read());
}

void icmp_server::thread_rhs_V_fu_809_p1() {
    rhs_V_fu_809_p1 = esl_zext<18,17>(add_ln1353_1_fu_757_p2.read());
}

void icmp_server::thread_s_axis_icmp_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, aiFSMState.read()) && 
          esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(grp_nbreadreq_fu_210_p5.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(aiFSMState.read(), ap_const_lv2_3)))) {
        s_axis_icmp_TDATA_blk_n = s_axis_icmp_TVALID.read();
    } else {
        s_axis_icmp_TDATA_blk_n = ap_const_logic_1;
    }
}

void icmp_server::thread_s_axis_icmp_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op12_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        s_axis_icmp_TREADY = ap_const_logic_1;
    } else {
        s_axis_icmp_TREADY = ap_const_logic_0;
    }
}

void icmp_server::thread_select_ln170_fu_355_p3() {
    select_ln170_fu_355_p3 = (!and_ln170_2_fu_349_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln170_2_fu_349_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void icmp_server::thread_select_ln201_fu_299_p3() {
    select_ln201_fu_299_p3 = (!xor_ln201_fu_293_p2.read()[0].is_01())? sc_lv<2>(): ((xor_ln201_fu_293_p2.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void icmp_server::thread_select_ln791_fu_1109_p3() {
    select_ln791_fu_1109_p3 = (!p_Result_s_fu_1097_p3.read()[0].is_01())? sc_lv<16>(): ((p_Result_s_fu_1097_p3.read()[0].to_bool())? add_ln681_fu_1091_p2.read(): trunc_ln681_fu_1105_p1.read());
}

void icmp_server::thread_tmp_10_fu_607_p3() {
    tmp_10_fu_607_p3 = esl_concat<8,8>(p_Result_16_15_fu_587_p4.read(), p_Result_16_16_fu_597_p4.read());
}

void icmp_server::thread_tmp_11_fu_703_p3() {
    tmp_11_fu_703_p3 = esl_concat<8,8>(p_Result_13_fu_693_p4.read(), p_Result_12_fu_683_p4.read());
}

void icmp_server::thread_tmp_12_fu_972_p3() {
    tmp_12_fu_972_p3 = icmpChecksum_V.read().range(16, 16);
}

void icmp_server::thread_tmp_2_fu_579_p3() {
    tmp_2_fu_579_p3 = esl_concat<8,8>(p_Result_16_13_fu_559_p4.read(), p_Result_16_14_fu_569_p4.read());
}

void icmp_server::thread_tmp_3_fu_1016_p3() {
    tmp_3_fu_1016_p3 = esl_concat<8,8>(trunc_ln647_1_fu_1012_p1.read(), p_Result_6_fu_1002_p4.read());
}

void icmp_server::thread_tmp_4_fu_383_p3() {
    tmp_4_fu_383_p3 = esl_concat<8,8>(trunc_ln647_2_fu_369_p1.read(), p_Result_16_1_fu_373_p4.read());
}

void icmp_server::thread_tmp_5_fu_411_p3() {
    tmp_5_fu_411_p3 = esl_concat<8,8>(p_Result_16_2_fu_391_p4.read(), p_Result_16_3_fu_401_p4.read());
}

void icmp_server::thread_tmp_6_fu_439_p3() {
    tmp_6_fu_439_p3 = esl_concat<8,8>(p_Result_16_4_fu_419_p4.read(), p_Result_16_5_fu_429_p4.read());
}

void icmp_server::thread_tmp_7_fu_467_p3() {
    tmp_7_fu_467_p3 = esl_concat<8,8>(p_Result_16_6_fu_447_p4.read(), p_Result_16_7_fu_457_p4.read());
}

void icmp_server::thread_tmp_8_fu_495_p3() {
    tmp_8_fu_495_p3 = esl_concat<8,8>(p_Result_16_8_fu_475_p4.read(), p_Result_16_9_fu_485_p4.read());
}

void icmp_server::thread_tmp_9_fu_523_p3() {
    tmp_9_fu_523_p3 = esl_concat<8,8>(p_Result_16_s_fu_503_p4.read(), p_Result_16_10_fu_513_p4.read());
}

void icmp_server::thread_tmp_s_fu_551_p3() {
    tmp_s_fu_551_p3 = esl_concat<8,8>(p_Result_16_11_fu_531_p4.read(), p_Result_16_12_fu_541_p4.read());
}

void icmp_server::thread_trunc_ln357_fu_1049_p1() {
    trunc_ln357_fu_1049_p1 = ret_V_5_fu_1043_p2.read().range(16-1, 0);
}

void icmp_server::thread_trunc_ln647_1_fu_1012_p1() {
    trunc_ln647_1_fu_1012_p1 = icmpChecksumTmp_V_fu_984_p2.read().range(8-1, 0);
}

void icmp_server::thread_trunc_ln647_2_fu_369_p1() {
    trunc_ln647_2_fu_369_p1 = s_axis_icmp_TDATA.read().range(8-1, 0);
}

void icmp_server::thread_trunc_ln647_fu_964_p1() {
    trunc_ln647_fu_964_p1 = icmpChecksum_V.read().range(16-1, 0);
}

void icmp_server::thread_trunc_ln681_fu_1105_p1() {
    trunc_ln681_fu_1105_p1 = checksumL4_r_V_fu_1075_p2.read().range(16-1, 0);
}

void icmp_server::thread_xor_ln201_fu_293_p2() {
    xor_ln201_fu_293_p2 = (prevWord_last_V.read() ^ ap_const_lv1_1);
}

void icmp_server::thread_xor_ln306_fu_1117_p2() {
    xor_ln306_fu_1117_p2 = (select_ln791_fu_1109_p3.read() ^ ap_const_lv16_FFFF);
}

void icmp_server::thread_zext_ln209_1_fu_1067_p1() {
    zext_ln209_1_fu_1067_p1 = esl_zext<17,4>(p_Result_15_fu_1053_p4.read());
}

void icmp_server::thread_zext_ln209_2_fu_1071_p1() {
    zext_ln209_2_fu_1071_p1 = esl_zext<5,4>(p_Result_15_fu_1053_p4.read());
}

void icmp_server::thread_zext_ln209_fu_1063_p1() {
    zext_ln209_fu_1063_p1 = esl_zext<17,16>(trunc_ln357_fu_1049_p1.read());
}

void icmp_server::thread_zext_ln215_10_fu_980_p1() {
    zext_ln215_10_fu_980_p1 = esl_zext<17,1>(tmp_12_fu_972_p3.read());
}

void icmp_server::thread_zext_ln215_1_fu_739_p1() {
    zext_ln215_1_fu_739_p1 = esl_zext<17,16>(tmp_10_fu_607_p3.read());
}

void icmp_server::thread_zext_ln215_2_fu_749_p1() {
    zext_ln215_2_fu_749_p1 = esl_zext<17,16>(tmp_2_fu_579_p3.read());
}

void icmp_server::thread_zext_ln215_3_fu_753_p1() {
    zext_ln215_3_fu_753_p1 = esl_zext<17,16>(tmp_s_fu_551_p3.read());
}

void icmp_server::thread_zext_ln215_4_fu_763_p1() {
    zext_ln215_4_fu_763_p1 = esl_zext<17,16>(tmp_9_fu_523_p3.read());
}

void icmp_server::thread_zext_ln215_5_fu_767_p1() {
    zext_ln215_5_fu_767_p1 = esl_zext<17,16>(tmp_8_fu_495_p3.read());
}

void icmp_server::thread_zext_ln215_6_fu_777_p1() {
    zext_ln215_6_fu_777_p1 = esl_zext<17,16>(tmp_7_fu_467_p3.read());
}

void icmp_server::thread_zext_ln215_7_fu_781_p1() {
    zext_ln215_7_fu_781_p1 = esl_zext<17,16>(tmp_6_fu_439_p3.read());
}

void icmp_server::thread_zext_ln215_8_fu_791_p1() {
    zext_ln215_8_fu_791_p1 = esl_zext<17,16>(tmp_5_fu_411_p3.read());
}

void icmp_server::thread_zext_ln215_9_fu_795_p1() {
    zext_ln215_9_fu_795_p1 = esl_zext<17,16>(tmp_4_fu_383_p3.read());
}

void icmp_server::thread_zext_ln215_fu_735_p1() {
    zext_ln215_fu_735_p1 = esl_zext<17,16>(p_Result_14_fu_727_p3.read());
}

void icmp_server::thread_zext_ln306_fu_711_p1() {
    zext_ln306_fu_711_p1 = esl_zext<17,16>(tmp_11_fu_703_p3.read());
}

void icmp_server::thread_zext_ln681_fu_1087_p1() {
    zext_ln681_fu_1087_p1 = esl_zext<16,5>(add_ln214_fu_1081_p2.read());
}

void icmp_server::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void icmp_server::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_icmp_TDATA\" :  \"" << s_axis_icmp_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_icmp_TVALID\" :  \"" << s_axis_icmp_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axis_icmp_TREADY\" :  \"" << s_axis_icmp_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_icmp_TKEEP\" :  \"" << s_axis_icmp_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_icmp_TLAST\" :  \"" << s_axis_icmp_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"myIpAddress_V\" :  \"" << myIpAddress_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_icmp_TDATA\" :  \"" << m_axis_icmp_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_icmp_TVALID\" :  \"" << m_axis_icmp_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_icmp_TREADY\" :  \"" << m_axis_icmp_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_icmp_TKEEP\" :  \"" << m_axis_icmp_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_icmp_TLAST\" :  \"" << m_axis_icmp_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

