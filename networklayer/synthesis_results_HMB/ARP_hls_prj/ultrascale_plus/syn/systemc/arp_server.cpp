// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "arp_server.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int arp_server::C_S_AXI_DATA_WIDTH = "100000";
const int arp_server::C_S_AXI_WSTRB_WIDTH = "100";
const int arp_server::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic arp_server::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<512> arp_server::ap_const_lv512_lc_2 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> arp_server::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> arp_server::ap_const_lv1_0 = "0";
const sc_lv<56> arp_server::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_logic arp_server::ap_const_logic_0 = sc_dt::Log_0;

arp_server::arp_server(sc_module_name name) : sc_module(name), mVcdFile(0) {
    arp_server_s_axilite_s_axi_U = new arp_server_s_axilite_s_axi<C_S_AXI_S_AXILITE_ADDR_WIDTH,C_S_AXI_S_AXILITE_DATA_WIDTH>("arp_server_s_axilite_s_axi_U");
    arp_server_s_axilite_s_axi_U->AWVALID(s_axi_s_axilite_AWVALID);
    arp_server_s_axilite_s_axi_U->AWREADY(s_axi_s_axilite_AWREADY);
    arp_server_s_axilite_s_axi_U->AWADDR(s_axi_s_axilite_AWADDR);
    arp_server_s_axilite_s_axi_U->WVALID(s_axi_s_axilite_WVALID);
    arp_server_s_axilite_s_axi_U->WREADY(s_axi_s_axilite_WREADY);
    arp_server_s_axilite_s_axi_U->WDATA(s_axi_s_axilite_WDATA);
    arp_server_s_axilite_s_axi_U->WSTRB(s_axi_s_axilite_WSTRB);
    arp_server_s_axilite_s_axi_U->ARVALID(s_axi_s_axilite_ARVALID);
    arp_server_s_axilite_s_axi_U->ARREADY(s_axi_s_axilite_ARREADY);
    arp_server_s_axilite_s_axi_U->ARADDR(s_axi_s_axilite_ARADDR);
    arp_server_s_axilite_s_axi_U->RVALID(s_axi_s_axilite_RVALID);
    arp_server_s_axilite_s_axi_U->RREADY(s_axi_s_axilite_RREADY);
    arp_server_s_axilite_s_axi_U->RDATA(s_axi_s_axilite_RDATA);
    arp_server_s_axilite_s_axi_U->RRESP(s_axi_s_axilite_RRESP);
    arp_server_s_axilite_s_axi_U->BVALID(s_axi_s_axilite_BVALID);
    arp_server_s_axilite_s_axi_U->BREADY(s_axi_s_axilite_BREADY);
    arp_server_s_axilite_s_axi_U->BRESP(s_axi_s_axilite_BRESP);
    arp_server_s_axilite_s_axi_U->ACLK(ap_clk);
    arp_server_s_axilite_s_axi_U->ARESET(ap_rst_n_inv);
    arp_server_s_axilite_s_axi_U->ACLK_EN(ap_var_for_const0);
    arp_server_s_axilite_s_axi_U->arpTable_macAddress_V_address0(arp_table_U0_arpTable_macAddress_V_address0);
    arp_server_s_axilite_s_axi_U->arpTable_macAddress_V_ce0(arp_table_U0_arpTable_macAddress_V_ce0);
    arp_server_s_axilite_s_axi_U->arpTable_macAddress_V_we0(arp_table_U0_arpTable_macAddress_V_we0);
    arp_server_s_axilite_s_axi_U->arpTable_macAddress_V_d0(arp_table_U0_arpTable_macAddress_V_d0);
    arp_server_s_axilite_s_axi_U->arpTable_macAddress_V_q0(arpTable_macAddress_V_q0);
    arp_server_s_axilite_s_axi_U->arpTable_ipAddress_V_address0(arp_table_U0_arpTable_ipAddress_V_address0);
    arp_server_s_axilite_s_axi_U->arpTable_ipAddress_V_ce0(arp_table_U0_arpTable_ipAddress_V_ce0);
    arp_server_s_axilite_s_axi_U->arpTable_ipAddress_V_we0(arp_table_U0_arpTable_ipAddress_V_we0);
    arp_server_s_axilite_s_axi_U->arpTable_ipAddress_V_d0(arp_table_U0_arpTable_ipAddress_V_d0);
    arp_server_s_axilite_s_axi_U->arpTable_valid_V_address0(arp_table_U0_arpTable_valid_V_address0);
    arp_server_s_axilite_s_axi_U->arpTable_valid_V_ce0(arp_table_U0_arpTable_valid_V_ce0);
    arp_server_s_axilite_s_axi_U->arpTable_valid_V_we0(arp_table_U0_arpTable_valid_V_we0);
    arp_server_s_axilite_s_axi_U->arpTable_valid_V_d0(arp_table_U0_arpTable_valid_V_d0);
    arp_server_s_axilite_s_axi_U->arpTable_valid_V_q0(arpTable_valid_V_q0);
    arp_server_s_axilite_s_axi_U->arp_scan_V_o(genARPDiscovery_U0_arp_scan_V_o);
    arp_server_s_axilite_s_axi_U->arp_scan_V_o_ap_vld(genARPDiscovery_U0_arp_scan_V_o_ap_vld);
    arp_server_s_axilite_s_axi_U->arp_scan_V_i(arp_scan_V_i);
    arp_server_entry174_U0 = new arp_server_entry174("arp_server_entry174_U0");
    arp_server_entry174_U0->ap_clk(ap_clk);
    arp_server_entry174_U0->ap_rst(ap_rst_n_inv);
    arp_server_entry174_U0->ap_start(arp_server_entry174_U0_ap_start);
    arp_server_entry174_U0->ap_done(arp_server_entry174_U0_ap_done);
    arp_server_entry174_U0->ap_continue(arp_server_entry174_U0_ap_continue);
    arp_server_entry174_U0->ap_idle(arp_server_entry174_U0_ap_idle);
    arp_server_entry174_U0->ap_ready(arp_server_entry174_U0_ap_ready);
    arp_server_entry174_U0->myMacAddress_V(myMacAddress_V);
    arp_server_entry174_U0->myIpAddress_V(myIpAddress_V);
    arp_server_entry174_U0->gatewayIP_V(gatewayIP_V);
    arp_server_entry174_U0->networkMask_V(networkMask_V);
    arp_server_entry174_U0->myMacAddress_V_out_din(arp_server_entry174_U0_myMacAddress_V_out_din);
    arp_server_entry174_U0->myMacAddress_V_out_full_n(myMacAddress_V_c_full_n);
    arp_server_entry174_U0->myMacAddress_V_out_write(arp_server_entry174_U0_myMacAddress_V_out_write);
    arp_server_entry174_U0->myIpAddress_V_out_din(arp_server_entry174_U0_myIpAddress_V_out_din);
    arp_server_entry174_U0->myIpAddress_V_out_full_n(myIpAddress_V_c_full_n);
    arp_server_entry174_U0->myIpAddress_V_out_write(arp_server_entry174_U0_myIpAddress_V_out_write);
    arp_server_entry174_U0->myIpAddress_V_out1_din(arp_server_entry174_U0_myIpAddress_V_out1_din);
    arp_server_entry174_U0->myIpAddress_V_out1_full_n(myIpAddress_V_c40_full_n);
    arp_server_entry174_U0->myIpAddress_V_out1_write(arp_server_entry174_U0_myIpAddress_V_out1_write);
    arp_server_entry174_U0->gatewayIP_V_out_din(arp_server_entry174_U0_gatewayIP_V_out_din);
    arp_server_entry174_U0->gatewayIP_V_out_full_n(gatewayIP_V_c_full_n);
    arp_server_entry174_U0->gatewayIP_V_out_write(arp_server_entry174_U0_gatewayIP_V_out_write);
    arp_server_entry174_U0->networkMask_V_out_din(arp_server_entry174_U0_networkMask_V_out_din);
    arp_server_entry174_U0->networkMask_V_out_full_n(networkMask_V_c_full_n);
    arp_server_entry174_U0->networkMask_V_out_write(arp_server_entry174_U0_networkMask_V_out_write);
    genARPDiscovery_U0 = new genARPDiscovery("genARPDiscovery_U0");
    genARPDiscovery_U0->ap_clk(ap_clk);
    genARPDiscovery_U0->ap_rst(ap_rst_n_inv);
    genARPDiscovery_U0->ap_start(genARPDiscovery_U0_ap_start);
    genARPDiscovery_U0->ap_done(genARPDiscovery_U0_ap_done);
    genARPDiscovery_U0->ap_continue(genARPDiscovery_U0_ap_continue);
    genARPDiscovery_U0->ap_idle(genARPDiscovery_U0_ap_idle);
    genARPDiscovery_U0->ap_ready(genARPDiscovery_U0_ap_ready);
    genARPDiscovery_U0->macIpEncodeIn_V_V_TVALID(macIpEncode_req_V_V_TVALID);
    genARPDiscovery_U0->macIpEncode_rsp_i_V_dout(macIpEncode_rsp_i_V_dout);
    genARPDiscovery_U0->macIpEncode_rsp_i_V_empty_n(macIpEncode_rsp_i_V_empty_n);
    genARPDiscovery_U0->macIpEncode_rsp_i_V_read(genARPDiscovery_U0_macIpEncode_rsp_i_V_read);
    genARPDiscovery_U0->myIpAddress_V_dout(myIpAddress_V_c_dout);
    genARPDiscovery_U0->myIpAddress_V_empty_n(myIpAddress_V_c_empty_n);
    genARPDiscovery_U0->myIpAddress_V_read(genARPDiscovery_U0_myIpAddress_V_read);
    genARPDiscovery_U0->macIpEncode_i_V_V_din(genARPDiscovery_U0_macIpEncode_i_V_V_din);
    genARPDiscovery_U0->macIpEncode_i_V_V_full_n(macIpEncode_i_V_V_full_n);
    genARPDiscovery_U0->macIpEncode_i_V_V_write(genARPDiscovery_U0_macIpEncode_i_V_V_write);
    genARPDiscovery_U0->macIpEncode_rsp_o_V_TREADY(macIpEncode_rsp_V_TREADY);
    genARPDiscovery_U0->macIpEncodeIn_V_V_TDATA(macIpEncode_req_V_V_TDATA);
    genARPDiscovery_U0->macIpEncodeIn_V_V_TREADY(genARPDiscovery_U0_macIpEncodeIn_V_V_TREADY);
    genARPDiscovery_U0->macIpEncode_rsp_o_V_TDATA(genARPDiscovery_U0_macIpEncode_rsp_o_V_TDATA);
    genARPDiscovery_U0->macIpEncode_rsp_o_V_TVALID(genARPDiscovery_U0_macIpEncode_rsp_o_V_TVALID);
    genARPDiscovery_U0->arp_scan_V_i(arp_scan_V_i);
    genARPDiscovery_U0->arp_scan_V_o(genARPDiscovery_U0_arp_scan_V_o);
    genARPDiscovery_U0->arp_scan_V_o_ap_vld(genARPDiscovery_U0_arp_scan_V_o_ap_vld);
    arp_pkg_receiver_U0 = new arp_pkg_receiver("arp_pkg_receiver_U0");
    arp_pkg_receiver_U0->ap_clk(ap_clk);
    arp_pkg_receiver_U0->ap_rst(ap_rst_n_inv);
    arp_pkg_receiver_U0->ap_start(arp_pkg_receiver_U0_ap_start);
    arp_pkg_receiver_U0->ap_done(arp_pkg_receiver_U0_ap_done);
    arp_pkg_receiver_U0->ap_continue(arp_pkg_receiver_U0_ap_continue);
    arp_pkg_receiver_U0->ap_idle(arp_pkg_receiver_U0_ap_idle);
    arp_pkg_receiver_U0->ap_ready(arp_pkg_receiver_U0_ap_ready);
    arp_pkg_receiver_U0->myIpAddress_V_dout(myIpAddress_V_c40_dout);
    arp_pkg_receiver_U0->myIpAddress_V_empty_n(myIpAddress_V_c40_empty_n);
    arp_pkg_receiver_U0->myIpAddress_V_read(arp_pkg_receiver_U0_myIpAddress_V_read);
    arp_pkg_receiver_U0->myIpAddress_V_out_din(arp_pkg_receiver_U0_myIpAddress_V_out_din);
    arp_pkg_receiver_U0->myIpAddress_V_out_full_n(myIpAddress_V_c41_full_n);
    arp_pkg_receiver_U0->myIpAddress_V_out_write(arp_pkg_receiver_U0_myIpAddress_V_out_write);
    arp_pkg_receiver_U0->arpDataIn_TVALID(arpDataIn_TVALID);
    arp_pkg_receiver_U0->arpTableInsertFifo_V_din(arp_pkg_receiver_U0_arpTableInsertFifo_V_din);
    arp_pkg_receiver_U0->arpTableInsertFifo_V_full_n(arpTableInsertFifo_V_full_n);
    arp_pkg_receiver_U0->arpTableInsertFifo_V_write(arp_pkg_receiver_U0_arpTableInsertFifo_V_write);
    arp_pkg_receiver_U0->arpReplyFifo_V_din(arp_pkg_receiver_U0_arpReplyFifo_V_din);
    arp_pkg_receiver_U0->arpReplyFifo_V_full_n(arpReplyFifo_V_full_n);
    arp_pkg_receiver_U0->arpReplyFifo_V_write(arp_pkg_receiver_U0_arpReplyFifo_V_write);
    arp_pkg_receiver_U0->arpDataIn_TDATA(arpDataIn_TDATA);
    arp_pkg_receiver_U0->arpDataIn_TREADY(arp_pkg_receiver_U0_arpDataIn_TREADY);
    arp_pkg_receiver_U0->arpDataIn_TKEEP(arpDataIn_TKEEP);
    arp_pkg_receiver_U0->arpDataIn_TLAST(arpDataIn_TLAST);
    arp_pkg_sender_U0 = new arp_pkg_sender("arp_pkg_sender_U0");
    arp_pkg_sender_U0->ap_clk(ap_clk);
    arp_pkg_sender_U0->ap_rst(ap_rst_n_inv);
    arp_pkg_sender_U0->ap_start(arp_pkg_sender_U0_ap_start);
    arp_pkg_sender_U0->ap_done(arp_pkg_sender_U0_ap_done);
    arp_pkg_sender_U0->ap_continue(arp_pkg_sender_U0_ap_continue);
    arp_pkg_sender_U0->ap_idle(arp_pkg_sender_U0_ap_idle);
    arp_pkg_sender_U0->ap_ready(arp_pkg_sender_U0_ap_ready);
    arp_pkg_sender_U0->arpRequestFifo_V_V_dout(arpRequestFifo_V_V_dout);
    arp_pkg_sender_U0->arpRequestFifo_V_V_empty_n(arpRequestFifo_V_V_empty_n);
    arp_pkg_sender_U0->arpRequestFifo_V_V_read(arp_pkg_sender_U0_arpRequestFifo_V_V_read);
    arp_pkg_sender_U0->arpReplyFifo_V_dout(arpReplyFifo_V_dout);
    arp_pkg_sender_U0->arpReplyFifo_V_empty_n(arpReplyFifo_V_empty_n);
    arp_pkg_sender_U0->arpReplyFifo_V_read(arp_pkg_sender_U0_arpReplyFifo_V_read);
    arp_pkg_sender_U0->myIpAddress_V_dout(myIpAddress_V_c41_dout);
    arp_pkg_sender_U0->myIpAddress_V_empty_n(myIpAddress_V_c41_empty_n);
    arp_pkg_sender_U0->myIpAddress_V_read(arp_pkg_sender_U0_myIpAddress_V_read);
    arp_pkg_sender_U0->gatewayIP_V_dout(gatewayIP_V_c_dout);
    arp_pkg_sender_U0->gatewayIP_V_empty_n(gatewayIP_V_c_empty_n);
    arp_pkg_sender_U0->gatewayIP_V_read(arp_pkg_sender_U0_gatewayIP_V_read);
    arp_pkg_sender_U0->networkMask_V_dout(networkMask_V_c_dout);
    arp_pkg_sender_U0->networkMask_V_empty_n(networkMask_V_c_empty_n);
    arp_pkg_sender_U0->networkMask_V_read(arp_pkg_sender_U0_networkMask_V_read);
    arp_pkg_sender_U0->myIpAddress_V_out_din(arp_pkg_sender_U0_myIpAddress_V_out_din);
    arp_pkg_sender_U0->myIpAddress_V_out_full_n(myIpAddress_V_c42_full_n);
    arp_pkg_sender_U0->myIpAddress_V_out_write(arp_pkg_sender_U0_myIpAddress_V_out_write);
    arp_pkg_sender_U0->gatewayIP_V_out_din(arp_pkg_sender_U0_gatewayIP_V_out_din);
    arp_pkg_sender_U0->gatewayIP_V_out_full_n(gatewayIP_V_c43_full_n);
    arp_pkg_sender_U0->gatewayIP_V_out_write(arp_pkg_sender_U0_gatewayIP_V_out_write);
    arp_pkg_sender_U0->networkMask_V_out_din(arp_pkg_sender_U0_networkMask_V_out_din);
    arp_pkg_sender_U0->networkMask_V_out_full_n(networkMask_V_c44_full_n);
    arp_pkg_sender_U0->networkMask_V_out_write(arp_pkg_sender_U0_networkMask_V_out_write);
    arp_pkg_sender_U0->myMacAddress_V_dout(myMacAddress_V_c_dout);
    arp_pkg_sender_U0->myMacAddress_V_empty_n(myMacAddress_V_c_empty_n);
    arp_pkg_sender_U0->myMacAddress_V_read(arp_pkg_sender_U0_myMacAddress_V_read);
    arp_pkg_sender_U0->arpDataOut_TREADY(arpDataOut_TREADY);
    arp_pkg_sender_U0->arpDataOut_TDATA(arp_pkg_sender_U0_arpDataOut_TDATA);
    arp_pkg_sender_U0->arpDataOut_TVALID(arp_pkg_sender_U0_arpDataOut_TVALID);
    arp_pkg_sender_U0->arpDataOut_TKEEP(arp_pkg_sender_U0_arpDataOut_TKEEP);
    arp_pkg_sender_U0->arpDataOut_TLAST(arp_pkg_sender_U0_arpDataOut_TLAST);
    arp_table_U0 = new arp_table("arp_table_U0");
    arp_table_U0->ap_clk(ap_clk);
    arp_table_U0->ap_rst(ap_rst_n_inv);
    arp_table_U0->ap_start(arp_table_U0_ap_start);
    arp_table_U0->ap_done(arp_table_U0_ap_done);
    arp_table_U0->ap_continue(arp_table_U0_ap_continue);
    arp_table_U0->ap_idle(arp_table_U0_ap_idle);
    arp_table_U0->ap_ready(arp_table_U0_ap_ready);
    arp_table_U0->myIpAddress_V_dout(myIpAddress_V_c42_dout);
    arp_table_U0->myIpAddress_V_empty_n(myIpAddress_V_c42_empty_n);
    arp_table_U0->myIpAddress_V_read(arp_table_U0_myIpAddress_V_read);
    arp_table_U0->gatewayIP_V_dout(gatewayIP_V_c43_dout);
    arp_table_U0->gatewayIP_V_empty_n(gatewayIP_V_c43_empty_n);
    arp_table_U0->gatewayIP_V_read(arp_table_U0_gatewayIP_V_read);
    arp_table_U0->networkMask_V_dout(networkMask_V_c44_dout);
    arp_table_U0->networkMask_V_empty_n(networkMask_V_c44_empty_n);
    arp_table_U0->networkMask_V_read(arp_table_U0_networkMask_V_read);
    arp_table_U0->macIpEncode_i_V_V_dout(macIpEncode_i_V_V_dout);
    arp_table_U0->macIpEncode_i_V_V_empty_n(macIpEncode_i_V_V_empty_n);
    arp_table_U0->macIpEncode_i_V_V_read(arp_table_U0_macIpEncode_i_V_V_read);
    arp_table_U0->arpTableInsertFifo_V_dout(arpTableInsertFifo_V_dout);
    arp_table_U0->arpTableInsertFifo_V_empty_n(arpTableInsertFifo_V_empty_n);
    arp_table_U0->arpTableInsertFifo_V_read(arp_table_U0_arpTableInsertFifo_V_read);
    arp_table_U0->macIpEncode_rsp_i_V_din(arp_table_U0_macIpEncode_rsp_i_V_din);
    arp_table_U0->macIpEncode_rsp_i_V_full_n(macIpEncode_rsp_i_V_full_n);
    arp_table_U0->macIpEncode_rsp_i_V_write(arp_table_U0_macIpEncode_rsp_i_V_write);
    arp_table_U0->arpRequestFifo_V_V_din(arp_table_U0_arpRequestFifo_V_V_din);
    arp_table_U0->arpRequestFifo_V_V_full_n(arpRequestFifo_V_V_full_n);
    arp_table_U0->arpRequestFifo_V_V_write(arp_table_U0_arpRequestFifo_V_V_write);
    arp_table_U0->arpTable_macAddress_V_address0(arp_table_U0_arpTable_macAddress_V_address0);
    arp_table_U0->arpTable_macAddress_V_ce0(arp_table_U0_arpTable_macAddress_V_ce0);
    arp_table_U0->arpTable_macAddress_V_we0(arp_table_U0_arpTable_macAddress_V_we0);
    arp_table_U0->arpTable_macAddress_V_d0(arp_table_U0_arpTable_macAddress_V_d0);
    arp_table_U0->arpTable_macAddress_V_q0(arpTable_macAddress_V_q0);
    arp_table_U0->arpTable_ipAddress_V_address0(arp_table_U0_arpTable_ipAddress_V_address0);
    arp_table_U0->arpTable_ipAddress_V_ce0(arp_table_U0_arpTable_ipAddress_V_ce0);
    arp_table_U0->arpTable_ipAddress_V_we0(arp_table_U0_arpTable_ipAddress_V_we0);
    arp_table_U0->arpTable_ipAddress_V_d0(arp_table_U0_arpTable_ipAddress_V_d0);
    arp_table_U0->arpTable_valid_V_address0(arp_table_U0_arpTable_valid_V_address0);
    arp_table_U0->arpTable_valid_V_ce0(arp_table_U0_arpTable_valid_V_ce0);
    arp_table_U0->arpTable_valid_V_we0(arp_table_U0_arpTable_valid_V_we0);
    arp_table_U0->arpTable_valid_V_d0(arp_table_U0_arpTable_valid_V_d0);
    arp_table_U0->arpTable_valid_V_q0(arpTable_valid_V_q0);
    myMacAddress_V_c_U = new fifo_w48_d3_A("myMacAddress_V_c_U");
    myMacAddress_V_c_U->clk(ap_clk);
    myMacAddress_V_c_U->reset(ap_rst_n_inv);
    myMacAddress_V_c_U->if_read_ce(ap_var_for_const0);
    myMacAddress_V_c_U->if_write_ce(ap_var_for_const0);
    myMacAddress_V_c_U->if_din(arp_server_entry174_U0_myMacAddress_V_out_din);
    myMacAddress_V_c_U->if_full_n(myMacAddress_V_c_full_n);
    myMacAddress_V_c_U->if_write(arp_server_entry174_U0_myMacAddress_V_out_write);
    myMacAddress_V_c_U->if_dout(myMacAddress_V_c_dout);
    myMacAddress_V_c_U->if_empty_n(myMacAddress_V_c_empty_n);
    myMacAddress_V_c_U->if_read(arp_pkg_sender_U0_myMacAddress_V_read);
    myIpAddress_V_c_U = new fifo_w32_d2_A("myIpAddress_V_c_U");
    myIpAddress_V_c_U->clk(ap_clk);
    myIpAddress_V_c_U->reset(ap_rst_n_inv);
    myIpAddress_V_c_U->if_read_ce(ap_var_for_const0);
    myIpAddress_V_c_U->if_write_ce(ap_var_for_const0);
    myIpAddress_V_c_U->if_din(arp_server_entry174_U0_myIpAddress_V_out_din);
    myIpAddress_V_c_U->if_full_n(myIpAddress_V_c_full_n);
    myIpAddress_V_c_U->if_write(arp_server_entry174_U0_myIpAddress_V_out_write);
    myIpAddress_V_c_U->if_dout(myIpAddress_V_c_dout);
    myIpAddress_V_c_U->if_empty_n(myIpAddress_V_c_empty_n);
    myIpAddress_V_c_U->if_read(genARPDiscovery_U0_myIpAddress_V_read);
    myIpAddress_V_c40_U = new fifo_w32_d2_A("myIpAddress_V_c40_U");
    myIpAddress_V_c40_U->clk(ap_clk);
    myIpAddress_V_c40_U->reset(ap_rst_n_inv);
    myIpAddress_V_c40_U->if_read_ce(ap_var_for_const0);
    myIpAddress_V_c40_U->if_write_ce(ap_var_for_const0);
    myIpAddress_V_c40_U->if_din(arp_server_entry174_U0_myIpAddress_V_out1_din);
    myIpAddress_V_c40_U->if_full_n(myIpAddress_V_c40_full_n);
    myIpAddress_V_c40_U->if_write(arp_server_entry174_U0_myIpAddress_V_out1_write);
    myIpAddress_V_c40_U->if_dout(myIpAddress_V_c40_dout);
    myIpAddress_V_c40_U->if_empty_n(myIpAddress_V_c40_empty_n);
    myIpAddress_V_c40_U->if_read(arp_pkg_receiver_U0_myIpAddress_V_read);
    gatewayIP_V_c_U = new fifo_w32_d3_A("gatewayIP_V_c_U");
    gatewayIP_V_c_U->clk(ap_clk);
    gatewayIP_V_c_U->reset(ap_rst_n_inv);
    gatewayIP_V_c_U->if_read_ce(ap_var_for_const0);
    gatewayIP_V_c_U->if_write_ce(ap_var_for_const0);
    gatewayIP_V_c_U->if_din(arp_server_entry174_U0_gatewayIP_V_out_din);
    gatewayIP_V_c_U->if_full_n(gatewayIP_V_c_full_n);
    gatewayIP_V_c_U->if_write(arp_server_entry174_U0_gatewayIP_V_out_write);
    gatewayIP_V_c_U->if_dout(gatewayIP_V_c_dout);
    gatewayIP_V_c_U->if_empty_n(gatewayIP_V_c_empty_n);
    gatewayIP_V_c_U->if_read(arp_pkg_sender_U0_gatewayIP_V_read);
    networkMask_V_c_U = new fifo_w32_d3_A("networkMask_V_c_U");
    networkMask_V_c_U->clk(ap_clk);
    networkMask_V_c_U->reset(ap_rst_n_inv);
    networkMask_V_c_U->if_read_ce(ap_var_for_const0);
    networkMask_V_c_U->if_write_ce(ap_var_for_const0);
    networkMask_V_c_U->if_din(arp_server_entry174_U0_networkMask_V_out_din);
    networkMask_V_c_U->if_full_n(networkMask_V_c_full_n);
    networkMask_V_c_U->if_write(arp_server_entry174_U0_networkMask_V_out_write);
    networkMask_V_c_U->if_dout(networkMask_V_c_dout);
    networkMask_V_c_U->if_empty_n(networkMask_V_c_empty_n);
    networkMask_V_c_U->if_read(arp_pkg_sender_U0_networkMask_V_read);
    macIpEncode_i_V_V_U = new fifo_w32_d4_A("macIpEncode_i_V_V_U");
    macIpEncode_i_V_V_U->clk(ap_clk);
    macIpEncode_i_V_V_U->reset(ap_rst_n_inv);
    macIpEncode_i_V_V_U->if_read_ce(ap_var_for_const0);
    macIpEncode_i_V_V_U->if_write_ce(ap_var_for_const0);
    macIpEncode_i_V_V_U->if_din(genARPDiscovery_U0_macIpEncode_i_V_V_din);
    macIpEncode_i_V_V_U->if_full_n(macIpEncode_i_V_V_full_n);
    macIpEncode_i_V_V_U->if_write(genARPDiscovery_U0_macIpEncode_i_V_V_write);
    macIpEncode_i_V_V_U->if_dout(macIpEncode_i_V_V_dout);
    macIpEncode_i_V_V_U->if_empty_n(macIpEncode_i_V_V_empty_n);
    macIpEncode_i_V_V_U->if_read(arp_table_U0_macIpEncode_i_V_V_read);
    macIpEncode_rsp_i_V_U = new fifo_w49_d4_A("macIpEncode_rsp_i_V_U");
    macIpEncode_rsp_i_V_U->clk(ap_clk);
    macIpEncode_rsp_i_V_U->reset(ap_rst_n_inv);
    macIpEncode_rsp_i_V_U->if_read_ce(ap_var_for_const0);
    macIpEncode_rsp_i_V_U->if_write_ce(ap_var_for_const0);
    macIpEncode_rsp_i_V_U->if_din(arp_table_U0_macIpEncode_rsp_i_V_din);
    macIpEncode_rsp_i_V_U->if_full_n(macIpEncode_rsp_i_V_full_n);
    macIpEncode_rsp_i_V_U->if_write(arp_table_U0_macIpEncode_rsp_i_V_write);
    macIpEncode_rsp_i_V_U->if_dout(macIpEncode_rsp_i_V_dout);
    macIpEncode_rsp_i_V_U->if_empty_n(macIpEncode_rsp_i_V_empty_n);
    macIpEncode_rsp_i_V_U->if_read(genARPDiscovery_U0_macIpEncode_rsp_i_V_read);
    myIpAddress_V_c41_U = new fifo_w32_d2_A("myIpAddress_V_c41_U");
    myIpAddress_V_c41_U->clk(ap_clk);
    myIpAddress_V_c41_U->reset(ap_rst_n_inv);
    myIpAddress_V_c41_U->if_read_ce(ap_var_for_const0);
    myIpAddress_V_c41_U->if_write_ce(ap_var_for_const0);
    myIpAddress_V_c41_U->if_din(arp_pkg_receiver_U0_myIpAddress_V_out_din);
    myIpAddress_V_c41_U->if_full_n(myIpAddress_V_c41_full_n);
    myIpAddress_V_c41_U->if_write(arp_pkg_receiver_U0_myIpAddress_V_out_write);
    myIpAddress_V_c41_U->if_dout(myIpAddress_V_c41_dout);
    myIpAddress_V_c41_U->if_empty_n(myIpAddress_V_c41_empty_n);
    myIpAddress_V_c41_U->if_read(arp_pkg_sender_U0_myIpAddress_V_read);
    arpReplyFifo_V_U = new fifo_w192_d4_A("arpReplyFifo_V_U");
    arpReplyFifo_V_U->clk(ap_clk);
    arpReplyFifo_V_U->reset(ap_rst_n_inv);
    arpReplyFifo_V_U->if_read_ce(ap_var_for_const0);
    arpReplyFifo_V_U->if_write_ce(ap_var_for_const0);
    arpReplyFifo_V_U->if_din(arp_pkg_receiver_U0_arpReplyFifo_V_din);
    arpReplyFifo_V_U->if_full_n(arpReplyFifo_V_full_n);
    arpReplyFifo_V_U->if_write(arp_pkg_receiver_U0_arpReplyFifo_V_write);
    arpReplyFifo_V_U->if_dout(arpReplyFifo_V_dout);
    arpReplyFifo_V_U->if_empty_n(arpReplyFifo_V_empty_n);
    arpReplyFifo_V_U->if_read(arp_pkg_sender_U0_arpReplyFifo_V_read);
    arpTableInsertFifo_V_U = new fifo_w81_d4_A("arpTableInsertFifo_V_U");
    arpTableInsertFifo_V_U->clk(ap_clk);
    arpTableInsertFifo_V_U->reset(ap_rst_n_inv);
    arpTableInsertFifo_V_U->if_read_ce(ap_var_for_const0);
    arpTableInsertFifo_V_U->if_write_ce(ap_var_for_const0);
    arpTableInsertFifo_V_U->if_din(arp_pkg_receiver_U0_arpTableInsertFifo_V_din);
    arpTableInsertFifo_V_U->if_full_n(arpTableInsertFifo_V_full_n);
    arpTableInsertFifo_V_U->if_write(arp_pkg_receiver_U0_arpTableInsertFifo_V_write);
    arpTableInsertFifo_V_U->if_dout(arpTableInsertFifo_V_dout);
    arpTableInsertFifo_V_U->if_empty_n(arpTableInsertFifo_V_empty_n);
    arpTableInsertFifo_V_U->if_read(arp_table_U0_arpTableInsertFifo_V_read);
    myIpAddress_V_c42_U = new fifo_w32_d2_A("myIpAddress_V_c42_U");
    myIpAddress_V_c42_U->clk(ap_clk);
    myIpAddress_V_c42_U->reset(ap_rst_n_inv);
    myIpAddress_V_c42_U->if_read_ce(ap_var_for_const0);
    myIpAddress_V_c42_U->if_write_ce(ap_var_for_const0);
    myIpAddress_V_c42_U->if_din(arp_pkg_sender_U0_myIpAddress_V_out_din);
    myIpAddress_V_c42_U->if_full_n(myIpAddress_V_c42_full_n);
    myIpAddress_V_c42_U->if_write(arp_pkg_sender_U0_myIpAddress_V_out_write);
    myIpAddress_V_c42_U->if_dout(myIpAddress_V_c42_dout);
    myIpAddress_V_c42_U->if_empty_n(myIpAddress_V_c42_empty_n);
    myIpAddress_V_c42_U->if_read(arp_table_U0_myIpAddress_V_read);
    gatewayIP_V_c43_U = new fifo_w32_d2_A("gatewayIP_V_c43_U");
    gatewayIP_V_c43_U->clk(ap_clk);
    gatewayIP_V_c43_U->reset(ap_rst_n_inv);
    gatewayIP_V_c43_U->if_read_ce(ap_var_for_const0);
    gatewayIP_V_c43_U->if_write_ce(ap_var_for_const0);
    gatewayIP_V_c43_U->if_din(arp_pkg_sender_U0_gatewayIP_V_out_din);
    gatewayIP_V_c43_U->if_full_n(gatewayIP_V_c43_full_n);
    gatewayIP_V_c43_U->if_write(arp_pkg_sender_U0_gatewayIP_V_out_write);
    gatewayIP_V_c43_U->if_dout(gatewayIP_V_c43_dout);
    gatewayIP_V_c43_U->if_empty_n(gatewayIP_V_c43_empty_n);
    gatewayIP_V_c43_U->if_read(arp_table_U0_gatewayIP_V_read);
    networkMask_V_c44_U = new fifo_w32_d2_A("networkMask_V_c44_U");
    networkMask_V_c44_U->clk(ap_clk);
    networkMask_V_c44_U->reset(ap_rst_n_inv);
    networkMask_V_c44_U->if_read_ce(ap_var_for_const0);
    networkMask_V_c44_U->if_write_ce(ap_var_for_const0);
    networkMask_V_c44_U->if_din(arp_pkg_sender_U0_networkMask_V_out_din);
    networkMask_V_c44_U->if_full_n(networkMask_V_c44_full_n);
    networkMask_V_c44_U->if_write(arp_pkg_sender_U0_networkMask_V_out_write);
    networkMask_V_c44_U->if_dout(networkMask_V_c44_dout);
    networkMask_V_c44_U->if_empty_n(networkMask_V_c44_empty_n);
    networkMask_V_c44_U->if_read(arp_table_U0_networkMask_V_read);
    arpRequestFifo_V_V_U = new fifo_w32_d4_A("arpRequestFifo_V_V_U");
    arpRequestFifo_V_V_U->clk(ap_clk);
    arpRequestFifo_V_V_U->reset(ap_rst_n_inv);
    arpRequestFifo_V_V_U->if_read_ce(ap_var_for_const0);
    arpRequestFifo_V_V_U->if_write_ce(ap_var_for_const0);
    arpRequestFifo_V_V_U->if_din(arp_table_U0_arpRequestFifo_V_V_din);
    arpRequestFifo_V_V_U->if_full_n(arpRequestFifo_V_V_full_n);
    arpRequestFifo_V_V_U->if_write(arp_table_U0_arpRequestFifo_V_V_write);
    arpRequestFifo_V_V_U->if_dout(arpRequestFifo_V_V_dout);
    arpRequestFifo_V_V_U->if_empty_n(arpRequestFifo_V_V_empty_n);
    arpRequestFifo_V_V_U->if_read(arp_pkg_sender_U0_arpRequestFifo_V_V_read);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_arpDataIn_TREADY);
    sensitive << ( arp_pkg_receiver_U0_arpDataIn_TREADY );

    SC_METHOD(thread_arpDataOut_TDATA);
    sensitive << ( arp_pkg_sender_U0_arpDataOut_TDATA );

    SC_METHOD(thread_arpDataOut_TKEEP);
    sensitive << ( arp_pkg_sender_U0_arpDataOut_TKEEP );

    SC_METHOD(thread_arpDataOut_TLAST);
    sensitive << ( arp_pkg_sender_U0_arpDataOut_TLAST );

    SC_METHOD(thread_arpDataOut_TVALID);
    sensitive << ( arp_pkg_sender_U0_arpDataOut_TVALID );

    SC_METHOD(thread_arp_pkg_receiver_U0_ap_continue);

    SC_METHOD(thread_arp_pkg_receiver_U0_ap_start);

    SC_METHOD(thread_arp_pkg_sender_U0_ap_continue);

    SC_METHOD(thread_arp_pkg_sender_U0_ap_start);

    SC_METHOD(thread_arp_server_entry174_U0_ap_continue);

    SC_METHOD(thread_arp_server_entry174_U0_ap_start);

    SC_METHOD(thread_arp_table_U0_ap_continue);

    SC_METHOD(thread_arp_table_U0_ap_start);

    SC_METHOD(thread_genARPDiscovery_U0_ap_continue);

    SC_METHOD(thread_genARPDiscovery_U0_ap_start);

    SC_METHOD(thread_macIpEncode_req_V_V_TREADY);
    sensitive << ( genARPDiscovery_U0_macIpEncodeIn_V_V_TREADY );

    SC_METHOD(thread_macIpEncode_rsp_V_TDATA);
    sensitive << ( genARPDiscovery_U0_macIpEncode_rsp_o_V_TDATA );

    SC_METHOD(thread_macIpEncode_rsp_V_TVALID);
    sensitive << ( genARPDiscovery_U0_macIpEncode_rsp_o_V_TVALID );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "arp_server_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_s_axilite_AWVALID, "(port)s_axi_s_axilite_AWVALID");
    sc_trace(mVcdFile, s_axi_s_axilite_AWREADY, "(port)s_axi_s_axilite_AWREADY");
    sc_trace(mVcdFile, s_axi_s_axilite_AWADDR, "(port)s_axi_s_axilite_AWADDR");
    sc_trace(mVcdFile, s_axi_s_axilite_WVALID, "(port)s_axi_s_axilite_WVALID");
    sc_trace(mVcdFile, s_axi_s_axilite_WREADY, "(port)s_axi_s_axilite_WREADY");
    sc_trace(mVcdFile, s_axi_s_axilite_WDATA, "(port)s_axi_s_axilite_WDATA");
    sc_trace(mVcdFile, s_axi_s_axilite_WSTRB, "(port)s_axi_s_axilite_WSTRB");
    sc_trace(mVcdFile, s_axi_s_axilite_ARVALID, "(port)s_axi_s_axilite_ARVALID");
    sc_trace(mVcdFile, s_axi_s_axilite_ARREADY, "(port)s_axi_s_axilite_ARREADY");
    sc_trace(mVcdFile, s_axi_s_axilite_ARADDR, "(port)s_axi_s_axilite_ARADDR");
    sc_trace(mVcdFile, s_axi_s_axilite_RVALID, "(port)s_axi_s_axilite_RVALID");
    sc_trace(mVcdFile, s_axi_s_axilite_RREADY, "(port)s_axi_s_axilite_RREADY");
    sc_trace(mVcdFile, s_axi_s_axilite_RDATA, "(port)s_axi_s_axilite_RDATA");
    sc_trace(mVcdFile, s_axi_s_axilite_RRESP, "(port)s_axi_s_axilite_RRESP");
    sc_trace(mVcdFile, s_axi_s_axilite_BVALID, "(port)s_axi_s_axilite_BVALID");
    sc_trace(mVcdFile, s_axi_s_axilite_BREADY, "(port)s_axi_s_axilite_BREADY");
    sc_trace(mVcdFile, s_axi_s_axilite_BRESP, "(port)s_axi_s_axilite_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, arpDataIn_TDATA, "(port)arpDataIn_TDATA");
    sc_trace(mVcdFile, arpDataIn_TKEEP, "(port)arpDataIn_TKEEP");
    sc_trace(mVcdFile, arpDataIn_TLAST, "(port)arpDataIn_TLAST");
    sc_trace(mVcdFile, macIpEncode_req_V_V_TDATA, "(port)macIpEncode_req_V_V_TDATA");
    sc_trace(mVcdFile, arpDataOut_TDATA, "(port)arpDataOut_TDATA");
    sc_trace(mVcdFile, arpDataOut_TKEEP, "(port)arpDataOut_TKEEP");
    sc_trace(mVcdFile, arpDataOut_TLAST, "(port)arpDataOut_TLAST");
    sc_trace(mVcdFile, macIpEncode_rsp_V_TDATA, "(port)macIpEncode_rsp_V_TDATA");
    sc_trace(mVcdFile, myMacAddress_V, "(port)myMacAddress_V");
    sc_trace(mVcdFile, myIpAddress_V, "(port)myIpAddress_V");
    sc_trace(mVcdFile, gatewayIP_V, "(port)gatewayIP_V");
    sc_trace(mVcdFile, networkMask_V, "(port)networkMask_V");
    sc_trace(mVcdFile, macIpEncode_req_V_V_TVALID, "(port)macIpEncode_req_V_V_TVALID");
    sc_trace(mVcdFile, macIpEncode_req_V_V_TREADY, "(port)macIpEncode_req_V_V_TREADY");
    sc_trace(mVcdFile, macIpEncode_rsp_V_TVALID, "(port)macIpEncode_rsp_V_TVALID");
    sc_trace(mVcdFile, macIpEncode_rsp_V_TREADY, "(port)macIpEncode_rsp_V_TREADY");
    sc_trace(mVcdFile, arpDataIn_TVALID, "(port)arpDataIn_TVALID");
    sc_trace(mVcdFile, arpDataIn_TREADY, "(port)arpDataIn_TREADY");
    sc_trace(mVcdFile, arpDataOut_TVALID, "(port)arpDataOut_TVALID");
    sc_trace(mVcdFile, arpDataOut_TREADY, "(port)arpDataOut_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, arpTable_macAddress_V_q0, "arpTable_macAddress_V_q0");
    sc_trace(mVcdFile, arpTable_valid_V_q0, "arpTable_valid_V_q0");
    sc_trace(mVcdFile, arp_scan_V_i, "arp_scan_V_i");
    sc_trace(mVcdFile, arp_server_entry174_U0_ap_start, "arp_server_entry174_U0_ap_start");
    sc_trace(mVcdFile, arp_server_entry174_U0_ap_done, "arp_server_entry174_U0_ap_done");
    sc_trace(mVcdFile, arp_server_entry174_U0_ap_continue, "arp_server_entry174_U0_ap_continue");
    sc_trace(mVcdFile, arp_server_entry174_U0_ap_idle, "arp_server_entry174_U0_ap_idle");
    sc_trace(mVcdFile, arp_server_entry174_U0_ap_ready, "arp_server_entry174_U0_ap_ready");
    sc_trace(mVcdFile, arp_server_entry174_U0_myMacAddress_V_out_din, "arp_server_entry174_U0_myMacAddress_V_out_din");
    sc_trace(mVcdFile, arp_server_entry174_U0_myMacAddress_V_out_write, "arp_server_entry174_U0_myMacAddress_V_out_write");
    sc_trace(mVcdFile, arp_server_entry174_U0_myIpAddress_V_out_din, "arp_server_entry174_U0_myIpAddress_V_out_din");
    sc_trace(mVcdFile, arp_server_entry174_U0_myIpAddress_V_out_write, "arp_server_entry174_U0_myIpAddress_V_out_write");
    sc_trace(mVcdFile, arp_server_entry174_U0_myIpAddress_V_out1_din, "arp_server_entry174_U0_myIpAddress_V_out1_din");
    sc_trace(mVcdFile, arp_server_entry174_U0_myIpAddress_V_out1_write, "arp_server_entry174_U0_myIpAddress_V_out1_write");
    sc_trace(mVcdFile, arp_server_entry174_U0_gatewayIP_V_out_din, "arp_server_entry174_U0_gatewayIP_V_out_din");
    sc_trace(mVcdFile, arp_server_entry174_U0_gatewayIP_V_out_write, "arp_server_entry174_U0_gatewayIP_V_out_write");
    sc_trace(mVcdFile, arp_server_entry174_U0_networkMask_V_out_din, "arp_server_entry174_U0_networkMask_V_out_din");
    sc_trace(mVcdFile, arp_server_entry174_U0_networkMask_V_out_write, "arp_server_entry174_U0_networkMask_V_out_write");
    sc_trace(mVcdFile, genARPDiscovery_U0_ap_start, "genARPDiscovery_U0_ap_start");
    sc_trace(mVcdFile, genARPDiscovery_U0_ap_done, "genARPDiscovery_U0_ap_done");
    sc_trace(mVcdFile, genARPDiscovery_U0_ap_continue, "genARPDiscovery_U0_ap_continue");
    sc_trace(mVcdFile, genARPDiscovery_U0_ap_idle, "genARPDiscovery_U0_ap_idle");
    sc_trace(mVcdFile, genARPDiscovery_U0_ap_ready, "genARPDiscovery_U0_ap_ready");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncode_rsp_i_V_read, "genARPDiscovery_U0_macIpEncode_rsp_i_V_read");
    sc_trace(mVcdFile, genARPDiscovery_U0_myIpAddress_V_read, "genARPDiscovery_U0_myIpAddress_V_read");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncode_i_V_V_din, "genARPDiscovery_U0_macIpEncode_i_V_V_din");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncode_i_V_V_write, "genARPDiscovery_U0_macIpEncode_i_V_V_write");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncodeIn_V_V_TREADY, "genARPDiscovery_U0_macIpEncodeIn_V_V_TREADY");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncode_rsp_o_V_TDATA, "genARPDiscovery_U0_macIpEncode_rsp_o_V_TDATA");
    sc_trace(mVcdFile, genARPDiscovery_U0_macIpEncode_rsp_o_V_TVALID, "genARPDiscovery_U0_macIpEncode_rsp_o_V_TVALID");
    sc_trace(mVcdFile, genARPDiscovery_U0_arp_scan_V_o, "genARPDiscovery_U0_arp_scan_V_o");
    sc_trace(mVcdFile, genARPDiscovery_U0_arp_scan_V_o_ap_vld, "genARPDiscovery_U0_arp_scan_V_o_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_ap_start, "arp_pkg_receiver_U0_ap_start");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_ap_done, "arp_pkg_receiver_U0_ap_done");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_ap_continue, "arp_pkg_receiver_U0_ap_continue");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_ap_idle, "arp_pkg_receiver_U0_ap_idle");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_ap_ready, "arp_pkg_receiver_U0_ap_ready");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_myIpAddress_V_read, "arp_pkg_receiver_U0_myIpAddress_V_read");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_myIpAddress_V_out_din, "arp_pkg_receiver_U0_myIpAddress_V_out_din");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_myIpAddress_V_out_write, "arp_pkg_receiver_U0_myIpAddress_V_out_write");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_arpTableInsertFifo_V_din, "arp_pkg_receiver_U0_arpTableInsertFifo_V_din");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_arpTableInsertFifo_V_write, "arp_pkg_receiver_U0_arpTableInsertFifo_V_write");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_arpReplyFifo_V_din, "arp_pkg_receiver_U0_arpReplyFifo_V_din");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_arpReplyFifo_V_write, "arp_pkg_receiver_U0_arpReplyFifo_V_write");
    sc_trace(mVcdFile, arp_pkg_receiver_U0_arpDataIn_TREADY, "arp_pkg_receiver_U0_arpDataIn_TREADY");
    sc_trace(mVcdFile, arp_pkg_sender_U0_ap_start, "arp_pkg_sender_U0_ap_start");
    sc_trace(mVcdFile, arp_pkg_sender_U0_ap_done, "arp_pkg_sender_U0_ap_done");
    sc_trace(mVcdFile, arp_pkg_sender_U0_ap_continue, "arp_pkg_sender_U0_ap_continue");
    sc_trace(mVcdFile, arp_pkg_sender_U0_ap_idle, "arp_pkg_sender_U0_ap_idle");
    sc_trace(mVcdFile, arp_pkg_sender_U0_ap_ready, "arp_pkg_sender_U0_ap_ready");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpRequestFifo_V_V_read, "arp_pkg_sender_U0_arpRequestFifo_V_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpReplyFifo_V_read, "arp_pkg_sender_U0_arpReplyFifo_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_myIpAddress_V_read, "arp_pkg_sender_U0_myIpAddress_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_gatewayIP_V_read, "arp_pkg_sender_U0_gatewayIP_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_networkMask_V_read, "arp_pkg_sender_U0_networkMask_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_myIpAddress_V_out_din, "arp_pkg_sender_U0_myIpAddress_V_out_din");
    sc_trace(mVcdFile, arp_pkg_sender_U0_myIpAddress_V_out_write, "arp_pkg_sender_U0_myIpAddress_V_out_write");
    sc_trace(mVcdFile, arp_pkg_sender_U0_gatewayIP_V_out_din, "arp_pkg_sender_U0_gatewayIP_V_out_din");
    sc_trace(mVcdFile, arp_pkg_sender_U0_gatewayIP_V_out_write, "arp_pkg_sender_U0_gatewayIP_V_out_write");
    sc_trace(mVcdFile, arp_pkg_sender_U0_networkMask_V_out_din, "arp_pkg_sender_U0_networkMask_V_out_din");
    sc_trace(mVcdFile, arp_pkg_sender_U0_networkMask_V_out_write, "arp_pkg_sender_U0_networkMask_V_out_write");
    sc_trace(mVcdFile, arp_pkg_sender_U0_myMacAddress_V_read, "arp_pkg_sender_U0_myMacAddress_V_read");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpDataOut_TDATA, "arp_pkg_sender_U0_arpDataOut_TDATA");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpDataOut_TVALID, "arp_pkg_sender_U0_arpDataOut_TVALID");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpDataOut_TKEEP, "arp_pkg_sender_U0_arpDataOut_TKEEP");
    sc_trace(mVcdFile, arp_pkg_sender_U0_arpDataOut_TLAST, "arp_pkg_sender_U0_arpDataOut_TLAST");
    sc_trace(mVcdFile, arp_table_U0_ap_start, "arp_table_U0_ap_start");
    sc_trace(mVcdFile, arp_table_U0_ap_done, "arp_table_U0_ap_done");
    sc_trace(mVcdFile, arp_table_U0_ap_continue, "arp_table_U0_ap_continue");
    sc_trace(mVcdFile, arp_table_U0_ap_idle, "arp_table_U0_ap_idle");
    sc_trace(mVcdFile, arp_table_U0_ap_ready, "arp_table_U0_ap_ready");
    sc_trace(mVcdFile, arp_table_U0_myIpAddress_V_read, "arp_table_U0_myIpAddress_V_read");
    sc_trace(mVcdFile, arp_table_U0_gatewayIP_V_read, "arp_table_U0_gatewayIP_V_read");
    sc_trace(mVcdFile, arp_table_U0_networkMask_V_read, "arp_table_U0_networkMask_V_read");
    sc_trace(mVcdFile, arp_table_U0_macIpEncode_i_V_V_read, "arp_table_U0_macIpEncode_i_V_V_read");
    sc_trace(mVcdFile, arp_table_U0_arpTableInsertFifo_V_read, "arp_table_U0_arpTableInsertFifo_V_read");
    sc_trace(mVcdFile, arp_table_U0_macIpEncode_rsp_i_V_din, "arp_table_U0_macIpEncode_rsp_i_V_din");
    sc_trace(mVcdFile, arp_table_U0_macIpEncode_rsp_i_V_write, "arp_table_U0_macIpEncode_rsp_i_V_write");
    sc_trace(mVcdFile, arp_table_U0_arpRequestFifo_V_V_din, "arp_table_U0_arpRequestFifo_V_V_din");
    sc_trace(mVcdFile, arp_table_U0_arpRequestFifo_V_V_write, "arp_table_U0_arpRequestFifo_V_V_write");
    sc_trace(mVcdFile, arp_table_U0_arpTable_macAddress_V_address0, "arp_table_U0_arpTable_macAddress_V_address0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_macAddress_V_ce0, "arp_table_U0_arpTable_macAddress_V_ce0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_macAddress_V_we0, "arp_table_U0_arpTable_macAddress_V_we0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_macAddress_V_d0, "arp_table_U0_arpTable_macAddress_V_d0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_ipAddress_V_address0, "arp_table_U0_arpTable_ipAddress_V_address0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_ipAddress_V_ce0, "arp_table_U0_arpTable_ipAddress_V_ce0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_ipAddress_V_we0, "arp_table_U0_arpTable_ipAddress_V_we0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_ipAddress_V_d0, "arp_table_U0_arpTable_ipAddress_V_d0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_valid_V_address0, "arp_table_U0_arpTable_valid_V_address0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_valid_V_ce0, "arp_table_U0_arpTable_valid_V_ce0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_valid_V_we0, "arp_table_U0_arpTable_valid_V_we0");
    sc_trace(mVcdFile, arp_table_U0_arpTable_valid_V_d0, "arp_table_U0_arpTable_valid_V_d0");
    sc_trace(mVcdFile, myMacAddress_V_c_full_n, "myMacAddress_V_c_full_n");
    sc_trace(mVcdFile, myMacAddress_V_c_dout, "myMacAddress_V_c_dout");
    sc_trace(mVcdFile, myMacAddress_V_c_empty_n, "myMacAddress_V_c_empty_n");
    sc_trace(mVcdFile, myIpAddress_V_c_full_n, "myIpAddress_V_c_full_n");
    sc_trace(mVcdFile, myIpAddress_V_c_dout, "myIpAddress_V_c_dout");
    sc_trace(mVcdFile, myIpAddress_V_c_empty_n, "myIpAddress_V_c_empty_n");
    sc_trace(mVcdFile, myIpAddress_V_c40_full_n, "myIpAddress_V_c40_full_n");
    sc_trace(mVcdFile, myIpAddress_V_c40_dout, "myIpAddress_V_c40_dout");
    sc_trace(mVcdFile, myIpAddress_V_c40_empty_n, "myIpAddress_V_c40_empty_n");
    sc_trace(mVcdFile, gatewayIP_V_c_full_n, "gatewayIP_V_c_full_n");
    sc_trace(mVcdFile, gatewayIP_V_c_dout, "gatewayIP_V_c_dout");
    sc_trace(mVcdFile, gatewayIP_V_c_empty_n, "gatewayIP_V_c_empty_n");
    sc_trace(mVcdFile, networkMask_V_c_full_n, "networkMask_V_c_full_n");
    sc_trace(mVcdFile, networkMask_V_c_dout, "networkMask_V_c_dout");
    sc_trace(mVcdFile, networkMask_V_c_empty_n, "networkMask_V_c_empty_n");
    sc_trace(mVcdFile, macIpEncode_i_V_V_full_n, "macIpEncode_i_V_V_full_n");
    sc_trace(mVcdFile, macIpEncode_i_V_V_dout, "macIpEncode_i_V_V_dout");
    sc_trace(mVcdFile, macIpEncode_i_V_V_empty_n, "macIpEncode_i_V_V_empty_n");
    sc_trace(mVcdFile, macIpEncode_rsp_i_V_full_n, "macIpEncode_rsp_i_V_full_n");
    sc_trace(mVcdFile, macIpEncode_rsp_i_V_dout, "macIpEncode_rsp_i_V_dout");
    sc_trace(mVcdFile, macIpEncode_rsp_i_V_empty_n, "macIpEncode_rsp_i_V_empty_n");
    sc_trace(mVcdFile, myIpAddress_V_c41_full_n, "myIpAddress_V_c41_full_n");
    sc_trace(mVcdFile, myIpAddress_V_c41_dout, "myIpAddress_V_c41_dout");
    sc_trace(mVcdFile, myIpAddress_V_c41_empty_n, "myIpAddress_V_c41_empty_n");
    sc_trace(mVcdFile, arpReplyFifo_V_full_n, "arpReplyFifo_V_full_n");
    sc_trace(mVcdFile, arpReplyFifo_V_dout, "arpReplyFifo_V_dout");
    sc_trace(mVcdFile, arpReplyFifo_V_empty_n, "arpReplyFifo_V_empty_n");
    sc_trace(mVcdFile, arpTableInsertFifo_V_full_n, "arpTableInsertFifo_V_full_n");
    sc_trace(mVcdFile, arpTableInsertFifo_V_dout, "arpTableInsertFifo_V_dout");
    sc_trace(mVcdFile, arpTableInsertFifo_V_empty_n, "arpTableInsertFifo_V_empty_n");
    sc_trace(mVcdFile, myIpAddress_V_c42_full_n, "myIpAddress_V_c42_full_n");
    sc_trace(mVcdFile, myIpAddress_V_c42_dout, "myIpAddress_V_c42_dout");
    sc_trace(mVcdFile, myIpAddress_V_c42_empty_n, "myIpAddress_V_c42_empty_n");
    sc_trace(mVcdFile, gatewayIP_V_c43_full_n, "gatewayIP_V_c43_full_n");
    sc_trace(mVcdFile, gatewayIP_V_c43_dout, "gatewayIP_V_c43_dout");
    sc_trace(mVcdFile, gatewayIP_V_c43_empty_n, "gatewayIP_V_c43_empty_n");
    sc_trace(mVcdFile, networkMask_V_c44_full_n, "networkMask_V_c44_full_n");
    sc_trace(mVcdFile, networkMask_V_c44_dout, "networkMask_V_c44_dout");
    sc_trace(mVcdFile, networkMask_V_c44_empty_n, "networkMask_V_c44_empty_n");
    sc_trace(mVcdFile, arpRequestFifo_V_V_full_n, "arpRequestFifo_V_V_full_n");
    sc_trace(mVcdFile, arpRequestFifo_V_V_dout, "arpRequestFifo_V_V_dout");
    sc_trace(mVcdFile, arpRequestFifo_V_V_empty_n, "arpRequestFifo_V_V_empty_n");
#endif

    }
    mHdltvinHandle.open("arp_server.hdltvin.dat");
    mHdltvoutHandle.open("arp_server.hdltvout.dat");
}

arp_server::~arp_server() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete arp_server_s_axilite_s_axi_U;
    delete arp_server_entry174_U0;
    delete genARPDiscovery_U0;
    delete arp_pkg_receiver_U0;
    delete arp_pkg_sender_U0;
    delete arp_table_U0;
    delete myMacAddress_V_c_U;
    delete myIpAddress_V_c_U;
    delete myIpAddress_V_c40_U;
    delete gatewayIP_V_c_U;
    delete networkMask_V_c_U;
    delete macIpEncode_i_V_V_U;
    delete macIpEncode_rsp_i_V_U;
    delete myIpAddress_V_c41_U;
    delete arpReplyFifo_V_U;
    delete arpTableInsertFifo_V_U;
    delete myIpAddress_V_c42_U;
    delete gatewayIP_V_c43_U;
    delete networkMask_V_c44_U;
    delete arpRequestFifo_V_V_U;
}

void arp_server::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void arp_server::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void arp_server::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void arp_server::thread_arpDataIn_TREADY() {
    arpDataIn_TREADY = arp_pkg_receiver_U0_arpDataIn_TREADY.read();
}

void arp_server::thread_arpDataOut_TDATA() {
    arpDataOut_TDATA = arp_pkg_sender_U0_arpDataOut_TDATA.read();
}

void arp_server::thread_arpDataOut_TKEEP() {
    arpDataOut_TKEEP = arp_pkg_sender_U0_arpDataOut_TKEEP.read();
}

void arp_server::thread_arpDataOut_TLAST() {
    arpDataOut_TLAST = arp_pkg_sender_U0_arpDataOut_TLAST.read();
}

void arp_server::thread_arpDataOut_TVALID() {
    arpDataOut_TVALID = arp_pkg_sender_U0_arpDataOut_TVALID.read();
}

void arp_server::thread_arp_pkg_receiver_U0_ap_continue() {
    arp_pkg_receiver_U0_ap_continue = ap_const_logic_1;
}

void arp_server::thread_arp_pkg_receiver_U0_ap_start() {
    arp_pkg_receiver_U0_ap_start = ap_const_logic_1;
}

void arp_server::thread_arp_pkg_sender_U0_ap_continue() {
    arp_pkg_sender_U0_ap_continue = ap_const_logic_1;
}

void arp_server::thread_arp_pkg_sender_U0_ap_start() {
    arp_pkg_sender_U0_ap_start = ap_const_logic_1;
}

void arp_server::thread_arp_server_entry174_U0_ap_continue() {
    arp_server_entry174_U0_ap_continue = ap_const_logic_1;
}

void arp_server::thread_arp_server_entry174_U0_ap_start() {
    arp_server_entry174_U0_ap_start = ap_const_logic_1;
}

void arp_server::thread_arp_table_U0_ap_continue() {
    arp_table_U0_ap_continue = ap_const_logic_1;
}

void arp_server::thread_arp_table_U0_ap_start() {
    arp_table_U0_ap_start = ap_const_logic_1;
}

void arp_server::thread_genARPDiscovery_U0_ap_continue() {
    genARPDiscovery_U0_ap_continue = ap_const_logic_1;
}

void arp_server::thread_genARPDiscovery_U0_ap_start() {
    genARPDiscovery_U0_ap_start = ap_const_logic_1;
}

void arp_server::thread_macIpEncode_req_V_V_TREADY() {
    macIpEncode_req_V_V_TREADY = genARPDiscovery_U0_macIpEncodeIn_V_V_TREADY.read();
}

void arp_server::thread_macIpEncode_rsp_V_TDATA() {
    macIpEncode_rsp_V_TDATA = genARPDiscovery_U0_macIpEncode_rsp_o_V_TDATA.read();
}

void arp_server::thread_macIpEncode_rsp_V_TVALID() {
    macIpEncode_rsp_V_TVALID = genARPDiscovery_U0_macIpEncode_rsp_o_V_TVALID.read();
}

void arp_server::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_s_axilite_AWVALID\" :  \"" << s_axi_s_axilite_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_s_axilite_AWREADY\" :  \"" << s_axi_s_axilite_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_AWADDR\" :  \"" << s_axi_s_axilite_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_WVALID\" :  \"" << s_axi_s_axilite_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_WREADY\" :  \"" << s_axi_s_axilite_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_WDATA\" :  \"" << s_axi_s_axilite_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_WSTRB\" :  \"" << s_axi_s_axilite_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_ARVALID\" :  \"" << s_axi_s_axilite_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_ARREADY\" :  \"" << s_axi_s_axilite_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_ARADDR\" :  \"" << s_axi_s_axilite_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_RVALID\" :  \"" << s_axi_s_axilite_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_RREADY\" :  \"" << s_axi_s_axilite_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_RDATA\" :  \"" << s_axi_s_axilite_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_RRESP\" :  \"" << s_axi_s_axilite_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_BVALID\" :  \"" << s_axi_s_axilite_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_s_axilite_BREADY\" :  \"" << s_axi_s_axilite_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_s_axilite_BRESP\" :  \"" << s_axi_s_axilite_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arpDataIn_TDATA\" :  \"" << arpDataIn_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arpDataIn_TKEEP\" :  \"" << arpDataIn_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arpDataIn_TLAST\" :  \"" << arpDataIn_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"macIpEncode_req_V_V_TDATA\" :  \"" << macIpEncode_req_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arpDataOut_TDATA\" :  \"" << arpDataOut_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arpDataOut_TKEEP\" :  \"" << arpDataOut_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arpDataOut_TLAST\" :  \"" << arpDataOut_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"macIpEncode_rsp_V_TDATA\" :  \"" << macIpEncode_rsp_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"myMacAddress_V\" :  \"" << myMacAddress_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"myIpAddress_V\" :  \"" << myIpAddress_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gatewayIP_V\" :  \"" << gatewayIP_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"networkMask_V\" :  \"" << networkMask_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"macIpEncode_req_V_V_TVALID\" :  \"" << macIpEncode_req_V_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"macIpEncode_req_V_V_TREADY\" :  \"" << macIpEncode_req_V_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"macIpEncode_rsp_V_TVALID\" :  \"" << macIpEncode_rsp_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"macIpEncode_rsp_V_TREADY\" :  \"" << macIpEncode_rsp_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arpDataIn_TVALID\" :  \"" << arpDataIn_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arpDataIn_TREADY\" :  \"" << arpDataIn_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arpDataOut_TVALID\" :  \"" << arpDataOut_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arpDataOut_TREADY\" :  \"" << arpDataOut_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

