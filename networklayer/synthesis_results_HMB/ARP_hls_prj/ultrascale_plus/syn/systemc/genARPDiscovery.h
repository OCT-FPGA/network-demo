// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _genARPDiscovery_HH_
#define _genARPDiscovery_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct genARPDiscovery : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > macIpEncodeIn_V_V_TVALID;
    sc_in< sc_lv<49> > macIpEncode_rsp_i_V_dout;
    sc_in< sc_logic > macIpEncode_rsp_i_V_empty_n;
    sc_out< sc_logic > macIpEncode_rsp_i_V_read;
    sc_in< sc_lv<32> > myIpAddress_V_dout;
    sc_in< sc_logic > myIpAddress_V_empty_n;
    sc_out< sc_logic > myIpAddress_V_read;
    sc_out< sc_lv<32> > macIpEncode_i_V_V_din;
    sc_in< sc_logic > macIpEncode_i_V_V_full_n;
    sc_out< sc_logic > macIpEncode_i_V_V_write;
    sc_in< sc_logic > macIpEncode_rsp_o_V_TREADY;
    sc_in< sc_lv<32> > macIpEncodeIn_V_V_TDATA;
    sc_out< sc_logic > macIpEncodeIn_V_V_TREADY;
    sc_out< sc_lv<56> > macIpEncode_rsp_o_V_TDATA;
    sc_out< sc_logic > macIpEncode_rsp_o_V_TVALID;
    sc_in< sc_lv<1> > arp_scan_V_i;
    sc_out< sc_lv<1> > arp_scan_V_o;
    sc_out< sc_logic > arp_scan_V_o_ap_vld;


    // Module declarations
    genARPDiscovery(sc_module_name name);
    SC_HAS_PROCESS(genARPDiscovery);

    ~genARPDiscovery();

    sc_trace_file* mVcdFile;

    regslice_both<56>* regslice_both_macIpEncode_rsp_o_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<3> > gia_fsm_state_load_load_fu_186_p1;
    sc_signal< sc_lv<1> > tmp_1_nbreadreq_fu_90_p3;
    sc_signal< bool > ap_predicate_op13_read_state1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_104_p3;
    sc_signal< bool > ap_predicate_op17_read_state1;
    sc_signal< bool > ap_predicate_op27_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<3> > gia_fsm_state_load_reg_304;
    sc_signal< sc_lv<1> > tmp_1_reg_324;
    sc_signal< bool > ap_predicate_op44_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_lv<1> > tmp_2_reg_333;
    sc_signal< bool > ap_predicate_op47_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > regslice_both_macIpEncode_rsp_o_V_U_apdone_blk;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<3> > gia_fsm_state_load_reg_304_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_2_reg_333_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op65_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > gia_fsm_state;
    sc_signal< sc_lv<8> > ip_lsb_V;
    sc_signal< sc_lv<32> > time_counter_V;
    sc_signal< sc_lv<1> > arp_scan_1d_V;
    sc_signal< sc_logic > macIpEncodeIn_V_V_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > macIpEncode_rsp_o_V_TDATA_blk_n;
    sc_signal< sc_logic > myIpAddress_V_blk_n;
    sc_signal< sc_logic > macIpEncode_i_V_V_blk_n;
    sc_signal< sc_logic > macIpEncode_rsp_i_V_blk_n;
    sc_signal< sc_lv<8> > v1_V_reg_308;
    sc_signal< sc_lv<32> > tmp_V_1_reg_328;
    sc_signal< sc_lv<49> > tmp_18_reg_337;
    sc_signal< sc_lv<1> > icmp_ln879_fu_264_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_arp_scan_V_loc_1_i_i_reg_157;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157;
    sc_signal< sc_lv<1> > or_ln323_fu_210_p2;
    sc_signal< sc_lv<3> > select_ln304_fu_228_p3;
    sc_signal< sc_lv<8> > add_ln700_fu_242_p2;
    sc_signal< sc_lv<32> > add_ln700_1_fu_270_p2;
    sc_signal< sc_lv<1> > ap_sig_allocacmp_arp_scan_1d_V_load;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > ip_aux_V_fu_290_p3;
    sc_signal< sc_lv<1> > xor_ln323_fu_204_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_222_p2;
    sc_signal< sc_lv<24> > trunc_ln647_fu_286_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<56> > macIpEncode_rsp_o_V_TDATA_int;
    sc_signal< sc_logic > macIpEncode_rsp_o_V_TVALID_int;
    sc_signal< sc_logic > macIpEncode_rsp_o_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_macIpEncode_rsp_o_V_U_vld_out;
    sc_signal< bool > ap_condition_132;
    sc_signal< bool > ap_condition_291;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_59682F00;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_1_fu_270_p2();
    void thread_add_ln700_fu_242_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_132();
    void thread_ap_condition_291();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4();
    void thread_ap_phi_reg_pp0_iter0_arp_scan_V_loc_1_i_i_reg_157();
    void thread_ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146();
    void thread_ap_predicate_op13_read_state1();
    void thread_ap_predicate_op17_read_state1();
    void thread_ap_predicate_op27_read_state1();
    void thread_ap_predicate_op44_write_state2();
    void thread_ap_predicate_op47_write_state2();
    void thread_ap_predicate_op65_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_sig_allocacmp_arp_scan_1d_V_load();
    void thread_arp_scan_V_o();
    void thread_arp_scan_V_o_ap_vld();
    void thread_gia_fsm_state_load_load_fu_186_p1();
    void thread_grp_nbreadreq_fu_104_p3();
    void thread_icmp_ln879_1_fu_222_p2();
    void thread_icmp_ln879_fu_264_p2();
    void thread_ip_aux_V_fu_290_p3();
    void thread_macIpEncodeIn_V_V_TDATA_blk_n();
    void thread_macIpEncodeIn_V_V_TREADY();
    void thread_macIpEncode_i_V_V_blk_n();
    void thread_macIpEncode_i_V_V_din();
    void thread_macIpEncode_i_V_V_write();
    void thread_macIpEncode_rsp_i_V_blk_n();
    void thread_macIpEncode_rsp_i_V_read();
    void thread_macIpEncode_rsp_o_V_TDATA_blk_n();
    void thread_macIpEncode_rsp_o_V_TDATA_int();
    void thread_macIpEncode_rsp_o_V_TVALID();
    void thread_macIpEncode_rsp_o_V_TVALID_int();
    void thread_myIpAddress_V_blk_n();
    void thread_myIpAddress_V_read();
    void thread_or_ln323_fu_210_p2();
    void thread_select_ln304_fu_228_p3();
    void thread_tmp_1_nbreadreq_fu_90_p3();
    void thread_trunc_ln647_fu_286_p1();
    void thread_xor_ln323_fu_204_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
