-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity genARPDiscovery is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    macIpEncodeIn_V_V_TVALID : IN STD_LOGIC;
    macIpEncode_rsp_i_V_dout : IN STD_LOGIC_VECTOR (48 downto 0);
    macIpEncode_rsp_i_V_empty_n : IN STD_LOGIC;
    macIpEncode_rsp_i_V_read : OUT STD_LOGIC;
    myIpAddress_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    myIpAddress_V_empty_n : IN STD_LOGIC;
    myIpAddress_V_read : OUT STD_LOGIC;
    macIpEncode_i_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    macIpEncode_i_V_V_full_n : IN STD_LOGIC;
    macIpEncode_i_V_V_write : OUT STD_LOGIC;
    macIpEncode_rsp_o_V_TREADY : IN STD_LOGIC;
    macIpEncodeIn_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    macIpEncodeIn_V_V_TREADY : OUT STD_LOGIC;
    macIpEncode_rsp_o_V_TDATA : OUT STD_LOGIC_VECTOR (55 downto 0);
    macIpEncode_rsp_o_V_TVALID : OUT STD_LOGIC;
    arp_scan_V_i : IN STD_LOGIC_VECTOR (0 downto 0);
    arp_scan_V_o : OUT STD_LOGIC_VECTOR (0 downto 0);
    arp_scan_V_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of genARPDiscovery is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_59682F00 : STD_LOGIC_VECTOR (31 downto 0) := "01011001011010000010111100000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal gia_fsm_state_load_load_fu_186_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_nbreadreq_fu_90_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op13_read_state1 : BOOLEAN;
    signal grp_nbreadreq_fu_104_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op17_read_state1 : BOOLEAN;
    signal ap_predicate_op27_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal gia_fsm_state_load_reg_304 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op44_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_2_reg_333 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op47_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_macIpEncode_rsp_o_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal gia_fsm_state_load_reg_304_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_reg_333_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op65_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal gia_fsm_state : STD_LOGIC_VECTOR (2 downto 0) := "011";
    signal ip_lsb_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal time_counter_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal arp_scan_1d_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal macIpEncodeIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal macIpEncode_rsp_o_V_TDATA_blk_n : STD_LOGIC;
    signal myIpAddress_V_blk_n : STD_LOGIC;
    signal macIpEncode_i_V_V_blk_n : STD_LOGIC;
    signal macIpEncode_rsp_i_V_blk_n : STD_LOGIC;
    signal v1_V_reg_308 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_1_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_337 : STD_LOGIC_VECTOR (48 downto 0);
    signal icmp_ln879_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_arp_scan_V_loc_1_i_i_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln323_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln304_fu_228_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln700_fu_242_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln700_1_fu_270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_arp_scan_1d_V_load : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ip_aux_V_fu_290_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln323_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_fu_286_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal macIpEncode_rsp_o_V_TDATA_int : STD_LOGIC_VECTOR (55 downto 0);
    signal macIpEncode_rsp_o_V_TVALID_int : STD_LOGIC;
    signal macIpEncode_rsp_o_V_TREADY_int : STD_LOGIC;
    signal regslice_both_macIpEncode_rsp_o_V_U_vld_out : STD_LOGIC;
    signal ap_condition_132 : BOOLEAN;
    signal ap_condition_291 : BOOLEAN;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_macIpEncode_rsp_o_V_U : component regslice_both
    generic map (
        DataWidth => 56)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macIpEncode_rsp_o_V_TDATA_int,
        vld_in => macIpEncode_rsp_o_V_TVALID_int,
        ack_in => macIpEncode_rsp_o_V_TREADY_int,
        data_out => macIpEncode_rsp_o_V_TDATA,
        vld_out => regslice_both_macIpEncode_rsp_o_V_U_vld_out,
        ack_out => macIpEncode_rsp_o_V_TREADY,
        apdone_blk => regslice_both_macIpEncode_rsp_o_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    gia_fsm_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                gia_fsm_state <= ap_const_lv3_3;
            else
                if (((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    gia_fsm_state <= ap_const_lv3_4;
                elsif (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    gia_fsm_state <= select_ln304_fu_228_p3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0)) or ((ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0))))) then 
                    gia_fsm_state <= ap_const_lv3_0;
                elsif ((((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln879_fu_264_p2 = ap_const_lv1_1) and (gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    gia_fsm_state <= ap_const_lv3_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0)) or ((ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0))))) then 
                ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157 <= ap_const_lv1_0;
            elsif ((((gia_fsm_state = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_104_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_0) and (or_ln323_fu_210_p2 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3)) or ((or_ln323_fu_210_p2 = ap_const_lv1_1) and (ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3)))) or ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_5) or ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_6) or (gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_7)))) or ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157 <= arp_scan_V_i;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157 <= ap_phi_reg_pp0_iter0_arp_scan_V_loc_1_i_i_reg_157;
            end if; 
        end if;
    end process;

    ip_lsb_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_132)) then
                if ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_2)) then 
                    ip_lsb_V <= add_ln700_fu_242_p2;
                elsif ((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_0)) then 
                    ip_lsb_V <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                arp_scan_1d_V <= ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gia_fsm_state_load_reg_304 <= gia_fsm_state;
                gia_fsm_state_load_reg_304_pp0_iter1_reg <= gia_fsm_state_load_reg_304;
                tmp_2_reg_333_pp0_iter1_reg <= tmp_2_reg_333;
                v1_V_reg_308 <= ip_lsb_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state_load_load_fu_186_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                time_counter_V <= add_ln700_1_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_18_reg_337 <= macIpEncode_rsp_i_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_reg_324 <= tmp_1_nbreadreq_fu_90_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_333 <= grp_nbreadreq_fu_104_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_1_reg_328 <= macIpEncodeIn_V_V_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_1_fu_270_p2 <= std_logic_vector(unsigned(time_counter_V) + unsigned(ap_const_lv32_1));
    add_ln700_fu_242_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ip_lsb_V));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, macIpEncodeIn_V_V_TVALID, ap_predicate_op13_read_state1, macIpEncode_rsp_i_V_empty_n, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1, myIpAddress_V_empty_n, macIpEncode_i_V_V_full_n, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, regslice_both_macIpEncode_rsp_o_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myIpAddress_V_empty_n = ap_const_logic_0) or ((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (macIpEncode_i_V_V_full_n = ap_const_logic_0)) or ((macIpEncode_i_V_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1)) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((macIpEncodeIn_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (regslice_both_macIpEncode_rsp_o_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, macIpEncodeIn_V_V_TVALID, ap_predicate_op13_read_state1, macIpEncode_rsp_i_V_empty_n, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1, myIpAddress_V_empty_n, macIpEncode_i_V_V_full_n, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, ap_block_state2_io, regslice_both_macIpEncode_rsp_o_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1)) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((macIpEncodeIn_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_macIpEncode_rsp_o_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myIpAddress_V_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io) or ((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (macIpEncode_i_V_V_full_n = ap_const_logic_0)) or ((macIpEncode_i_V_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, macIpEncodeIn_V_V_TVALID, ap_predicate_op13_read_state1, macIpEncode_rsp_i_V_empty_n, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1, myIpAddress_V_empty_n, macIpEncode_i_V_V_full_n, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, ap_block_state2_io, regslice_both_macIpEncode_rsp_o_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1)) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((macIpEncodeIn_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_macIpEncode_rsp_o_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myIpAddress_V_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io) or ((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (macIpEncode_i_V_V_full_n = ap_const_logic_0)) or ((macIpEncode_i_V_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, macIpEncodeIn_V_V_TVALID, ap_predicate_op13_read_state1, macIpEncode_rsp_i_V_empty_n, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1)) or ((macIpEncode_rsp_i_V_empty_n = ap_const_logic_0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1)) or ((macIpEncodeIn_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op47_write_state2, macIpEncode_rsp_o_V_TREADY_int)
    begin
                ap_block_state2_io <= ((macIpEncode_rsp_o_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(myIpAddress_V_empty_n, macIpEncode_i_V_V_full_n, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((myIpAddress_V_empty_n = ap_const_logic_0) or ((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (macIpEncode_i_V_V_full_n = ap_const_logic_0)) or ((macIpEncode_i_V_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op65_write_state3, macIpEncode_rsp_o_V_TREADY_int)
    begin
                ap_block_state3_io <= ((macIpEncode_rsp_o_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op65_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(regslice_both_macIpEncode_rsp_o_V_U_apdone_blk)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (regslice_both_macIpEncode_rsp_o_V_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_condition_132_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_132 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_291_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_291 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4_assign_proc : process(tmp_1_nbreadreq_fu_90_p3, gia_fsm_state, ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146)
    begin
        if ((gia_fsm_state = ap_const_lv3_3)) then
            if ((tmp_1_nbreadreq_fu_90_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 <= ap_const_lv1_1;
            elsif ((tmp_1_nbreadreq_fu_90_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 <= ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146;
            end if;
        else 
            ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 <= ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_arp_scan_V_loc_1_i_i_reg_157 <= "X";
    ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_146 <= "X";

    ap_predicate_op13_read_state1_assign_proc : process(tmp_1_nbreadreq_fu_90_p3, gia_fsm_state)
    begin
                ap_predicate_op13_read_state1 <= ((tmp_1_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3));
    end process;


    ap_predicate_op17_read_state1_assign_proc : process(grp_nbreadreq_fu_104_p3, gia_fsm_state)
    begin
                ap_predicate_op17_read_state1 <= ((grp_nbreadreq_fu_104_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3));
    end process;


    ap_predicate_op27_read_state1_assign_proc : process(grp_nbreadreq_fu_104_p3, gia_fsm_state)
    begin
                ap_predicate_op27_read_state1 <= ((grp_nbreadreq_fu_104_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_4));
    end process;


    ap_predicate_op44_write_state2_assign_proc : process(gia_fsm_state_load_reg_304, tmp_1_reg_324)
    begin
                ap_predicate_op44_write_state2 <= ((tmp_1_reg_324 = ap_const_lv1_1) and (gia_fsm_state_load_reg_304 = ap_const_lv3_3));
    end process;


    ap_predicate_op47_write_state2_assign_proc : process(gia_fsm_state_load_reg_304, tmp_2_reg_333)
    begin
                ap_predicate_op47_write_state2 <= ((tmp_2_reg_333 = ap_const_lv1_1) and (gia_fsm_state_load_reg_304 = ap_const_lv3_3));
    end process;


    ap_predicate_op65_write_state3_assign_proc : process(gia_fsm_state_load_reg_304_pp0_iter1_reg, tmp_2_reg_333_pp0_iter1_reg)
    begin
                ap_predicate_op65_write_state3 <= ((tmp_2_reg_333_pp0_iter1_reg = ap_const_lv1_1) and (gia_fsm_state_load_reg_304_pp0_iter1_reg = ap_const_lv3_3));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_arp_scan_1d_V_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, arp_scan_1d_V, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_arp_scan_1d_V_load <= ap_phi_reg_pp0_iter1_arp_scan_V_loc_1_i_i_reg_157;
        else 
            ap_sig_allocacmp_arp_scan_1d_V_load <= arp_scan_1d_V;
        end if; 
    end process;


    arp_scan_V_o_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, grp_nbreadreq_fu_104_p3, arp_scan_V_i, gia_fsm_state, ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4, or_ln323_fu_210_p2, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0)) or ((ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0))))) then 
            arp_scan_V_o <= ap_const_lv1_0;
        else 
            arp_scan_V_o <= arp_scan_V_i;
        end if; 
    end process;


    arp_scan_V_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, grp_nbreadreq_fu_104_p3, ap_block_pp0_stage0_11001, gia_fsm_state, ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4, or_ln323_fu_210_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((grp_nbreadreq_fu_104_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0)) or ((ap_phi_mux_p_0120_0_i_i_phi_fu_149_p4 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_210_p2 = ap_const_lv1_0))))) then 
            arp_scan_V_o_ap_vld <= ap_const_logic_1;
        else 
            arp_scan_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    gia_fsm_state_load_load_fu_186_p1 <= gia_fsm_state;
    grp_nbreadreq_fu_104_p3 <= (0=>(macIpEncode_rsp_i_V_empty_n), others=>'-');
    icmp_ln879_1_fu_222_p2 <= "1" when (ip_lsb_V = ap_const_lv8_0) else "0";
    icmp_ln879_fu_264_p2 <= "1" when (time_counter_V = ap_const_lv32_59682F00) else "0";
    ip_aux_V_fu_290_p3 <= (v1_V_reg_308 & trunc_ln647_fu_286_p1);

    macIpEncodeIn_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, macIpEncodeIn_V_V_TVALID, ap_predicate_op13_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            macIpEncodeIn_V_V_TDATA_blk_n <= macIpEncodeIn_V_V_TVALID;
        else 
            macIpEncodeIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncodeIn_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op13_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncodeIn_V_V_TREADY <= ap_const_logic_1;
        else 
            macIpEncodeIn_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_i_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, macIpEncode_i_V_V_full_n, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, ap_block_pp0_stage0)
    begin
        if ((((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            macIpEncode_i_V_V_blk_n <= macIpEncode_i_V_V_full_n;
        else 
            macIpEncode_i_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncode_i_V_V_din_assign_proc : process(gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, tmp_V_1_reg_328, ip_aux_V_fu_290_p3, ap_condition_291)
    begin
        if ((ap_const_boolean_1 = ap_condition_291)) then
            if ((gia_fsm_state_load_reg_304 = ap_const_lv3_2)) then 
                macIpEncode_i_V_V_din <= ip_aux_V_fu_290_p3;
            elsif ((ap_predicate_op44_write_state2 = ap_const_boolean_1)) then 
                macIpEncode_i_V_V_din <= tmp_V_1_reg_328;
            else 
                macIpEncode_i_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            macIpEncode_i_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    macIpEncode_i_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gia_fsm_state_load_reg_304, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((gia_fsm_state_load_reg_304 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            macIpEncode_i_V_V_write <= ap_const_logic_1;
        else 
            macIpEncode_i_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_rsp_i_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, macIpEncode_rsp_i_V_empty_n, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            macIpEncode_rsp_i_V_blk_n <= macIpEncode_rsp_i_V_empty_n;
        else 
            macIpEncode_rsp_i_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncode_rsp_i_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op17_read_state1, ap_predicate_op27_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            macIpEncode_rsp_i_V_read <= ap_const_logic_1;
        else 
            macIpEncode_rsp_i_V_read <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_rsp_o_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op47_write_state2, ap_predicate_op65_write_state3, ap_block_pp0_stage0, macIpEncode_rsp_o_V_TREADY_int)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op65_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            macIpEncode_rsp_o_V_TDATA_blk_n <= macIpEncode_rsp_o_V_TREADY_int;
        else 
            macIpEncode_rsp_o_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        macIpEncode_rsp_o_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_reg_337),56));

    macIpEncode_rsp_o_V_TVALID <= regslice_both_macIpEncode_rsp_o_V_U_vld_out;

    macIpEncode_rsp_o_V_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op47_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op47_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncode_rsp_o_V_TVALID_int <= ap_const_logic_1;
        else 
            macIpEncode_rsp_o_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    myIpAddress_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, myIpAddress_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            myIpAddress_V_blk_n <= myIpAddress_V_empty_n;
        else 
            myIpAddress_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    myIpAddress_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            myIpAddress_V_read <= ap_const_logic_1;
        else 
            myIpAddress_V_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln323_fu_210_p2 <= (xor_ln323_fu_204_p2 or ap_sig_allocacmp_arp_scan_1d_V_load);
    select_ln304_fu_228_p3 <= 
        ap_const_lv3_3 when (icmp_ln879_1_fu_222_p2(0) = '1') else 
        ap_const_lv3_2;
    tmp_1_nbreadreq_fu_90_p3 <= (0=>(macIpEncodeIn_V_V_TVALID), others=>'-');
    trunc_ln647_fu_286_p1 <= myIpAddress_V_dout(24 - 1 downto 0);
    xor_ln323_fu_204_p2 <= (arp_scan_V_i xor ap_const_lv1_1);
end behav;
