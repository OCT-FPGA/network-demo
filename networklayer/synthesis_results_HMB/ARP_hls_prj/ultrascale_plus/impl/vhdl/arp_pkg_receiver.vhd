-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity arp_pkg_receiver is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    myIpAddress_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    myIpAddress_V_empty_n : IN STD_LOGIC;
    myIpAddress_V_read : OUT STD_LOGIC;
    myIpAddress_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    myIpAddress_V_out_full_n : IN STD_LOGIC;
    myIpAddress_V_out_write : OUT STD_LOGIC;
    arpDataIn_TVALID : IN STD_LOGIC;
    arpTableInsertFifo_V_din : OUT STD_LOGIC_VECTOR (80 downto 0);
    arpTableInsertFifo_V_full_n : IN STD_LOGIC;
    arpTableInsertFifo_V_write : OUT STD_LOGIC;
    arpReplyFifo_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    arpReplyFifo_V_full_n : IN STD_LOGIC;
    arpReplyFifo_V_write : OUT STD_LOGIC;
    arpDataIn_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    arpDataIn_TREADY : OUT STD_LOGIC;
    arpDataIn_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    arpDataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of arp_pkg_receiver is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv16_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_102_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_271 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln76_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_write_state2 : BOOLEAN;
    signal ap_predicate_op44_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal wordCount_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal arpDataIn_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal myIpAddress_V_blk_n : STD_LOGIC;
    signal myIpAddress_V_out_blk_n : STD_LOGIC;
    signal arpReplyFifo_V_blk_n : STD_LOGIC;
    signal arpTableInsertFifo_V_blk_n : STD_LOGIC;
    signal reg_147 : STD_LOGIC_VECTOR (79 downto 0);
    signal icmp_ln879_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln76_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_i_reg_283 : STD_LOGIC_VECTOR (111 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln80_fu_236_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal opCode_V_fu_170_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal protoAddrDst_V_fu_180_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_2_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_230_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_164_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln74_reg_275 <= and_ln74_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln74_fu_202_p2) and (icmp_ln879_fu_164_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln76_reg_279 <= and_ln76_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_reg_271 <= icmp_ln879_fu_164_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln74_fu_202_p2) and (icmp_ln879_fu_164_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln74_fu_202_p2) and (ap_const_lv1_1 = and_ln76_fu_214_p2) and (icmp_ln879_fu_164_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_147 <= arpDataIn_TDATA(255 downto 176);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln74_fu_202_p2) and (icmp_ln879_fu_164_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_6_i_i_reg_283 <= arpDataIn_TDATA(159 downto 48);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_267 <= tmp_nbreadreq_fu_102_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                wordCount_V <= select_ln80_fu_236_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_230_p2 <= std_logic_vector(unsigned(wordCount_V) + unsigned(ap_const_lv4_1));
    and_ln74_fu_202_p2 <= (icmp_ln879_3_fu_196_p2 and icmp_ln879_2_fu_190_p2);
    and_ln76_fu_214_p2 <= (icmp_ln879_4_fu_208_p2 and icmp_ln879_3_fu_196_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, myIpAddress_V_empty_n, myIpAddress_V_out_full_n, arpDataIn_TVALID, tmp_nbreadreq_fu_102_p5, arpTableInsertFifo_V_full_n, ap_predicate_op40_write_state2, arpReplyFifo_V_full_n, ap_predicate_op44_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((arpReplyFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (myIpAddress_V_out_full_n = ap_const_logic_0) or (myIpAddress_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (arpDataIn_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, myIpAddress_V_empty_n, myIpAddress_V_out_full_n, arpDataIn_TVALID, tmp_nbreadreq_fu_102_p5, arpTableInsertFifo_V_full_n, ap_predicate_op40_write_state2, arpReplyFifo_V_full_n, ap_predicate_op44_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((arpReplyFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (myIpAddress_V_out_full_n = ap_const_logic_0) or (myIpAddress_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (arpDataIn_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, myIpAddress_V_empty_n, myIpAddress_V_out_full_n, arpDataIn_TVALID, tmp_nbreadreq_fu_102_p5, arpTableInsertFifo_V_full_n, ap_predicate_op40_write_state2, arpReplyFifo_V_full_n, ap_predicate_op44_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((arpReplyFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (myIpAddress_V_out_full_n = ap_const_logic_0) or (myIpAddress_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (arpDataIn_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, myIpAddress_V_empty_n, myIpAddress_V_out_full_n, arpDataIn_TVALID, tmp_nbreadreq_fu_102_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (myIpAddress_V_out_full_n = ap_const_logic_0) or (myIpAddress_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (arpDataIn_TVALID = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(arpTableInsertFifo_V_full_n, ap_predicate_op40_write_state2, arpReplyFifo_V_full_n, ap_predicate_op44_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((arpReplyFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)) or ((arpTableInsertFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op40_write_state2_assign_proc : process(tmp_reg_267, icmp_ln879_reg_271, and_ln74_reg_275, and_ln76_reg_279)
    begin
                ap_predicate_op40_write_state2 <= ((ap_const_lv1_0 = and_ln74_reg_275) and (ap_const_lv1_1 = and_ln76_reg_279) and (icmp_ln879_reg_271 = ap_const_lv1_1) and (tmp_reg_267 = ap_const_lv1_1));
    end process;


    ap_predicate_op44_write_state2_assign_proc : process(tmp_reg_267, icmp_ln879_reg_271, and_ln74_reg_275)
    begin
                ap_predicate_op44_write_state2 <= ((ap_const_lv1_1 = and_ln74_reg_275) and (icmp_ln879_reg_271 = ap_const_lv1_1) and (tmp_reg_267 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    arpDataIn_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, arpDataIn_TVALID, tmp_nbreadreq_fu_102_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpDataIn_TDATA_blk_n <= arpDataIn_TVALID;
        else 
            arpDataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpDataIn_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_102_p5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_102_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            arpDataIn_TREADY <= ap_const_logic_1;
        else 
            arpDataIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    arpReplyFifo_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, arpReplyFifo_V_full_n, ap_predicate_op44_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpReplyFifo_V_blk_n <= arpReplyFifo_V_full_n;
        else 
            arpReplyFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpReplyFifo_V_din <= (reg_147 & tmp_6_i_i_reg_283);

    arpReplyFifo_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1))) then 
            arpReplyFifo_V_write <= ap_const_logic_1;
        else 
            arpReplyFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;


    arpTableInsertFifo_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, arpTableInsertFifo_V_full_n, ap_predicate_op40_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            arpTableInsertFifo_V_blk_n <= arpTableInsertFifo_V_full_n;
        else 
            arpTableInsertFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpTableInsertFifo_V_din <= (ap_const_lv1_1 & reg_147);

    arpTableInsertFifo_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op40_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1))) then 
            arpTableInsertFifo_V_write <= ap_const_logic_1;
        else 
            arpTableInsertFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln879_2_fu_190_p2 <= "1" when (opCode_V_fu_170_p4 = ap_const_lv16_100) else "0";
    icmp_ln879_3_fu_196_p2 <= "1" when (protoAddrDst_V_fu_180_p4 = myIpAddress_V_dout) else "0";
    icmp_ln879_4_fu_208_p2 <= "1" when (opCode_V_fu_170_p4 = ap_const_lv16_200) else "0";
    icmp_ln879_fu_164_p2 <= "1" when (wordCount_V = ap_const_lv4_0) else "0";

    myIpAddress_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, myIpAddress_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            myIpAddress_V_blk_n <= myIpAddress_V_empty_n;
        else 
            myIpAddress_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    myIpAddress_V_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, myIpAddress_V_out_full_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            myIpAddress_V_out_blk_n <= myIpAddress_V_out_full_n;
        else 
            myIpAddress_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    myIpAddress_V_out_din <= myIpAddress_V_dout;

    myIpAddress_V_out_write_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            myIpAddress_V_out_write <= ap_const_logic_1;
        else 
            myIpAddress_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    myIpAddress_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            myIpAddress_V_read <= ap_const_logic_1;
        else 
            myIpAddress_V_read <= ap_const_logic_0;
        end if; 
    end process;

    opCode_V_fu_170_p4 <= arpDataIn_TDATA(175 downto 160);
    protoAddrDst_V_fu_180_p4 <= arpDataIn_TDATA(335 downto 304);
    select_ln80_fu_236_p3 <= 
        ap_const_lv4_0 when (arpDataIn_TLAST(0) = '1') else 
        add_ln700_fu_230_p2;
    tmp_nbreadreq_fu_102_p5 <= (0=>(arpDataIn_TVALID), others=>'-');
end behav;
