// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _udpRxEngine_HH_
#define _udpRxEngine_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct udpRxEngine : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > rxUdpDataIn_TVALID;
    sc_out< sc_lv<577> > ureDataPayload_V_din;
    sc_in< sc_logic > ureDataPayload_V_full_n;
    sc_out< sc_logic > ureDataPayload_V_write;
    sc_out< sc_lv<97> > ureMetaData_V_din;
    sc_in< sc_logic > ureMetaData_V_full_n;
    sc_out< sc_logic > ureMetaData_V_write;
    sc_in< sc_lv<512> > rxUdpDataIn_TDATA;
    sc_out< sc_logic > rxUdpDataIn_TREADY;
    sc_in< sc_lv<64> > rxUdpDataIn_TKEEP;
    sc_in< sc_lv<1> > rxUdpDataIn_TLAST;


    // Module declarations
    udpRxEngine(sc_module_name name);
    SC_HAS_PROCESS(udpRxEngine);

    ~udpRxEngine();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<2> > ure_state_load_load_fu_223_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_136_p5;
    sc_signal< bool > ap_predicate_op7_read_state1;
    sc_signal< bool > ap_predicate_op22_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<2> > ure_state_load_reg_537;
    sc_signal< sc_lv<1> > tmp_5_reg_541;
    sc_signal< bool > ap_predicate_op64_write_state2;
    sc_signal< sc_lv<1> > tmp_reg_563;
    sc_signal< bool > ap_predicate_op71_write_state2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_567;
    sc_signal< bool > ap_predicate_op74_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > ure_state;
    sc_signal< sc_lv<512> > prevWord_data_V;
    sc_signal< sc_lv<64> > prevWord_keep_V_1;
    sc_signal< sc_logic > rxUdpDataIn_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ureMetaData_V_blk_n;
    sc_signal< sc_logic > ureDataPayload_V_blk_n;
    sc_signal< sc_lv<288> > reg_215;
    sc_signal< sc_lv<36> > reg_219;
    sc_signal< sc_lv<224> > trunc_ln647_fu_233_p1;
    sc_signal< sc_lv<224> > trunc_ln647_reg_548;
    sc_signal< sc_lv<28> > trunc_ln647_10_fu_237_p1;
    sc_signal< sc_lv<28> > trunc_ln647_10_reg_553;
    sc_signal< sc_lv<1> > p_Result_s_fu_249_p2;
    sc_signal< sc_lv<1> > grp_fu_191_p1;
    sc_signal< sc_lv<8> > p_Result_237_i_i_reg_571;
    sc_signal< sc_lv<8> > p_Result_237_1_i_i_reg_576;
    sc_signal< sc_lv<8> > p_Result_237_2_i_i_reg_581;
    sc_signal< sc_lv<8> > p_Result_237_3_i_i_reg_586;
    sc_signal< sc_lv<8> > p_Result_237_i53_i_reg_591;
    sc_signal< sc_lv<8> > p_Result_237_1_i_reg_596;
    sc_signal< sc_lv<8> > p_Result_237_2_i_reg_601;
    sc_signal< sc_lv<8> > p_Result_237_3_i_reg_606;
    sc_signal< sc_lv<8> > p_Result_239_i58_i_reg_611;
    sc_signal< sc_lv<8> > p_Result_239_1_i_reg_616;
    sc_signal< sc_lv<8> > p_Result_239_i61_i_reg_621;
    sc_signal< sc_lv<8> > p_Result_239_1_i1_reg_626;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172;
    sc_signal< sc_lv<2> > select_ln173_fu_255_p3;
    sc_signal< sc_lv<512> > p_Result_17_fu_438_p5;
    sc_signal< sc_lv<512> > p_Result_19_fu_487_p1;
    sc_signal< sc_lv<64> > p_Result_18_fu_456_p5;
    sc_signal< sc_lv<64> > p_Result_20_fu_491_p1;
    sc_signal< sc_lv<577> > tmp_3_fu_419_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<577> > tmp_2_fu_474_p6;
    sc_signal< sc_lv<577> > tmp_1_fu_514_p4;
    sc_signal< sc_lv<1> > tmp_11_fu_241_p3;
    sc_signal< sc_lv<288> > trunc_ln414_fu_403_p1;
    sc_signal< sc_lv<36> > trunc_ln414_2_fu_411_p1;
    sc_signal< sc_lv<64> > p_Result_22_fu_415_p1;
    sc_signal< sc_lv<512> > p_Result_21_fu_407_p1;
    sc_signal< sc_lv<36> > trunc_ln414_4_fu_434_p1;
    sc_signal< sc_lv<288> > trunc_ln414_3_fu_430_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_191;
    sc_signal< bool > ap_condition_154;
    sc_signal< bool > ap_condition_103;
    sc_signal< bool > ap_condition_193;
    sc_signal< bool > ap_condition_223;
    sc_signal< bool > ap_condition_198;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_78;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_77;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_98;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_90;
    static const sc_lv<32> ap_const_lv32_97;
    static const sc_lv<32> ap_const_lv32_88;
    static const sc_lv<32> ap_const_lv32_8F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_87;
    static const sc_lv<32> ap_const_lv32_A8;
    static const sc_lv<32> ap_const_lv32_AF;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_A7;
    static const sc_lv<32> ap_const_lv32_B8;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_B0;
    static const sc_lv<32> ap_const_lv32_B7;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_23;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_103();
    void thread_ap_condition_154();
    void thread_ap_condition_191();
    void thread_ap_condition_193();
    void thread_ap_condition_198();
    void thread_ap_condition_223();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172();
    void thread_ap_predicate_op22_read_state1();
    void thread_ap_predicate_op64_write_state2();
    void thread_ap_predicate_op71_write_state2();
    void thread_ap_predicate_op74_write_state2();
    void thread_ap_predicate_op7_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_grp_fu_191_p1();
    void thread_grp_nbreadreq_fu_136_p5();
    void thread_p_Result_17_fu_438_p5();
    void thread_p_Result_18_fu_456_p5();
    void thread_p_Result_19_fu_487_p1();
    void thread_p_Result_20_fu_491_p1();
    void thread_p_Result_21_fu_407_p1();
    void thread_p_Result_22_fu_415_p1();
    void thread_p_Result_s_fu_249_p2();
    void thread_rxUdpDataIn_TDATA_blk_n();
    void thread_rxUdpDataIn_TREADY();
    void thread_select_ln173_fu_255_p3();
    void thread_tmp_11_fu_241_p3();
    void thread_tmp_1_fu_514_p4();
    void thread_tmp_2_fu_474_p6();
    void thread_tmp_3_fu_419_p4();
    void thread_trunc_ln414_2_fu_411_p1();
    void thread_trunc_ln414_3_fu_430_p1();
    void thread_trunc_ln414_4_fu_434_p1();
    void thread_trunc_ln414_fu_403_p1();
    void thread_trunc_ln647_10_fu_237_p1();
    void thread_trunc_ln647_fu_233_p1();
    void thread_ureDataPayload_V_blk_n();
    void thread_ureDataPayload_V_din();
    void thread_ureDataPayload_V_write();
    void thread_ureMetaData_V_blk_n();
    void thread_ureMetaData_V_din();
    void thread_ureMetaData_V_write();
    void thread_ure_state_load_load_fu_223_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
