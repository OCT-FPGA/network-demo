// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "udpRxEngine.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic udpRxEngine::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic udpRxEngine::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> udpRxEngine::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> udpRxEngine::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool udpRxEngine::ap_const_boolean_1 = true;
const sc_lv<2> udpRxEngine::ap_const_lv2_1 = "1";
const sc_lv<1> udpRxEngine::ap_const_lv1_1 = "1";
const sc_lv<2> udpRxEngine::ap_const_lv2_0 = "00";
const sc_lv<2> udpRxEngine::ap_const_lv2_2 = "10";
const bool udpRxEngine::ap_const_boolean_0 = false;
const sc_lv<1> udpRxEngine::ap_const_lv1_0 = "0";
const sc_lv<32> udpRxEngine::ap_const_lv32_E0 = "11100000";
const sc_lv<32> udpRxEngine::ap_const_lv32_1FF = "111111111";
const sc_lv<32> udpRxEngine::ap_const_lv32_1C = "11100";
const sc_lv<32> udpRxEngine::ap_const_lv32_3F = "111111";
const sc_lv<32> udpRxEngine::ap_const_lv32_78 = "1111000";
const sc_lv<32> udpRxEngine::ap_const_lv32_7F = "1111111";
const sc_lv<32> udpRxEngine::ap_const_lv32_70 = "1110000";
const sc_lv<32> udpRxEngine::ap_const_lv32_77 = "1110111";
const sc_lv<32> udpRxEngine::ap_const_lv32_68 = "1101000";
const sc_lv<32> udpRxEngine::ap_const_lv32_6F = "1101111";
const sc_lv<32> udpRxEngine::ap_const_lv32_60 = "1100000";
const sc_lv<32> udpRxEngine::ap_const_lv32_67 = "1100111";
const sc_lv<32> udpRxEngine::ap_const_lv32_98 = "10011000";
const sc_lv<32> udpRxEngine::ap_const_lv32_9F = "10011111";
const sc_lv<32> udpRxEngine::ap_const_lv32_90 = "10010000";
const sc_lv<32> udpRxEngine::ap_const_lv32_97 = "10010111";
const sc_lv<32> udpRxEngine::ap_const_lv32_88 = "10001000";
const sc_lv<32> udpRxEngine::ap_const_lv32_8F = "10001111";
const sc_lv<32> udpRxEngine::ap_const_lv32_80 = "10000000";
const sc_lv<32> udpRxEngine::ap_const_lv32_87 = "10000111";
const sc_lv<32> udpRxEngine::ap_const_lv32_A8 = "10101000";
const sc_lv<32> udpRxEngine::ap_const_lv32_AF = "10101111";
const sc_lv<32> udpRxEngine::ap_const_lv32_A0 = "10100000";
const sc_lv<32> udpRxEngine::ap_const_lv32_A7 = "10100111";
const sc_lv<32> udpRxEngine::ap_const_lv32_B8 = "10111000";
const sc_lv<32> udpRxEngine::ap_const_lv32_BF = "10111111";
const sc_lv<32> udpRxEngine::ap_const_lv32_B0 = "10110000";
const sc_lv<32> udpRxEngine::ap_const_lv32_B7 = "10110111";
const sc_lv<32> udpRxEngine::ap_const_lv32_11F = "100011111";
const sc_lv<32> udpRxEngine::ap_const_lv32_23 = "100011";

udpRxEngine::udpRxEngine(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rxUdpDataIn_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ureDataPayload_V_full_n );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ureMetaData_V_full_n );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rxUdpDataIn_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ureDataPayload_V_full_n );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ureMetaData_V_full_n );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rxUdpDataIn_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ureDataPayload_V_full_n );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ureMetaData_V_full_n );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rxUdpDataIn_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( ureDataPayload_V_full_n );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ureMetaData_V_full_n );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );

    SC_METHOD(thread_ap_condition_103);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_154);
    sensitive << ( grp_nbreadreq_fu_136_p5 );
    sensitive << ( ure_state );
    sensitive << ( grp_fu_191_p1 );

    SC_METHOD(thread_ap_condition_191);
    sensitive << ( grp_nbreadreq_fu_136_p5 );
    sensitive << ( ure_state );
    sensitive << ( grp_fu_191_p1 );

    SC_METHOD(thread_ap_condition_193);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_198);
    sensitive << ( grp_nbreadreq_fu_136_p5 );
    sensitive << ( ure_state );
    sensitive << ( grp_fu_191_p1 );

    SC_METHOD(thread_ap_condition_223);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172);

    SC_METHOD(thread_ap_predicate_op22_read_state1);
    sensitive << ( grp_nbreadreq_fu_136_p5 );
    sensitive << ( ure_state );

    SC_METHOD(thread_ap_predicate_op64_write_state2);
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( tmp_5_reg_541 );

    SC_METHOD(thread_ap_predicate_op71_write_state2);
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( tmp_reg_563 );

    SC_METHOD(thread_ap_predicate_op74_write_state2);
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( tmp_reg_563 );
    sensitive << ( tmp_last_V_reg_567 );

    SC_METHOD(thread_ap_predicate_op7_read_state1);
    sensitive << ( grp_nbreadreq_fu_136_p5 );
    sensitive << ( ure_state );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_grp_fu_191_p1);
    sensitive << ( rxUdpDataIn_TLAST );

    SC_METHOD(thread_grp_nbreadreq_fu_136_p5);
    sensitive << ( rxUdpDataIn_TVALID );

    SC_METHOD(thread_p_Result_17_fu_438_p5);
    sensitive << ( prevWord_data_V );
    sensitive << ( reg_215 );

    SC_METHOD(thread_p_Result_18_fu_456_p5);
    sensitive << ( prevWord_keep_V_1 );
    sensitive << ( reg_219 );

    SC_METHOD(thread_p_Result_19_fu_487_p1);
    sensitive << ( reg_215 );

    SC_METHOD(thread_p_Result_20_fu_491_p1);
    sensitive << ( reg_219 );

    SC_METHOD(thread_p_Result_21_fu_407_p1);
    sensitive << ( trunc_ln414_fu_403_p1 );

    SC_METHOD(thread_p_Result_22_fu_415_p1);
    sensitive << ( trunc_ln414_2_fu_411_p1 );

    SC_METHOD(thread_p_Result_s_fu_249_p2);
    sensitive << ( tmp_11_fu_241_p3 );

    SC_METHOD(thread_rxUdpDataIn_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rxUdpDataIn_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rxUdpDataIn_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln173_fu_255_p3);
    sensitive << ( tmp_11_fu_241_p3 );

    SC_METHOD(thread_tmp_11_fu_241_p3);
    sensitive << ( rxUdpDataIn_TKEEP );

    SC_METHOD(thread_tmp_1_fu_514_p4);
    sensitive << ( p_Result_19_fu_487_p1 );
    sensitive << ( p_Result_20_fu_491_p1 );

    SC_METHOD(thread_tmp_2_fu_474_p6);
    sensitive << ( trunc_ln647_reg_548 );
    sensitive << ( trunc_ln647_10_reg_553 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172 );
    sensitive << ( trunc_ln414_4_fu_434_p1 );
    sensitive << ( trunc_ln414_3_fu_430_p1 );

    SC_METHOD(thread_tmp_3_fu_419_p4);
    sensitive << ( p_Result_22_fu_415_p1 );
    sensitive << ( p_Result_21_fu_407_p1 );

    SC_METHOD(thread_trunc_ln414_2_fu_411_p1);
    sensitive << ( prevWord_keep_V_1 );

    SC_METHOD(thread_trunc_ln414_3_fu_430_p1);
    sensitive << ( prevWord_data_V );

    SC_METHOD(thread_trunc_ln414_4_fu_434_p1);
    sensitive << ( prevWord_keep_V_1 );

    SC_METHOD(thread_trunc_ln414_fu_403_p1);
    sensitive << ( prevWord_data_V );

    SC_METHOD(thread_trunc_ln647_10_fu_237_p1);
    sensitive << ( rxUdpDataIn_TKEEP );

    SC_METHOD(thread_trunc_ln647_fu_233_p1);
    sensitive << ( rxUdpDataIn_TDATA );

    SC_METHOD(thread_ureDataPayload_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ureDataPayload_V_full_n );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ureDataPayload_V_din);
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );
    sensitive << ( tmp_3_fu_419_p4 );
    sensitive << ( tmp_2_fu_474_p6 );
    sensitive << ( tmp_1_fu_514_p4 );
    sensitive << ( ap_condition_223 );

    SC_METHOD(thread_ureDataPayload_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ure_state_load_reg_537 );
    sensitive << ( ap_predicate_op64_write_state2 );
    sensitive << ( ap_predicate_op74_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ureMetaData_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ureMetaData_V_full_n );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ureMetaData_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( p_Result_237_i_i_reg_571 );
    sensitive << ( p_Result_237_1_i_i_reg_576 );
    sensitive << ( p_Result_237_2_i_i_reg_581 );
    sensitive << ( p_Result_237_3_i_i_reg_586 );
    sensitive << ( p_Result_237_i53_i_reg_591 );
    sensitive << ( p_Result_237_1_i_reg_596 );
    sensitive << ( p_Result_237_2_i_reg_601 );
    sensitive << ( p_Result_237_3_i_reg_606 );
    sensitive << ( p_Result_239_i58_i_reg_611 );
    sensitive << ( p_Result_239_1_i_reg_616 );
    sensitive << ( p_Result_239_i61_i_reg_621 );
    sensitive << ( p_Result_239_1_i1_reg_626 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ureMetaData_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op71_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ure_state_load_load_fu_223_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ure_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ure_state = "00";
    prevWord_data_V = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    prevWord_keep_V_1 = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "udpRxEngine_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rxUdpDataIn_TVALID, "(port)rxUdpDataIn_TVALID");
    sc_trace(mVcdFile, ureDataPayload_V_din, "(port)ureDataPayload_V_din");
    sc_trace(mVcdFile, ureDataPayload_V_full_n, "(port)ureDataPayload_V_full_n");
    sc_trace(mVcdFile, ureDataPayload_V_write, "(port)ureDataPayload_V_write");
    sc_trace(mVcdFile, ureMetaData_V_din, "(port)ureMetaData_V_din");
    sc_trace(mVcdFile, ureMetaData_V_full_n, "(port)ureMetaData_V_full_n");
    sc_trace(mVcdFile, ureMetaData_V_write, "(port)ureMetaData_V_write");
    sc_trace(mVcdFile, rxUdpDataIn_TDATA, "(port)rxUdpDataIn_TDATA");
    sc_trace(mVcdFile, rxUdpDataIn_TREADY, "(port)rxUdpDataIn_TREADY");
    sc_trace(mVcdFile, rxUdpDataIn_TKEEP, "(port)rxUdpDataIn_TKEEP");
    sc_trace(mVcdFile, rxUdpDataIn_TLAST, "(port)rxUdpDataIn_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ure_state_load_load_fu_223_p1, "ure_state_load_load_fu_223_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_136_p5, "grp_nbreadreq_fu_136_p5");
    sc_trace(mVcdFile, ap_predicate_op7_read_state1, "ap_predicate_op7_read_state1");
    sc_trace(mVcdFile, ap_predicate_op22_read_state1, "ap_predicate_op22_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ure_state_load_reg_537, "ure_state_load_reg_537");
    sc_trace(mVcdFile, tmp_5_reg_541, "tmp_5_reg_541");
    sc_trace(mVcdFile, ap_predicate_op64_write_state2, "ap_predicate_op64_write_state2");
    sc_trace(mVcdFile, tmp_reg_563, "tmp_reg_563");
    sc_trace(mVcdFile, ap_predicate_op71_write_state2, "ap_predicate_op71_write_state2");
    sc_trace(mVcdFile, tmp_last_V_reg_567, "tmp_last_V_reg_567");
    sc_trace(mVcdFile, ap_predicate_op74_write_state2, "ap_predicate_op74_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ure_state, "ure_state");
    sc_trace(mVcdFile, prevWord_data_V, "prevWord_data_V");
    sc_trace(mVcdFile, prevWord_keep_V_1, "prevWord_keep_V_1");
    sc_trace(mVcdFile, rxUdpDataIn_TDATA_blk_n, "rxUdpDataIn_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ureMetaData_V_blk_n, "ureMetaData_V_blk_n");
    sc_trace(mVcdFile, ureDataPayload_V_blk_n, "ureDataPayload_V_blk_n");
    sc_trace(mVcdFile, reg_215, "reg_215");
    sc_trace(mVcdFile, reg_219, "reg_219");
    sc_trace(mVcdFile, trunc_ln647_fu_233_p1, "trunc_ln647_fu_233_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_548, "trunc_ln647_reg_548");
    sc_trace(mVcdFile, trunc_ln647_10_fu_237_p1, "trunc_ln647_10_fu_237_p1");
    sc_trace(mVcdFile, trunc_ln647_10_reg_553, "trunc_ln647_10_reg_553");
    sc_trace(mVcdFile, p_Result_s_fu_249_p2, "p_Result_s_fu_249_p2");
    sc_trace(mVcdFile, grp_fu_191_p1, "grp_fu_191_p1");
    sc_trace(mVcdFile, p_Result_237_i_i_reg_571, "p_Result_237_i_i_reg_571");
    sc_trace(mVcdFile, p_Result_237_1_i_i_reg_576, "p_Result_237_1_i_i_reg_576");
    sc_trace(mVcdFile, p_Result_237_2_i_i_reg_581, "p_Result_237_2_i_i_reg_581");
    sc_trace(mVcdFile, p_Result_237_3_i_i_reg_586, "p_Result_237_3_i_i_reg_586");
    sc_trace(mVcdFile, p_Result_237_i53_i_reg_591, "p_Result_237_i53_i_reg_591");
    sc_trace(mVcdFile, p_Result_237_1_i_reg_596, "p_Result_237_1_i_reg_596");
    sc_trace(mVcdFile, p_Result_237_2_i_reg_601, "p_Result_237_2_i_reg_601");
    sc_trace(mVcdFile, p_Result_237_3_i_reg_606, "p_Result_237_3_i_reg_606");
    sc_trace(mVcdFile, p_Result_239_i58_i_reg_611, "p_Result_239_i58_i_reg_611");
    sc_trace(mVcdFile, p_Result_239_1_i_reg_616, "p_Result_239_1_i_reg_616");
    sc_trace(mVcdFile, p_Result_239_i61_i_reg_621, "p_Result_239_i61_i_reg_621");
    sc_trace(mVcdFile, p_Result_239_1_i1_reg_626, "p_Result_239_1_i1_reg_626");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172, "ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172, "ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172");
    sc_trace(mVcdFile, select_ln173_fu_255_p3, "select_ln173_fu_255_p3");
    sc_trace(mVcdFile, p_Result_17_fu_438_p5, "p_Result_17_fu_438_p5");
    sc_trace(mVcdFile, p_Result_19_fu_487_p1, "p_Result_19_fu_487_p1");
    sc_trace(mVcdFile, p_Result_18_fu_456_p5, "p_Result_18_fu_456_p5");
    sc_trace(mVcdFile, p_Result_20_fu_491_p1, "p_Result_20_fu_491_p1");
    sc_trace(mVcdFile, tmp_3_fu_419_p4, "tmp_3_fu_419_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_2_fu_474_p6, "tmp_2_fu_474_p6");
    sc_trace(mVcdFile, tmp_1_fu_514_p4, "tmp_1_fu_514_p4");
    sc_trace(mVcdFile, tmp_11_fu_241_p3, "tmp_11_fu_241_p3");
    sc_trace(mVcdFile, trunc_ln414_fu_403_p1, "trunc_ln414_fu_403_p1");
    sc_trace(mVcdFile, trunc_ln414_2_fu_411_p1, "trunc_ln414_2_fu_411_p1");
    sc_trace(mVcdFile, p_Result_22_fu_415_p1, "p_Result_22_fu_415_p1");
    sc_trace(mVcdFile, p_Result_21_fu_407_p1, "p_Result_21_fu_407_p1");
    sc_trace(mVcdFile, trunc_ln414_4_fu_434_p1, "trunc_ln414_4_fu_434_p1");
    sc_trace(mVcdFile, trunc_ln414_3_fu_430_p1, "trunc_ln414_3_fu_430_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_191, "ap_condition_191");
    sc_trace(mVcdFile, ap_condition_154, "ap_condition_154");
    sc_trace(mVcdFile, ap_condition_103, "ap_condition_103");
    sc_trace(mVcdFile, ap_condition_193, "ap_condition_193");
    sc_trace(mVcdFile, ap_condition_223, "ap_condition_223");
    sc_trace(mVcdFile, ap_condition_198, "ap_condition_198");
#endif

    }
}

udpRxEngine::~udpRxEngine() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void udpRxEngine::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_103.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_154.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172 = p_Result_s_fu_249_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_191.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172 = ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_193.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(ap_const_lv2_0, ure_state_load_reg_537.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_563.read()))) {
            prevWord_data_V = p_Result_19_fu_487_p1.read();
        } else if ((esl_seteq<1,2,2>(ap_const_lv2_1, ure_state_load_reg_537.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_541.read()))) {
            prevWord_data_V = p_Result_17_fu_438_p5.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_193.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(ap_const_lv2_0, ure_state_load_reg_537.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_563.read()))) {
            prevWord_keep_V_1 = p_Result_20_fu_491_p1.read();
        } else if ((esl_seteq<1,2,2>(ap_const_lv2_1, ure_state_load_reg_537.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_541.read()))) {
            prevWord_keep_V_1 = p_Result_18_fu_456_p5.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_103.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_198.read(), ap_const_boolean_1)) {
            ure_state = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_condition_154.read(), ap_const_boolean_1)) {
            ure_state = select_ln173_fu_255_p3.read();
        } else if (esl_seteq<1,2,2>(ure_state_load_load_fu_223_p1.read(), ap_const_lv2_2)) {
            ure_state = ap_const_lv2_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_237_1_i_i_reg_576 = rxUdpDataIn_TDATA.read().range(119, 112);
        p_Result_237_1_i_reg_596 = rxUdpDataIn_TDATA.read().range(151, 144);
        p_Result_237_2_i_i_reg_581 = rxUdpDataIn_TDATA.read().range(111, 104);
        p_Result_237_2_i_reg_601 = rxUdpDataIn_TDATA.read().range(143, 136);
        p_Result_237_3_i_i_reg_586 = rxUdpDataIn_TDATA.read().range(103, 96);
        p_Result_237_3_i_reg_606 = rxUdpDataIn_TDATA.read().range(135, 128);
        p_Result_237_i53_i_reg_591 = rxUdpDataIn_TDATA.read().range(159, 152);
        p_Result_237_i_i_reg_571 = rxUdpDataIn_TDATA.read().range(127, 120);
        p_Result_239_1_i1_reg_626 = rxUdpDataIn_TDATA.read().range(183, 176);
        p_Result_239_1_i_reg_616 = rxUdpDataIn_TDATA.read().range(167, 160);
        p_Result_239_i58_i_reg_611 = rxUdpDataIn_TDATA.read().range(175, 168);
        p_Result_239_i61_i_reg_621 = rxUdpDataIn_TDATA.read().range(191, 184);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && 
  esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_215 = rxUdpDataIn_TDATA.read().range(511, 224);
        reg_219 = rxUdpDataIn_TKEEP.read().range(63, 28);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_5_reg_541 = grp_nbreadreq_fu_136_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_last_V_reg_567 = rxUdpDataIn_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_563 = grp_nbreadreq_fu_136_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln647_10_reg_553 = trunc_ln647_10_fu_237_p1.read();
        trunc_ln647_reg_548 = trunc_ln647_fu_233_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ure_state_load_reg_537 = ure_state.read();
    }
}

void udpRxEngine::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void udpRxEngine::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void udpRxEngine::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureMetaData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udpRxEngine::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureMetaData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udpRxEngine::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureMetaData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udpRxEngine::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rxUdpDataIn_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void udpRxEngine::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
  esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2)) || (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ureMetaData_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, ureDataPayload_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read())));
}

void udpRxEngine::thread_ap_condition_103() {
    ap_condition_103 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void udpRxEngine::thread_ap_condition_154() {
    ap_condition_154 = (esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_191_p1.read()));
}

void udpRxEngine::thread_ap_condition_191() {
    ap_condition_191 = (esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(grp_fu_191_p1.read(), ap_const_lv1_0));
}

void udpRxEngine::thread_ap_condition_193() {
    ap_condition_193 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void udpRxEngine::thread_ap_condition_198() {
    ap_condition_198 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(grp_fu_191_p1.read(), ap_const_lv1_0));
}

void udpRxEngine::thread_ap_condition_223() {
    ap_condition_223 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void udpRxEngine::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void udpRxEngine::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void udpRxEngine::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void udpRxEngine::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172() {
    ap_phi_reg_pp0_iter0_tmp_last_V_3_reg_172 =  (sc_lv<1>) ("X");
}

void udpRxEngine::thread_ap_predicate_op22_read_state1() {
    ap_predicate_op22_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_0));
}

void udpRxEngine::thread_ap_predicate_op64_write_state2() {
    ap_predicate_op64_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, ure_state_load_reg_537.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_541.read()));
}

void udpRxEngine::thread_ap_predicate_op71_write_state2() {
    ap_predicate_op71_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, ure_state_load_reg_537.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_563.read()));
}

void udpRxEngine::thread_ap_predicate_op74_write_state2() {
    ap_predicate_op74_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, ure_state_load_reg_537.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_563.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_reg_567.read()));
}

void udpRxEngine::thread_ap_predicate_op7_read_state1() {
    ap_predicate_op7_read_state1 = (esl_seteq<1,2,2>(ure_state.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(grp_nbreadreq_fu_136_p5.read(), ap_const_lv1_1));
}

void udpRxEngine::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void udpRxEngine::thread_grp_fu_191_p1() {
    grp_fu_191_p1 = rxUdpDataIn_TLAST.read();
}

void udpRxEngine::thread_grp_nbreadreq_fu_136_p5() {
    grp_nbreadreq_fu_136_p5 =  (sc_lv<1>) ((rxUdpDataIn_TVALID.read()));
}

void udpRxEngine::thread_p_Result_17_fu_438_p5() {
    p_Result_17_fu_438_p5 = esl_partset<512,512,288,32,32>(prevWord_data_V.read(), reg_215.read(), ap_const_lv32_0, ap_const_lv32_11F);
}

void udpRxEngine::thread_p_Result_18_fu_456_p5() {
    p_Result_18_fu_456_p5 = esl_partset<64,64,36,32,32>(prevWord_keep_V_1.read(), reg_219.read(), ap_const_lv32_0, ap_const_lv32_23);
}

void udpRxEngine::thread_p_Result_19_fu_487_p1() {
    p_Result_19_fu_487_p1 = esl_zext<512,288>(reg_215.read());
}

void udpRxEngine::thread_p_Result_20_fu_491_p1() {
    p_Result_20_fu_491_p1 = esl_zext<64,36>(reg_219.read());
}

void udpRxEngine::thread_p_Result_21_fu_407_p1() {
    p_Result_21_fu_407_p1 = esl_zext<512,288>(trunc_ln414_fu_403_p1.read());
}

void udpRxEngine::thread_p_Result_22_fu_415_p1() {
    p_Result_22_fu_415_p1 = esl_zext<64,36>(trunc_ln414_2_fu_411_p1.read());
}

void udpRxEngine::thread_p_Result_s_fu_249_p2() {
    p_Result_s_fu_249_p2 = (tmp_11_fu_241_p3.read() ^ ap_const_lv1_1);
}

void udpRxEngine::thread_rxUdpDataIn_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        rxUdpDataIn_TDATA_blk_n = rxUdpDataIn_TVALID.read();
    } else {
        rxUdpDataIn_TDATA_blk_n = ap_const_logic_1;
    }
}

void udpRxEngine::thread_rxUdpDataIn_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        rxUdpDataIn_TREADY = ap_const_logic_1;
    } else {
        rxUdpDataIn_TREADY = ap_const_logic_0;
    }
}

void udpRxEngine::thread_select_ln173_fu_255_p3() {
    select_ln173_fu_255_p3 = (!tmp_11_fu_241_p3.read()[0].is_01())? sc_lv<2>(): ((tmp_11_fu_241_p3.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void udpRxEngine::thread_tmp_11_fu_241_p3() {
    tmp_11_fu_241_p3 = rxUdpDataIn_TKEEP.read().range(28, 28);
}

void udpRxEngine::thread_tmp_1_fu_514_p4() {
    tmp_1_fu_514_p4 = esl_concat<65,512>(esl_concat<1,64>(ap_const_lv1_1, p_Result_20_fu_491_p1.read()), p_Result_19_fu_487_p1.read());
}

void udpRxEngine::thread_tmp_2_fu_474_p6() {
    tmp_2_fu_474_p6 = esl_concat<289,288>(esl_concat<65,224>(esl_concat<29,36>(esl_concat<1,28>(ap_phi_reg_pp0_iter1_tmp_last_V_3_reg_172.read(), trunc_ln647_10_reg_553.read()), trunc_ln414_4_fu_434_p1.read()), trunc_ln647_reg_548.read()), trunc_ln414_3_fu_430_p1.read());
}

void udpRxEngine::thread_tmp_3_fu_419_p4() {
    tmp_3_fu_419_p4 = esl_concat<65,512>(esl_concat<1,64>(ap_const_lv1_1, p_Result_22_fu_415_p1.read()), p_Result_21_fu_407_p1.read());
}

void udpRxEngine::thread_trunc_ln414_2_fu_411_p1() {
    trunc_ln414_2_fu_411_p1 = prevWord_keep_V_1.read().range(36-1, 0);
}

void udpRxEngine::thread_trunc_ln414_3_fu_430_p1() {
    trunc_ln414_3_fu_430_p1 = prevWord_data_V.read().range(288-1, 0);
}

void udpRxEngine::thread_trunc_ln414_4_fu_434_p1() {
    trunc_ln414_4_fu_434_p1 = prevWord_keep_V_1.read().range(36-1, 0);
}

void udpRxEngine::thread_trunc_ln414_fu_403_p1() {
    trunc_ln414_fu_403_p1 = prevWord_data_V.read().range(288-1, 0);
}

void udpRxEngine::thread_trunc_ln647_10_fu_237_p1() {
    trunc_ln647_10_fu_237_p1 = rxUdpDataIn_TKEEP.read().range(28-1, 0);
}

void udpRxEngine::thread_trunc_ln647_fu_233_p1() {
    trunc_ln647_fu_233_p1 = rxUdpDataIn_TDATA.read().range(224-1, 0);
}

void udpRxEngine::thread_ureDataPayload_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        ureDataPayload_V_blk_n = ureDataPayload_V_full_n.read();
    } else {
        ureDataPayload_V_blk_n = ap_const_logic_1;
    }
}

void udpRxEngine::thread_ureDataPayload_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_223.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read())) {
            ureDataPayload_V_din = tmp_1_fu_514_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read())) {
            ureDataPayload_V_din = tmp_2_fu_474_p6.read();
        } else if (esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2)) {
            ureDataPayload_V_din = tmp_3_fu_419_p4.read();
        } else {
            ureDataPayload_V_din
        }
    } else {
        ureDataPayload_V_din
    }
}

void udpRxEngine::thread_ureDataPayload_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(ure_state_load_reg_537.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        ureDataPayload_V_write = ap_const_logic_1;
    } else {
        ureDataPayload_V_write = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ureMetaData_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ureMetaData_V_blk_n = ureMetaData_V_full_n.read();
    } else {
        ureMetaData_V_blk_n = ap_const_logic_1;
    }
}

void udpRxEngine::thread_ureMetaData_V_din() {
    ureMetaData_V_din = esl_concat<89,8>(esl_concat<81,8>(esl_concat<73,8>(esl_concat<65,8>(esl_concat<57,8>(esl_concat<49,8>(esl_concat<41,8>(esl_concat<33,8>(esl_concat<25,8>(esl_concat<17,8>(esl_concat<9,8>(esl_concat<1,8>(ap_const_lv1_1, p_Result_239_1_i1_reg_626.read()), p_Result_239_i61_i_reg_621.read()), p_Result_239_1_i_reg_616.read()), p_Result_239_i58_i_reg_611.read()), p_Result_237_3_i_reg_606.read()), p_Result_237_2_i_reg_601.read()), p_Result_237_1_i_reg_596.read()), p_Result_237_i53_i_reg_591.read()), p_Result_237_3_i_i_reg_586.read()), p_Result_237_2_i_i_reg_581.read()), p_Result_237_1_i_i_reg_576.read()), p_Result_237_i_i_reg_571.read());
}

void udpRxEngine::thread_ureMetaData_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op71_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ureMetaData_V_write = ap_const_logic_1;
    } else {
        ureMetaData_V_write = ap_const_logic_0;
    }
}

void udpRxEngine::thread_ure_state_load_load_fu_223_p1() {
    ure_state_load_load_fu_223_p1 = ure_state.read();
}

void udpRxEngine::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

