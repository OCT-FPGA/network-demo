// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "udpTxEngine.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic udpTxEngine::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic udpTxEngine::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> udpTxEngine::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> udpTxEngine::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool udpTxEngine::ap_const_boolean_1 = true;
const sc_lv<3> udpTxEngine::ap_const_lv3_4 = "100";
const sc_lv<1> udpTxEngine::ap_const_lv1_1 = "1";
const sc_lv<3> udpTxEngine::ap_const_lv3_2 = "10";
const sc_lv<3> udpTxEngine::ap_const_lv3_1 = "1";
const sc_lv<3> udpTxEngine::ap_const_lv3_0 = "000";
const sc_lv<3> udpTxEngine::ap_const_lv3_3 = "11";
const bool udpTxEngine::ap_const_boolean_0 = false;
const sc_lv<16> udpTxEngine::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> udpTxEngine::ap_const_lv1_0 = "0";
const sc_lv<32> udpTxEngine::ap_const_lv32_240 = "1001000000";
const sc_lv<32> udpTxEngine::ap_const_lv32_200 = "1000000000";
const sc_lv<32> udpTxEngine::ap_const_lv32_223 = "1000100011";
const sc_lv<32> udpTxEngine::ap_const_lv32_120 = "100100000";
const sc_lv<32> udpTxEngine::ap_const_lv32_1FF = "111111111";
const sc_lv<32> udpTxEngine::ap_const_lv32_224 = "1000100100";
const sc_lv<32> udpTxEngine::ap_const_lv32_23F = "1000111111";
const sc_lv<2> udpTxEngine::ap_const_lv2_3 = "11";
const sc_lv<2> udpTxEngine::ap_const_lv2_0 = "00";
const sc_lv<2> udpTxEngine::ap_const_lv2_2 = "10";
const sc_lv<32> udpTxEngine::ap_const_lv32_20 = "100000";
const sc_lv<32> udpTxEngine::ap_const_lv32_3F = "111111";
const sc_lv<32> udpTxEngine::ap_const_lv32_40 = "1000000";
const sc_lv<32> udpTxEngine::ap_const_lv32_4F = "1001111";
const sc_lv<32> udpTxEngine::ap_const_lv32_50 = "1010000";
const sc_lv<32> udpTxEngine::ap_const_lv32_5F = "1011111";
const sc_lv<32> udpTxEngine::ap_const_lv32_60 = "1100000";
const sc_lv<16> udpTxEngine::ap_const_lv16_1C = "11100";
const sc_lv<16> udpTxEngine::ap_const_lv16_8 = "1000";
const sc_lv<32> udpTxEngine::ap_const_lv32_DF = "11011111";
const sc_lv<32> udpTxEngine::ap_const_lv32_1B = "11011";
const sc_lv<32> udpTxEngine::ap_const_lv32_8 = "1000";
const sc_lv<32> udpTxEngine::ap_const_lv32_F = "1111";
const sc_lv<32> udpTxEngine::ap_const_lv32_18 = "11000";
const sc_lv<32> udpTxEngine::ap_const_lv32_1F = "11111";
const sc_lv<32> udpTxEngine::ap_const_lv32_10 = "10000";
const sc_lv<32> udpTxEngine::ap_const_lv32_17 = "10111";
const sc_lv<64> udpTxEngine::ap_const_lv64_114000000000 = "100010100000000000000000000000000000000000000";
const sc_lv<16> udpTxEngine::ap_const_lv16_45 = "1000101";
const sc_lv<28> udpTxEngine::ap_const_lv28_FFFFFFF = "1111111111111111111111111111";

udpTxEngine::udpTxEngine(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_DataOut_V_data_V_U = new regslice_both<512>("regslice_both_DataOut_V_data_V_U");
    regslice_both_DataOut_V_data_V_U->ap_clk(ap_clk);
    regslice_both_DataOut_V_data_V_U->ap_rst(ap_rst);
    regslice_both_DataOut_V_data_V_U->data_in(txUdpDataOut_TDATA_int);
    regslice_both_DataOut_V_data_V_U->vld_in(txUdpDataOut_TVALID_int);
    regslice_both_DataOut_V_data_V_U->ack_in(txUdpDataOut_TREADY_int);
    regslice_both_DataOut_V_data_V_U->data_out(txUdpDataOut_TDATA);
    regslice_both_DataOut_V_data_V_U->vld_out(regslice_both_DataOut_V_data_V_U_vld_out);
    regslice_both_DataOut_V_data_V_U->ack_out(txUdpDataOut_TREADY);
    regslice_both_DataOut_V_data_V_U->apdone_blk(regslice_both_DataOut_V_data_V_U_apdone_blk);
    regslice_both_DataOut_V_keep_V_U = new regslice_both<64>("regslice_both_DataOut_V_keep_V_U");
    regslice_both_DataOut_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_DataOut_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_DataOut_V_keep_V_U->data_in(txUdpDataOut_TKEEP_int);
    regslice_both_DataOut_V_keep_V_U->vld_in(txUdpDataOut_TVALID_int);
    regslice_both_DataOut_V_keep_V_U->ack_in(regslice_both_DataOut_V_keep_V_U_ack_in_dummy);
    regslice_both_DataOut_V_keep_V_U->data_out(txUdpDataOut_TKEEP);
    regslice_both_DataOut_V_keep_V_U->vld_out(regslice_both_DataOut_V_keep_V_U_vld_out);
    regslice_both_DataOut_V_keep_V_U->ack_out(txUdpDataOut_TREADY);
    regslice_both_DataOut_V_keep_V_U->apdone_blk(regslice_both_DataOut_V_keep_V_U_apdone_blk);
    regslice_both_DataOut_V_last_V_U = new regslice_both<1>("regslice_both_DataOut_V_last_V_U");
    regslice_both_DataOut_V_last_V_U->ap_clk(ap_clk);
    regslice_both_DataOut_V_last_V_U->ap_rst(ap_rst);
    regslice_both_DataOut_V_last_V_U->data_in(txUdpDataOut_TLAST_int);
    regslice_both_DataOut_V_last_V_U->vld_in(txUdpDataOut_TVALID_int);
    regslice_both_DataOut_V_last_V_U->ack_in(regslice_both_DataOut_V_last_V_U_ack_in_dummy);
    regslice_both_DataOut_V_last_V_U->data_out(txUdpDataOut_TLAST);
    regslice_both_DataOut_V_last_V_U->vld_out(regslice_both_DataOut_V_last_V_U_vld_out);
    regslice_both_DataOut_V_last_V_U->ack_out(txUdpDataOut_TREADY);
    regslice_both_DataOut_V_last_V_U->apdone_blk(regslice_both_DataOut_V_last_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln214_1_fu_452_p2);
    sensitive << ( agmdpayloadLenOut_V_s_dout );

    SC_METHOD(thread_add_ln214_fu_440_p2);
    sensitive << ( agmdpayloadLenOut_V_s_dout );

    SC_METHOD(thread_agmdDataOut_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( agmdDataOut_V_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_agmdDataOut_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_agmdpayloadLenOut_V_s_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );
    sensitive << ( ap_predicate_op53_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_agmdpayloadLenOut_V_s_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op53_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( agmdDataOut_V_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( txthMetaData_V_empty_n );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );
    sensitive << ( ap_predicate_op53_read_state1 );
    sensitive << ( regslice_both_DataOut_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( agmdDataOut_V_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( txthMetaData_V_empty_n );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );
    sensitive << ( ap_predicate_op53_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_DataOut_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( agmdDataOut_V_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( txthMetaData_V_empty_n );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );
    sensitive << ( ap_predicate_op53_read_state1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( regslice_both_DataOut_V_data_V_U_apdone_blk );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( agmdDataOut_V_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op26_read_state1 );
    sensitive << ( txthMetaData_V_empty_n );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );
    sensitive << ( ap_predicate_op53_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( txUdpDataOut_TREADY_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( ute_state_load_reg_802_pp0_iter1_reg );
    sensitive << ( ap_predicate_op119_write_state3 );
    sensitive << ( ap_predicate_op122_write_state3 );
    sensitive << ( txUdpDataOut_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( regslice_both_DataOut_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_condition_157);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_239);
    sensitive << ( grp_nbreadreq_fu_170_p3 );
    sensitive << ( ute_state );
    sensitive << ( grp_fu_240_p3 );

    SC_METHOD(thread_ap_condition_281);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_284);
    sensitive << ( grp_nbreadreq_fu_170_p3 );
    sensitive << ( ute_state );
    sensitive << ( grp_fu_240_p3 );

    SC_METHOD(thread_ap_condition_344);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226);

    SC_METHOD(thread_ap_predicate_op108_write_state2);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( tmp_1_reg_831 );

    SC_METHOD(thread_ap_predicate_op119_write_state3);
    sensitive << ( ute_state_load_reg_802_pp0_iter1_reg );
    sensitive << ( tmp_2_reg_814_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op122_write_state3);
    sensitive << ( ute_state_load_reg_802_pp0_iter1_reg );
    sensitive << ( tmp_1_reg_831_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op13_read_state1);
    sensitive << ( grp_nbreadreq_fu_170_p3 );
    sensitive << ( ute_state );

    SC_METHOD(thread_ap_predicate_op26_read_state1);
    sensitive << ( grp_nbreadreq_fu_170_p3 );
    sensitive << ( ute_state );

    SC_METHOD(thread_ap_predicate_op43_read_state1);
    sensitive << ( tmp_nbreadreq_fu_184_p3 );
    sensitive << ( tmp_4_nbreadreq_fu_192_p3 );
    sensitive << ( ute_state );

    SC_METHOD(thread_ap_predicate_op53_read_state1);
    sensitive << ( tmp_nbreadreq_fu_184_p3 );
    sensitive << ( tmp_4_nbreadreq_fu_192_p3 );
    sensitive << ( ute_state );

    SC_METHOD(thread_ap_predicate_op78_write_state2);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( tmp_2_reg_814 );

    SC_METHOD(thread_ap_predicate_op7_read_state1);
    sensitive << ( grp_nbreadreq_fu_170_p3 );
    sensitive << ( ute_state );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_grp_fu_240_p3);
    sensitive << ( agmdDataOut_V_dout );

    SC_METHOD(thread_grp_fu_284_p3);
    sensitive << ( agmdDataOut_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_170_p3);
    sensitive << ( agmdDataOut_V_empty_n );

    SC_METHOD(thread_p_Result_10_fu_757_p3);
    sensitive << ( reg_292 );

    SC_METHOD(thread_p_Result_11_fu_512_p3);
    sensitive << ( trunc_ln647_9_reg_821 );
    sensitive << ( trunc_ln647_7_fu_504_p1 );

    SC_METHOD(thread_p_Result_12_fu_520_p3);
    sensitive << ( reg_292 );
    sensitive << ( trunc_ln647_8_fu_508_p1 );

    SC_METHOD(thread_p_Result_13_fu_490_p1);
    sensitive << ( trunc_ln414_fu_486_p1 );

    SC_METHOD(thread_p_Result_14_fu_499_p1);
    sensitive << ( trunc_ln414_1_fu_495_p1 );

    SC_METHOD(thread_p_Result_237_1_i_fu_635_p4);
    sensitive << ( currMetaData_theirIP );

    SC_METHOD(thread_p_Result_237_1_i_i_fu_597_p4);
    sensitive << ( currMetaData_myIP_V );

    SC_METHOD(thread_p_Result_237_2_i_fu_645_p4);
    sensitive << ( currMetaData_theirIP );

    SC_METHOD(thread_p_Result_237_2_i_i_fu_607_p4);
    sensitive << ( currMetaData_myIP_V );

    SC_METHOD(thread_p_Result_237_i108_s_fu_625_p4);
    sensitive << ( currMetaData_theirIP );

    SC_METHOD(thread_p_Result_237_i_i_fu_587_p4);
    sensitive << ( currMetaData_myIP_V );

    SC_METHOD(thread_p_Result_239_i113_s_fu_663_p4);
    sensitive << ( currMetaData_myPort_s );

    SC_METHOD(thread_p_Result_239_i116_s_fu_681_p4);
    sensitive << ( currMetaData_theirPo );

    SC_METHOD(thread_p_Result_239_i119_s_fu_699_p4);
    sensitive << ( udp_len_V );

    SC_METHOD(thread_p_Result_239_i_i_fu_569_p4);
    sensitive << ( ip_len_V );

    SC_METHOD(thread_p_Result_3_fu_766_p5);
    sensitive << ( prevWord_data_V_1 );
    sensitive << ( reg_296 );

    SC_METHOD(thread_p_Result_4_fu_784_p5);
    sensitive << ( prevWord_keep_V );
    sensitive << ( reg_300 );

    SC_METHOD(thread_p_Result_5_fu_336_p2);
    sensitive << ( grp_fu_284_p3 );

    SC_METHOD(thread_p_Result_7_fu_529_p5);
    sensitive << ( prevWord_data_V_1 );
    sensitive << ( reg_296 );

    SC_METHOD(thread_p_Result_8_fu_547_p5);
    sensitive << ( prevWord_keep_V );
    sensitive << ( reg_300 );

    SC_METHOD(thread_p_Result_9_fu_312_p2);
    sensitive << ( grp_fu_284_p3 );

    SC_METHOD(thread_p_Result_s_fu_713_p21);
    sensitive << ( trunc_ln647_6_reg_835 );
    sensitive << ( trunc_ln647_5_fu_709_p1 );
    sensitive << ( p_Result_239_i119_s_fu_699_p4 );
    sensitive << ( trunc_ln647_4_fu_691_p1 );
    sensitive << ( p_Result_239_i116_s_fu_681_p4 );
    sensitive << ( trunc_ln647_3_fu_673_p1 );
    sensitive << ( p_Result_239_i113_s_fu_663_p4 );
    sensitive << ( trunc_ln647_2_fu_655_p1 );
    sensitive << ( p_Result_237_2_i_fu_645_p4 );
    sensitive << ( p_Result_237_1_i_fu_635_p4 );
    sensitive << ( p_Result_237_i108_s_fu_625_p4 );
    sensitive << ( trunc_ln647_1_fu_617_p1 );
    sensitive << ( p_Result_237_2_i_i_fu_607_p4 );
    sensitive << ( p_Result_237_1_i_i_fu_597_p4 );
    sensitive << ( p_Result_237_i_i_fu_587_p4 );
    sensitive << ( trunc_ln647_fu_579_p1 );
    sensitive << ( p_Result_239_i_i_fu_569_p4 );

    SC_METHOD(thread_select_ln312_fu_464_p3);
    sensitive << ( tmp_9_fu_432_p3 );

    SC_METHOD(thread_select_ln321_fu_356_p3);
    sensitive << ( grp_fu_240_p3 );
    sensitive << ( select_ln347_fu_342_p3 );

    SC_METHOD(thread_select_ln347_fu_342_p3);
    sensitive << ( grp_fu_284_p3 );

    SC_METHOD(thread_select_ln377_fu_318_p3);
    sensitive << ( grp_fu_284_p3 );

    SC_METHOD(thread_tmp_4_nbreadreq_fu_192_p3);
    sensitive << ( agmdpayloadLenOut_V_s_empty_n );

    SC_METHOD(thread_tmp_9_fu_432_p3);
    sensitive << ( txthMetaData_V_dout );

    SC_METHOD(thread_tmp_last_V_fu_350_p2);
    sensitive << ( grp_fu_240_p3 );
    sensitive << ( p_Result_5_fu_336_p2 );

    SC_METHOD(thread_tmp_nbreadreq_fu_184_p3);
    sensitive << ( txthMetaData_V_empty_n );

    SC_METHOD(thread_trunc_ln321_fu_374_p1);
    sensitive << ( txthMetaData_V_dout );

    SC_METHOD(thread_trunc_ln414_1_fu_495_p1);
    sensitive << ( prevWord_keep_V );

    SC_METHOD(thread_trunc_ln414_fu_486_p1);
    sensitive << ( prevWord_data_V_1 );

    SC_METHOD(thread_trunc_ln647_1_fu_617_p1);
    sensitive << ( currMetaData_myIP_V );

    SC_METHOD(thread_trunc_ln647_2_fu_655_p1);
    sensitive << ( currMetaData_theirIP );

    SC_METHOD(thread_trunc_ln647_3_fu_673_p1);
    sensitive << ( currMetaData_myPort_s );

    SC_METHOD(thread_trunc_ln647_4_fu_691_p1);
    sensitive << ( currMetaData_theirPo );

    SC_METHOD(thread_trunc_ln647_5_fu_709_p1);
    sensitive << ( udp_len_V );

    SC_METHOD(thread_trunc_ln647_6_fu_332_p1);
    sensitive << ( agmdDataOut_V_dout );

    SC_METHOD(thread_trunc_ln647_7_fu_504_p1);
    sensitive << ( prevWord_data_V_1 );

    SC_METHOD(thread_trunc_ln647_8_fu_508_p1);
    sensitive << ( prevWord_keep_V );

    SC_METHOD(thread_trunc_ln647_9_fu_308_p1);
    sensitive << ( agmdDataOut_V_dout );

    SC_METHOD(thread_trunc_ln647_fu_579_p1);
    sensitive << ( ip_len_V );

    SC_METHOD(thread_txUdpDataOut_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( ute_state_load_reg_802_pp0_iter1_reg );
    sensitive << ( ap_predicate_op119_write_state3 );
    sensitive << ( ap_predicate_op122_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( txUdpDataOut_TREADY_int );

    SC_METHOD(thread_txUdpDataOut_TDATA_int);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( p_Result_13_fu_490_p1 );
    sensitive << ( p_Result_11_fu_512_p3 );
    sensitive << ( p_Result_s_fu_713_p21 );
    sensitive << ( ap_condition_344 );

    SC_METHOD(thread_txUdpDataOut_TKEEP_int);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( p_Result_14_fu_499_p1 );
    sensitive << ( p_Result_12_fu_520_p3 );
    sensitive << ( p_Result_10_fu_757_p3 );
    sensitive << ( ap_condition_344 );

    SC_METHOD(thread_txUdpDataOut_TLAST_int);
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( tmp_last_V_reg_840 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226 );
    sensitive << ( ap_condition_344 );

    SC_METHOD(thread_txUdpDataOut_TVALID);
    sensitive << ( regslice_both_DataOut_V_data_V_U_vld_out );

    SC_METHOD(thread_txUdpDataOut_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ute_state_load_reg_802 );
    sensitive << ( ap_predicate_op78_write_state2 );
    sensitive << ( ap_predicate_op108_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_txthMetaData_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( txthMetaData_V_empty_n );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_txthMetaData_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ute_state_load_load_fu_304_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ute_state );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_zext_ln355_fu_364_p1);
    sensitive << ( select_ln321_fu_356_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ute_state = "000";
    prevWord_data_V_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    prevWord_keep_V = "0000000000000000000000000000000000000000000000000000000000000000";
    currMetaData_theirIP = "00000000000000000000000000000000";
    currMetaData_myIP_V = "00000000000000000000000000000000";
    currMetaData_theirPo = "0000000000000000";
    currMetaData_myPort_s = "0000000000000000";
    ip_len_V = "0000000000000000";
    udp_len_V = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "udpTxEngine_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, agmdDataOut_V_dout, "(port)agmdDataOut_V_dout");
    sc_trace(mVcdFile, agmdDataOut_V_empty_n, "(port)agmdDataOut_V_empty_n");
    sc_trace(mVcdFile, agmdDataOut_V_read, "(port)agmdDataOut_V_read");
    sc_trace(mVcdFile, txthMetaData_V_dout, "(port)txthMetaData_V_dout");
    sc_trace(mVcdFile, txthMetaData_V_empty_n, "(port)txthMetaData_V_empty_n");
    sc_trace(mVcdFile, txthMetaData_V_read, "(port)txthMetaData_V_read");
    sc_trace(mVcdFile, agmdpayloadLenOut_V_s_dout, "(port)agmdpayloadLenOut_V_s_dout");
    sc_trace(mVcdFile, agmdpayloadLenOut_V_s_empty_n, "(port)agmdpayloadLenOut_V_s_empty_n");
    sc_trace(mVcdFile, agmdpayloadLenOut_V_s_read, "(port)agmdpayloadLenOut_V_s_read");
    sc_trace(mVcdFile, txUdpDataOut_TREADY, "(port)txUdpDataOut_TREADY");
    sc_trace(mVcdFile, txUdpDataOut_TDATA, "(port)txUdpDataOut_TDATA");
    sc_trace(mVcdFile, txUdpDataOut_TVALID, "(port)txUdpDataOut_TVALID");
    sc_trace(mVcdFile, txUdpDataOut_TKEEP, "(port)txUdpDataOut_TKEEP");
    sc_trace(mVcdFile, txUdpDataOut_TLAST, "(port)txUdpDataOut_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ute_state_load_load_fu_304_p1, "ute_state_load_load_fu_304_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_170_p3, "grp_nbreadreq_fu_170_p3");
    sc_trace(mVcdFile, ap_predicate_op7_read_state1, "ap_predicate_op7_read_state1");
    sc_trace(mVcdFile, ap_predicate_op13_read_state1, "ap_predicate_op13_read_state1");
    sc_trace(mVcdFile, ap_predicate_op26_read_state1, "ap_predicate_op26_read_state1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_184_p3, "tmp_nbreadreq_fu_184_p3");
    sc_trace(mVcdFile, tmp_4_nbreadreq_fu_192_p3, "tmp_4_nbreadreq_fu_192_p3");
    sc_trace(mVcdFile, ap_predicate_op43_read_state1, "ap_predicate_op43_read_state1");
    sc_trace(mVcdFile, ap_predicate_op53_read_state1, "ap_predicate_op53_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ute_state_load_reg_802, "ute_state_load_reg_802");
    sc_trace(mVcdFile, tmp_2_reg_814, "tmp_2_reg_814");
    sc_trace(mVcdFile, ap_predicate_op78_write_state2, "ap_predicate_op78_write_state2");
    sc_trace(mVcdFile, tmp_1_reg_831, "tmp_1_reg_831");
    sc_trace(mVcdFile, ap_predicate_op108_write_state2, "ap_predicate_op108_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, regslice_both_DataOut_V_data_V_U_apdone_blk, "regslice_both_DataOut_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ute_state_load_reg_802_pp0_iter1_reg, "ute_state_load_reg_802_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_2_reg_814_pp0_iter1_reg, "tmp_2_reg_814_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op119_write_state3, "ap_predicate_op119_write_state3");
    sc_trace(mVcdFile, tmp_1_reg_831_pp0_iter1_reg, "tmp_1_reg_831_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op122_write_state3, "ap_predicate_op122_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ute_state, "ute_state");
    sc_trace(mVcdFile, prevWord_data_V_1, "prevWord_data_V_1");
    sc_trace(mVcdFile, prevWord_keep_V, "prevWord_keep_V");
    sc_trace(mVcdFile, currMetaData_theirIP, "currMetaData_theirIP");
    sc_trace(mVcdFile, currMetaData_myIP_V, "currMetaData_myIP_V");
    sc_trace(mVcdFile, currMetaData_theirPo, "currMetaData_theirPo");
    sc_trace(mVcdFile, currMetaData_myPort_s, "currMetaData_myPort_s");
    sc_trace(mVcdFile, ip_len_V, "ip_len_V");
    sc_trace(mVcdFile, udp_len_V, "udp_len_V");
    sc_trace(mVcdFile, txUdpDataOut_TDATA_blk_n, "txUdpDataOut_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, txthMetaData_V_blk_n, "txthMetaData_V_blk_n");
    sc_trace(mVcdFile, agmdpayloadLenOut_V_s_blk_n, "agmdpayloadLenOut_V_s_blk_n");
    sc_trace(mVcdFile, agmdDataOut_V_blk_n, "agmdDataOut_V_blk_n");
    sc_trace(mVcdFile, reg_292, "reg_292");
    sc_trace(mVcdFile, reg_296, "reg_296");
    sc_trace(mVcdFile, reg_300, "reg_300");
    sc_trace(mVcdFile, grp_fu_240_p3, "grp_fu_240_p3");
    sc_trace(mVcdFile, trunc_ln647_9_fu_308_p1, "trunc_ln647_9_fu_308_p1");
    sc_trace(mVcdFile, trunc_ln647_9_reg_821, "trunc_ln647_9_reg_821");
    sc_trace(mVcdFile, p_Result_9_fu_312_p2, "p_Result_9_fu_312_p2");
    sc_trace(mVcdFile, trunc_ln647_6_fu_332_p1, "trunc_ln647_6_fu_332_p1");
    sc_trace(mVcdFile, trunc_ln647_6_reg_835, "trunc_ln647_6_reg_835");
    sc_trace(mVcdFile, tmp_last_V_fu_350_p2, "tmp_last_V_fu_350_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_840, "tmp_last_V_reg_840");
    sc_trace(mVcdFile, p_Result_13_fu_490_p1, "p_Result_13_fu_490_p1");
    sc_trace(mVcdFile, p_Result_14_fu_499_p1, "p_Result_14_fu_499_p1");
    sc_trace(mVcdFile, p_Result_11_fu_512_p3, "p_Result_11_fu_512_p3");
    sc_trace(mVcdFile, p_Result_12_fu_520_p3, "p_Result_12_fu_520_p3");
    sc_trace(mVcdFile, p_Result_s_fu_713_p21, "p_Result_s_fu_713_p21");
    sc_trace(mVcdFile, p_Result_10_fu_757_p3, "p_Result_10_fu_757_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226, "ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226, "ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226");
    sc_trace(mVcdFile, select_ln377_fu_318_p3, "select_ln377_fu_318_p3");
    sc_trace(mVcdFile, zext_ln355_fu_364_p1, "zext_ln355_fu_364_p1");
    sc_trace(mVcdFile, select_ln312_fu_464_p3, "select_ln312_fu_464_p3");
    sc_trace(mVcdFile, p_Result_7_fu_529_p5, "p_Result_7_fu_529_p5");
    sc_trace(mVcdFile, p_Result_3_fu_766_p5, "p_Result_3_fu_766_p5");
    sc_trace(mVcdFile, p_Result_8_fu_547_p5, "p_Result_8_fu_547_p5");
    sc_trace(mVcdFile, p_Result_4_fu_784_p5, "p_Result_4_fu_784_p5");
    sc_trace(mVcdFile, trunc_ln321_fu_374_p1, "trunc_ln321_fu_374_p1");
    sc_trace(mVcdFile, add_ln214_fu_440_p2, "add_ln214_fu_440_p2");
    sc_trace(mVcdFile, add_ln214_1_fu_452_p2, "add_ln214_1_fu_452_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_284_p3, "grp_fu_284_p3");
    sc_trace(mVcdFile, p_Result_5_fu_336_p2, "p_Result_5_fu_336_p2");
    sc_trace(mVcdFile, select_ln347_fu_342_p3, "select_ln347_fu_342_p3");
    sc_trace(mVcdFile, select_ln321_fu_356_p3, "select_ln321_fu_356_p3");
    sc_trace(mVcdFile, tmp_9_fu_432_p3, "tmp_9_fu_432_p3");
    sc_trace(mVcdFile, trunc_ln414_fu_486_p1, "trunc_ln414_fu_486_p1");
    sc_trace(mVcdFile, trunc_ln414_1_fu_495_p1, "trunc_ln414_1_fu_495_p1");
    sc_trace(mVcdFile, trunc_ln647_7_fu_504_p1, "trunc_ln647_7_fu_504_p1");
    sc_trace(mVcdFile, trunc_ln647_8_fu_508_p1, "trunc_ln647_8_fu_508_p1");
    sc_trace(mVcdFile, trunc_ln647_5_fu_709_p1, "trunc_ln647_5_fu_709_p1");
    sc_trace(mVcdFile, p_Result_239_i119_s_fu_699_p4, "p_Result_239_i119_s_fu_699_p4");
    sc_trace(mVcdFile, trunc_ln647_4_fu_691_p1, "trunc_ln647_4_fu_691_p1");
    sc_trace(mVcdFile, p_Result_239_i116_s_fu_681_p4, "p_Result_239_i116_s_fu_681_p4");
    sc_trace(mVcdFile, trunc_ln647_3_fu_673_p1, "trunc_ln647_3_fu_673_p1");
    sc_trace(mVcdFile, p_Result_239_i113_s_fu_663_p4, "p_Result_239_i113_s_fu_663_p4");
    sc_trace(mVcdFile, trunc_ln647_2_fu_655_p1, "trunc_ln647_2_fu_655_p1");
    sc_trace(mVcdFile, p_Result_237_2_i_fu_645_p4, "p_Result_237_2_i_fu_645_p4");
    sc_trace(mVcdFile, p_Result_237_1_i_fu_635_p4, "p_Result_237_1_i_fu_635_p4");
    sc_trace(mVcdFile, p_Result_237_i108_s_fu_625_p4, "p_Result_237_i108_s_fu_625_p4");
    sc_trace(mVcdFile, trunc_ln647_1_fu_617_p1, "trunc_ln647_1_fu_617_p1");
    sc_trace(mVcdFile, p_Result_237_2_i_i_fu_607_p4, "p_Result_237_2_i_i_fu_607_p4");
    sc_trace(mVcdFile, p_Result_237_1_i_i_fu_597_p4, "p_Result_237_1_i_i_fu_597_p4");
    sc_trace(mVcdFile, p_Result_237_i_i_fu_587_p4, "p_Result_237_i_i_fu_587_p4");
    sc_trace(mVcdFile, trunc_ln647_fu_579_p1, "trunc_ln647_fu_579_p1");
    sc_trace(mVcdFile, p_Result_239_i_i_fu_569_p4, "p_Result_239_i_i_fu_569_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, txUdpDataOut_TDATA_int, "txUdpDataOut_TDATA_int");
    sc_trace(mVcdFile, txUdpDataOut_TVALID_int, "txUdpDataOut_TVALID_int");
    sc_trace(mVcdFile, txUdpDataOut_TREADY_int, "txUdpDataOut_TREADY_int");
    sc_trace(mVcdFile, regslice_both_DataOut_V_data_V_U_vld_out, "regslice_both_DataOut_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_DataOut_V_keep_V_U_apdone_blk, "regslice_both_DataOut_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, txUdpDataOut_TKEEP_int, "txUdpDataOut_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_DataOut_V_keep_V_U_ack_in_dummy, "regslice_both_DataOut_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_DataOut_V_keep_V_U_vld_out, "regslice_both_DataOut_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_DataOut_V_last_V_U_apdone_blk, "regslice_both_DataOut_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, txUdpDataOut_TLAST_int, "txUdpDataOut_TLAST_int");
    sc_trace(mVcdFile, regslice_both_DataOut_V_last_V_U_ack_in_dummy, "regslice_both_DataOut_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_DataOut_V_last_V_U_vld_out, "regslice_both_DataOut_V_last_V_U_vld_out");
    sc_trace(mVcdFile, ap_condition_239, "ap_condition_239");
    sc_trace(mVcdFile, ap_condition_284, "ap_condition_284");
    sc_trace(mVcdFile, ap_condition_157, "ap_condition_157");
    sc_trace(mVcdFile, ap_condition_281, "ap_condition_281");
    sc_trace(mVcdFile, ap_condition_344, "ap_condition_344");
#endif

    }
}

udpTxEngine::~udpTxEngine() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_DataOut_V_data_V_U;
    delete regslice_both_DataOut_V_keep_V_U;
    delete regslice_both_DataOut_V_last_V_U;
}

void udpTxEngine::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_157.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_284.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_condition_239.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226 = p_Result_9_fu_312_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226 = ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_281.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,3,3>(ap_const_lv3_1, ute_state_load_reg_802.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_831.read()))) {
            prevWord_data_V_1 = p_Result_3_fu_766_p5.read();
        } else if ((esl_seteq<1,3,3>(ap_const_lv3_2, ute_state_load_reg_802.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_814.read()))) {
            prevWord_data_V_1 = p_Result_7_fu_529_p5.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_281.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,3,3>(ap_const_lv3_1, ute_state_load_reg_802.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_831.read()))) {
            prevWord_keep_V = p_Result_4_fu_784_p5.read();
        } else if ((esl_seteq<1,3,3>(ap_const_lv3_2, ute_state_load_reg_802.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_814.read()))) {
            prevWord_keep_V = p_Result_8_fu_547_p5.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_184_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_nbreadreq_fu_192_p3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ute_state = select_ln312_fu_464_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ute_state = zext_ln355_fu_364_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_240_p3.read()))) {
        ute_state = select_ln377_fu_318_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_4) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_240_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,3,3>(ute_state_load_load_fu_304_p1.read(), ap_const_lv3_3)))) {
        ute_state = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_184_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_nbreadreq_fu_192_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        currMetaData_myIP_V = txthMetaData_V_dout.read().range(63, 32);
        currMetaData_myPort_s = txthMetaData_V_dout.read().range(95, 80);
        currMetaData_theirIP = trunc_ln321_fu_374_p1.read();
        currMetaData_theirPo = txthMetaData_V_dout.read().range(79, 64);
        ip_len_V = add_ln214_fu_440_p2.read();
        udp_len_V = add_ln214_1_fu_452_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && 
  esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_292 = agmdDataOut_V_dout.read().range(547, 512);
        reg_296 = agmdDataOut_V_dout.read().range(511, 288);
        reg_300 = agmdDataOut_V_dout.read().range(575, 548);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_831 = grp_nbreadreq_fu_170_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_831_pp0_iter1_reg = tmp_1_reg_831.read();
        tmp_2_reg_814_pp0_iter1_reg = tmp_2_reg_814.read();
        ute_state_load_reg_802 = ute_state.read();
        ute_state_load_reg_802_pp0_iter1_reg = ute_state_load_reg_802.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_2_reg_814 = grp_nbreadreq_fu_170_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_last_V_reg_840 = tmp_last_V_fu_350_p2.read();
        trunc_ln647_6_reg_835 = trunc_ln647_6_fu_332_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln647_9_reg_821 = trunc_ln647_9_fu_308_p1.read();
    }
}

void udpTxEngine::thread_add_ln214_1_fu_452_p2() {
    add_ln214_1_fu_452_p2 = (!ap_const_lv16_8.is_01() || !agmdpayloadLenOut_V_s_dout.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_8) + sc_biguint<16>(agmdpayloadLenOut_V_s_dout.read()));
}

void udpTxEngine::thread_add_ln214_fu_440_p2() {
    add_ln214_fu_440_p2 = (!ap_const_lv16_1C.is_01() || !agmdpayloadLenOut_V_s_dout.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1C) + sc_biguint<16>(agmdpayloadLenOut_V_s_dout.read()));
}

void udpTxEngine::thread_agmdDataOut_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))))) {
        agmdDataOut_V_blk_n = agmdDataOut_V_empty_n.read();
    } else {
        agmdDataOut_V_blk_n = ap_const_logic_1;
    }
}

void udpTxEngine::thread_agmdDataOut_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        agmdDataOut_V_read = ap_const_logic_1;
    } else {
        agmdDataOut_V_read = ap_const_logic_0;
    }
}

void udpTxEngine::thread_agmdpayloadLenOut_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        agmdpayloadLenOut_V_s_blk_n = agmdpayloadLenOut_V_s_empty_n.read();
    } else {
        agmdpayloadLenOut_V_s_blk_n = ap_const_logic_1;
    }
}

void udpTxEngine::thread_agmdpayloadLenOut_V_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        agmdpayloadLenOut_V_s_read = ap_const_logic_1;
    } else {
        agmdpayloadLenOut_V_s_read = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void udpTxEngine::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void udpTxEngine::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txthMetaData_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdpayloadLenOut_V_s_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_DataOut_V_data_V_U_apdone_blk.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void udpTxEngine::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txthMetaData_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdpayloadLenOut_V_s_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_DataOut_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void udpTxEngine::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txthMetaData_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, agmdpayloadLenOut_V_s_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_DataOut_V_data_V_U_apdone_blk.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void udpTxEngine::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, agmdDataOut_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, txthMetaData_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, agmdpayloadLenOut_V_s_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void udpTxEngine::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())));
}

void udpTxEngine::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void udpTxEngine::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,3,3>(ap_const_lv3_3, ute_state_load_reg_802_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op119_write_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op122_write_state3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, txUdpDataOut_TREADY_int.read())));
}

void udpTxEngine::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_DataOut_V_data_V_U_apdone_blk.read());
}

void udpTxEngine::thread_ap_condition_157() {
    ap_condition_157 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void udpTxEngine::thread_ap_condition_239() {
    ap_condition_239 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_240_p3.read()));
}

void udpTxEngine::thread_ap_condition_281() {
    ap_condition_281 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void udpTxEngine::thread_ap_condition_284() {
    ap_condition_284 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2) && esl_seteq<1,1,1>(grp_fu_240_p3.read(), ap_const_lv1_0));
}

void udpTxEngine::thread_ap_condition_344() {
    ap_condition_344 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void udpTxEngine::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void udpTxEngine::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void udpTxEngine::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void udpTxEngine::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226() {
    ap_phi_reg_pp0_iter0_tmp_last_V_1_reg_226 =  (sc_lv<1>) ("X");
}

void udpTxEngine::thread_ap_predicate_op108_write_state2() {
    ap_predicate_op108_write_state2 = (esl_seteq<1,3,3>(ap_const_lv3_1, ute_state_load_reg_802.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_831.read()));
}

void udpTxEngine::thread_ap_predicate_op119_write_state3() {
    ap_predicate_op119_write_state3 = (esl_seteq<1,3,3>(ap_const_lv3_2, ute_state_load_reg_802_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_814_pp0_iter1_reg.read()));
}

void udpTxEngine::thread_ap_predicate_op122_write_state3() {
    ap_predicate_op122_write_state3 = (esl_seteq<1,3,3>(ap_const_lv3_1, ute_state_load_reg_802_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_831_pp0_iter1_reg.read()));
}

void udpTxEngine::thread_ap_predicate_op13_read_state1() {
    ap_predicate_op13_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_2));
}

void udpTxEngine::thread_ap_predicate_op26_read_state1() {
    ap_predicate_op26_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1) && esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_1));
}

void udpTxEngine::thread_ap_predicate_op43_read_state1() {
    ap_predicate_op43_read_state1 = (esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_184_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_nbreadreq_fu_192_p3.read()));
}

void udpTxEngine::thread_ap_predicate_op53_read_state1() {
    ap_predicate_op53_read_state1 = (esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_184_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_nbreadreq_fu_192_p3.read()));
}

void udpTxEngine::thread_ap_predicate_op78_write_state2() {
    ap_predicate_op78_write_state2 = (esl_seteq<1,3,3>(ap_const_lv3_2, ute_state_load_reg_802.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_814.read()));
}

void udpTxEngine::thread_ap_predicate_op7_read_state1() {
    ap_predicate_op7_read_state1 = (esl_seteq<1,3,3>(ute_state.read(), ap_const_lv3_4) && esl_seteq<1,1,1>(grp_nbreadreq_fu_170_p3.read(), ap_const_lv1_1));
}

void udpTxEngine::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void udpTxEngine::thread_grp_fu_240_p3() {
    grp_fu_240_p3 = agmdDataOut_V_dout.read().range(576, 576);
}

void udpTxEngine::thread_grp_fu_284_p3() {
    grp_fu_284_p3 = agmdDataOut_V_dout.read().range(548, 548);
}

void udpTxEngine::thread_grp_nbreadreq_fu_170_p3() {
    grp_nbreadreq_fu_170_p3 =  (sc_lv<1>) ((agmdDataOut_V_empty_n.read()));
}

void udpTxEngine::thread_p_Result_10_fu_757_p3() {
    p_Result_10_fu_757_p3 = esl_concat<36,28>(reg_292.read(), ap_const_lv28_FFFFFFF);
}

void udpTxEngine::thread_p_Result_11_fu_512_p3() {
    p_Result_11_fu_512_p3 = esl_concat<288,224>(trunc_ln647_9_reg_821.read(), trunc_ln647_7_fu_504_p1.read());
}

void udpTxEngine::thread_p_Result_12_fu_520_p3() {
    p_Result_12_fu_520_p3 = esl_concat<36,28>(reg_292.read(), trunc_ln647_8_fu_508_p1.read());
}

void udpTxEngine::thread_p_Result_13_fu_490_p1() {
    p_Result_13_fu_490_p1 = esl_zext<512,224>(trunc_ln414_fu_486_p1.read());
}

void udpTxEngine::thread_p_Result_14_fu_499_p1() {
    p_Result_14_fu_499_p1 = esl_zext<64,28>(trunc_ln414_1_fu_495_p1.read());
}

void udpTxEngine::thread_p_Result_237_1_i_fu_635_p4() {
    p_Result_237_1_i_fu_635_p4 = currMetaData_theirIP.read().range(23, 16);
}

void udpTxEngine::thread_p_Result_237_1_i_i_fu_597_p4() {
    p_Result_237_1_i_i_fu_597_p4 = currMetaData_myIP_V.read().range(23, 16);
}

void udpTxEngine::thread_p_Result_237_2_i_fu_645_p4() {
    p_Result_237_2_i_fu_645_p4 = currMetaData_theirIP.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_237_2_i_i_fu_607_p4() {
    p_Result_237_2_i_i_fu_607_p4 = currMetaData_myIP_V.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_237_i108_s_fu_625_p4() {
    p_Result_237_i108_s_fu_625_p4 = currMetaData_theirIP.read().range(31, 24);
}

void udpTxEngine::thread_p_Result_237_i_i_fu_587_p4() {
    p_Result_237_i_i_fu_587_p4 = currMetaData_myIP_V.read().range(31, 24);
}

void udpTxEngine::thread_p_Result_239_i113_s_fu_663_p4() {
    p_Result_239_i113_s_fu_663_p4 = currMetaData_myPort_s.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_239_i116_s_fu_681_p4() {
    p_Result_239_i116_s_fu_681_p4 = currMetaData_theirPo.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_239_i119_s_fu_699_p4() {
    p_Result_239_i119_s_fu_699_p4 = udp_len_V.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_239_i_i_fu_569_p4() {
    p_Result_239_i_i_fu_569_p4 = ip_len_V.read().range(15, 8);
}

void udpTxEngine::thread_p_Result_3_fu_766_p5() {
    p_Result_3_fu_766_p5 = esl_partset<512,512,224,32,32>(prevWord_data_V_1.read(), reg_296.read(), ap_const_lv32_0, ap_const_lv32_DF);
}

void udpTxEngine::thread_p_Result_4_fu_784_p5() {
    p_Result_4_fu_784_p5 = esl_partset<64,64,28,32,32>(prevWord_keep_V.read(), reg_300.read(), ap_const_lv32_0, ap_const_lv32_1B);
}

void udpTxEngine::thread_p_Result_5_fu_336_p2() {
    p_Result_5_fu_336_p2 = (grp_fu_284_p3.read() ^ ap_const_lv1_1);
}

void udpTxEngine::thread_p_Result_7_fu_529_p5() {
    p_Result_7_fu_529_p5 = esl_partset<512,512,224,32,32>(prevWord_data_V_1.read(), reg_296.read(), ap_const_lv32_0, ap_const_lv32_DF);
}

void udpTxEngine::thread_p_Result_8_fu_547_p5() {
    p_Result_8_fu_547_p5 = esl_partset<64,64,28,32,32>(prevWord_keep_V.read(), reg_300.read(), ap_const_lv32_0, ap_const_lv32_1B);
}

void udpTxEngine::thread_p_Result_9_fu_312_p2() {
    p_Result_9_fu_312_p2 = (grp_fu_284_p3.read() ^ ap_const_lv1_1);
}

void udpTxEngine::thread_p_Result_s_fu_713_p21() {
    p_Result_s_fu_713_p21 = esl_concat<496,16>(esl_concat<488,8>(esl_concat<480,8>(esl_concat<416,64>(esl_concat<408,8>(esl_concat<400,8>(esl_concat<392,8>(esl_concat<384,8>(esl_concat<376,8>(esl_concat<368,8>(esl_concat<360,8>(esl_concat<352,8>(esl_concat<344,8>(esl_concat<336,8>(esl_concat<328,8>(esl_concat<320,8>(esl_concat<312,8>(esl_concat<304,8>(esl_concat<288,16>(trunc_ln647_6_reg_835.read(), ap_const_lv16_0), trunc_ln647_5_fu_709_p1.read()), p_Result_239_i119_s_fu_699_p4.read()), trunc_ln647_4_fu_691_p1.read()), p_Result_239_i116_s_fu_681_p4.read()), trunc_ln647_3_fu_673_p1.read()), p_Result_239_i113_s_fu_663_p4.read()), trunc_ln647_2_fu_655_p1.read()), p_Result_237_2_i_fu_645_p4.read()), p_Result_237_1_i_fu_635_p4.read()), p_Result_237_i108_s_fu_625_p4.read()), trunc_ln647_1_fu_617_p1.read()), p_Result_237_2_i_i_fu_607_p4.read()), p_Result_237_1_i_i_fu_597_p4.read()), p_Result_237_i_i_fu_587_p4.read()), ap_const_lv64_114000000000), trunc_ln647_fu_579_p1.read()), p_Result_239_i_i_fu_569_p4.read()), ap_const_lv16_45);
}

void udpTxEngine::thread_select_ln312_fu_464_p3() {
    select_ln312_fu_464_p3 = (!tmp_9_fu_432_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_9_fu_432_p3.read()[0].to_bool())? ap_const_lv3_1: ap_const_lv3_4);
}

void udpTxEngine::thread_select_ln321_fu_356_p3() {
    select_ln321_fu_356_p3 = (!grp_fu_240_p3.read()[0].is_01())? sc_lv<2>(): ((grp_fu_240_p3.read()[0].to_bool())? select_ln347_fu_342_p3.read(): ap_const_lv2_2);
}

void udpTxEngine::thread_select_ln347_fu_342_p3() {
    select_ln347_fu_342_p3 = (!grp_fu_284_p3.read()[0].is_01())? sc_lv<2>(): ((grp_fu_284_p3.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void udpTxEngine::thread_select_ln377_fu_318_p3() {
    select_ln377_fu_318_p3 = (!grp_fu_284_p3.read()[0].is_01())? sc_lv<3>(): ((grp_fu_284_p3.read()[0].to_bool())? ap_const_lv3_3: ap_const_lv3_0);
}

void udpTxEngine::thread_tmp_4_nbreadreq_fu_192_p3() {
    tmp_4_nbreadreq_fu_192_p3 =  (sc_lv<1>) ((agmdpayloadLenOut_V_s_empty_n.read()));
}

void udpTxEngine::thread_tmp_9_fu_432_p3() {
    tmp_9_fu_432_p3 = txthMetaData_V_dout.read().range(96, 96);
}

void udpTxEngine::thread_tmp_last_V_fu_350_p2() {
    tmp_last_V_fu_350_p2 = (grp_fu_240_p3.read() & p_Result_5_fu_336_p2.read());
}

void udpTxEngine::thread_tmp_nbreadreq_fu_184_p3() {
    tmp_nbreadreq_fu_184_p3 =  (sc_lv<1>) ((txthMetaData_V_empty_n.read()));
}

void udpTxEngine::thread_trunc_ln321_fu_374_p1() {
    trunc_ln321_fu_374_p1 = txthMetaData_V_dout.read().range(32-1, 0);
}

void udpTxEngine::thread_trunc_ln414_1_fu_495_p1() {
    trunc_ln414_1_fu_495_p1 = prevWord_keep_V.read().range(28-1, 0);
}

void udpTxEngine::thread_trunc_ln414_fu_486_p1() {
    trunc_ln414_fu_486_p1 = prevWord_data_V_1.read().range(224-1, 0);
}

void udpTxEngine::thread_trunc_ln647_1_fu_617_p1() {
    trunc_ln647_1_fu_617_p1 = currMetaData_myIP_V.read().range(8-1, 0);
}

void udpTxEngine::thread_trunc_ln647_2_fu_655_p1() {
    trunc_ln647_2_fu_655_p1 = currMetaData_theirIP.read().range(8-1, 0);
}

void udpTxEngine::thread_trunc_ln647_3_fu_673_p1() {
    trunc_ln647_3_fu_673_p1 = currMetaData_myPort_s.read().range(8-1, 0);
}

void udpTxEngine::thread_trunc_ln647_4_fu_691_p1() {
    trunc_ln647_4_fu_691_p1 = currMetaData_theirPo.read().range(8-1, 0);
}

void udpTxEngine::thread_trunc_ln647_5_fu_709_p1() {
    trunc_ln647_5_fu_709_p1 = udp_len_V.read().range(8-1, 0);
}

void udpTxEngine::thread_trunc_ln647_6_fu_332_p1() {
    trunc_ln647_6_fu_332_p1 = agmdDataOut_V_dout.read().range(288-1, 0);
}

void udpTxEngine::thread_trunc_ln647_7_fu_504_p1() {
    trunc_ln647_7_fu_504_p1 = prevWord_data_V_1.read().range(224-1, 0);
}

void udpTxEngine::thread_trunc_ln647_8_fu_508_p1() {
    trunc_ln647_8_fu_508_p1 = prevWord_keep_V.read().range(28-1, 0);
}

void udpTxEngine::thread_trunc_ln647_9_fu_308_p1() {
    trunc_ln647_9_fu_308_p1 = agmdDataOut_V_dout.read().range(288-1, 0);
}

void udpTxEngine::thread_trunc_ln647_fu_579_p1() {
    trunc_ln647_fu_579_p1 = ip_len_V.read().range(8-1, 0);
}

void udpTxEngine::thread_txUdpDataOut_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op122_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op119_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,3,3>(ap_const_lv3_3, ute_state_load_reg_802_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        txUdpDataOut_TDATA_blk_n = txUdpDataOut_TREADY_int.read();
    } else {
        txUdpDataOut_TDATA_blk_n = ap_const_logic_1;
    }
}

void udpTxEngine::thread_txUdpDataOut_TDATA_int() {
    if (esl_seteq<1,1,1>(ap_condition_344.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read())) {
            txUdpDataOut_TDATA_int = p_Result_s_fu_713_p21.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read())) {
            txUdpDataOut_TDATA_int = p_Result_11_fu_512_p3.read();
        } else if (esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3)) {
            txUdpDataOut_TDATA_int = p_Result_13_fu_490_p1.read();
        } else {
            txUdpDataOut_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        txUdpDataOut_TDATA_int = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void udpTxEngine::thread_txUdpDataOut_TKEEP_int() {
    if (esl_seteq<1,1,1>(ap_condition_344.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read())) {
            txUdpDataOut_TKEEP_int = p_Result_10_fu_757_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read())) {
            txUdpDataOut_TKEEP_int = p_Result_12_fu_520_p3.read();
        } else if (esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3)) {
            txUdpDataOut_TKEEP_int = p_Result_14_fu_499_p1.read();
        } else {
            txUdpDataOut_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        txUdpDataOut_TKEEP_int =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void udpTxEngine::thread_txUdpDataOut_TLAST_int() {
    if (esl_seteq<1,1,1>(ap_condition_344.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read())) {
            txUdpDataOut_TLAST_int = tmp_last_V_reg_840.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read())) {
            txUdpDataOut_TLAST_int = ap_phi_reg_pp0_iter1_tmp_last_V_1_reg_226.read();
        } else if (esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3)) {
            txUdpDataOut_TLAST_int = ap_const_lv1_1;
        } else {
            txUdpDataOut_TLAST_int =  (sc_lv<1>) ("X");
        }
    } else {
        txUdpDataOut_TLAST_int =  (sc_lv<1>) ("X");
    }
}

void udpTxEngine::thread_txUdpDataOut_TVALID() {
    txUdpDataOut_TVALID = regslice_both_DataOut_V_data_V_U_vld_out.read();
}

void udpTxEngine::thread_txUdpDataOut_TVALID_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,3,3>(ute_state_load_reg_802.read(), ap_const_lv3_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        txUdpDataOut_TVALID_int = ap_const_logic_1;
    } else {
        txUdpDataOut_TVALID_int = ap_const_logic_0;
    }
}

void udpTxEngine::thread_txthMetaData_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        txthMetaData_V_blk_n = txthMetaData_V_empty_n.read();
    } else {
        txthMetaData_V_blk_n = ap_const_logic_1;
    }
}

void udpTxEngine::thread_txthMetaData_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        txthMetaData_V_read = ap_const_logic_1;
    } else {
        txthMetaData_V_read = ap_const_logic_0;
    }
}

void udpTxEngine::thread_ute_state_load_load_fu_304_p1() {
    ute_state_load_load_fu_304_p1 = ute_state.read();
}

void udpTxEngine::thread_zext_ln355_fu_364_p1() {
    zext_ln355_fu_364_p1 = esl_zext<3,2>(select_ln321_fu_356_p3.read());
}

void udpTxEngine::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

