// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rxEngPacketDropper_HH_
#define _rxEngPacketDropper_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct rxEngPacketDropper : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<113> > rthDropFifo_V_dout;
    sc_in< sc_logic > rthDropFifo_V_empty_n;
    sc_out< sc_logic > rthDropFifo_V_read;
    sc_in< sc_lv<577> > ureDataPayload_V_dout;
    sc_in< sc_logic > ureDataPayload_V_empty_n;
    sc_out< sc_logic > ureDataPayload_V_read;
    sc_in< sc_logic > DataOutApp_TREADY;
    sc_out< sc_lv<512> > DataOutApp_TDATA;
    sc_out< sc_logic > DataOutApp_TVALID;
    sc_out< sc_lv<64> > DataOutApp_TKEEP;
    sc_out< sc_lv<16> > DataOutApp_TDEST;
    sc_out< sc_lv<1> > DataOutApp_TLAST;
    sc_out< sc_lv<96> > DataOutApp_TUSER;


    // Module declarations
    rxEngPacketDropper(sc_module_name name);
    SC_HAS_PROCESS(rxEngPacketDropper);

    ~rxEngPacketDropper();

    sc_trace_file* mVcdFile;

    regslice_both<512>* regslice_both_repdDataOut_V_data_V_U;
    regslice_both<64>* regslice_both_repdDataOut_V_keep_V_U;
    regslice_both<16>* regslice_both_repdDataOut_V_dest_V_U;
    regslice_both<1>* regslice_both_repdDataOut_V_last_V_U;
    regslice_both<96>* regslice_both_repdDataOut_V_user_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<1> > tmp_7_nbreadreq_fu_100_p3;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_114_p3;
    sc_signal< bool > ap_predicate_op25_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_lv<1> > repd_state_load_reg_311;
    sc_signal< sc_lv<1> > tmp_reg_323;
    sc_signal< sc_lv<1> > response_drop_V_load_reg_315;
    sc_signal< bool > ap_predicate_op37_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_data_V_U_apdone_blk;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<1> > repd_state_load_reg_311_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_reg_323_pp0_iter1_reg;
    sc_signal< sc_lv<1> > response_drop_V_load_reg_315_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op45_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > repd_state;
    sc_signal< sc_lv<1> > response_drop_V;
    sc_signal< sc_lv<16> > response_id_V;
    sc_signal< sc_lv<32> > response_user_myIP_V;
    sc_signal< sc_lv<32> > response_user_theirI;
    sc_signal< sc_lv<16> > response_user_myPort;
    sc_signal< sc_lv<16> > response_user_theirP;
    sc_signal< sc_logic > DataOutApp_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > rthDropFifo_V_blk_n;
    sc_signal< sc_logic > ureDataPayload_V_blk_n;
    sc_signal< sc_lv<512> > tmp_data_V_fu_249_p1;
    sc_signal< sc_lv<512> > tmp_data_V_reg_327;
    sc_signal< sc_lv<64> > tmp_keep_V_reg_332;
    sc_signal< sc_lv<1> > tmp_last_V_fu_263_p3;
    sc_signal< sc_lv<1> > tmp_last_V_reg_337;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<16> > trunc_ln321_1_fu_155_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > DataOutApp_TVALID_int;
    sc_signal< sc_logic > DataOutApp_TREADY_int;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_keep_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_dest_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_dest_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_dest_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_user_U_apdone_blk;
    sc_signal< sc_lv<96> > DataOutApp_TUSER_int;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_user_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_repdDataOut_V_user_U_vld_out;
    sc_signal< bool > ap_condition_181;
    sc_signal< bool > ap_condition_113;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_23F;
    static const sc_lv<32> ap_const_lv32_240;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_DataOutApp_TDATA_blk_n();
    void thread_DataOutApp_TUSER_int();
    void thread_DataOutApp_TVALID();
    void thread_DataOutApp_TVALID_int();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_113();
    void thread_ap_condition_181();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_predicate_op25_read_state1();
    void thread_ap_predicate_op37_write_state2();
    void thread_ap_predicate_op45_write_state3();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_rthDropFifo_V_blk_n();
    void thread_rthDropFifo_V_read();
    void thread_tmp_7_nbreadreq_fu_100_p3();
    void thread_tmp_data_V_fu_249_p1();
    void thread_tmp_last_V_fu_263_p3();
    void thread_tmp_nbreadreq_fu_114_p3();
    void thread_trunc_ln321_1_fu_155_p1();
    void thread_ureDataPayload_V_blk_n();
    void thread_ureDataPayload_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
