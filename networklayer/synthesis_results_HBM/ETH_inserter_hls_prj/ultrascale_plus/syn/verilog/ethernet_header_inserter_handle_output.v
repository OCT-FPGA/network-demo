// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module ethernet_header_inserter_handle_output (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        myMacAddress_dout,
        myMacAddress_num_data_valid,
        myMacAddress_fifo_cap,
        myMacAddress_empty_n,
        myMacAddress_read,
        no_ip_header_out_dout,
        no_ip_header_out_num_data_valid,
        no_ip_header_out_fifo_cap,
        no_ip_header_out_empty_n,
        no_ip_header_out_read,
        ip_header_checksum_dout,
        ip_header_checksum_num_data_valid,
        ip_header_checksum_fifo_cap,
        ip_header_checksum_empty_n,
        ip_header_checksum_read,
        arpTableReplay_TVALID,
        dataOut_TREADY,
        arpTableReplay_TDATA,
        arpTableReplay_TREADY,
        dataOut_TDATA,
        dataOut_TVALID,
        dataOut_TKEEP,
        dataOut_TSTRB,
        dataOut_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] myMacAddress_dout;
input  [2:0] myMacAddress_num_data_valid;
input  [2:0] myMacAddress_fifo_cap;
input   myMacAddress_empty_n;
output   myMacAddress_read;
input  [1023:0] no_ip_header_out_dout;
input  [4:0] no_ip_header_out_num_data_valid;
input  [4:0] no_ip_header_out_fifo_cap;
input   no_ip_header_out_empty_n;
output   no_ip_header_out_read;
input  [1023:0] ip_header_checksum_dout;
input  [4:0] ip_header_checksum_num_data_valid;
input  [4:0] ip_header_checksum_fifo_cap;
input   ip_header_checksum_empty_n;
output   ip_header_checksum_read;
input   arpTableReplay_TVALID;
input   dataOut_TREADY;
input  [127:0] arpTableReplay_TDATA;
output   arpTableReplay_TREADY;
output  [511:0] dataOut_TDATA;
output   dataOut_TVALID;
output  [63:0] dataOut_TKEEP;
output  [63:0] dataOut_TSTRB;
output  [0:0] dataOut_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg myMacAddress_read;
reg no_ip_header_out_read;
reg ip_header_checksum_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_138_p3;
reg    ap_predicate_op24_read_state1;
wire   [0:0] grp_nbreadreq_fu_152_p3;
reg    ap_predicate_op42_read_state1;
reg    ap_predicate_op62_read_state1;
reg    ap_predicate_op71_read_state1;
wire   [0:0] tmp_i_nbreadreq_fu_166_p3;
reg    ap_predicate_op80_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [2:0] mw_state_load_reg_539;
reg   [0:0] tmp_4_i_reg_557;
reg    ap_predicate_op97_write_state2;
reg   [0:0] tmp_3_i_reg_577;
reg    ap_predicate_op101_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg   [2:0] mw_state_load_reg_539_pp0_iter1_reg;
reg   [0:0] tmp_4_i_reg_557_pp0_iter1_reg;
reg    ap_predicate_op107_write_state3;
reg   [0:0] tmp_3_i_reg_577_pp0_iter1_reg;
reg    ap_predicate_op109_write_state3;
wire    regslice_both_dataOut_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] mw_state;
reg   [111:0] previous_word_data;
reg   [13:0] previous_word_keep;
reg    arpTableReplay_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    myMacAddress_blk_n;
reg    dataOut_TDATA_blk_n;
reg    ip_header_checksum_blk_n;
reg    no_ip_header_out_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [111:0] previous_word_data_load_reg_543;
reg   [13:0] previous_word_keep_load_reg_550;
wire   [399:0] trunc_ln186_fu_275_p1;
reg   [399:0] trunc_ln186_reg_564;
reg   [49:0] tmp_9_i_reg_569;
wire   [399:0] trunc_ln154_fu_341_p1;
reg   [399:0] trunc_ln154_reg_584;
reg   [49:0] tmp_5_i_reg_589;
wire   [511:0] sendWord_data_2_fu_487_p3;
wire   [63:0] sendWord_keep_2_fu_494_p3;
wire   [511:0] sendWord_data_1_fu_501_p3;
wire   [63:0] sendWord_keep_1_fu_508_p3;
wire   [511:0] zext_ln104_fu_522_p1;
wire   [63:0] zext_ln104_1_fu_534_p1;
reg   [1:0] ap_phi_mux_storemerge1_i_phi_fu_201_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge1_i_reg_198;
wire   [0:0] reply_hit_fu_443_p3;
wire   [0:0] ap_phi_reg_pp0_iter0_sendWord_last_1_reg_209;
reg   [0:0] ap_phi_reg_pp0_iter1_sendWord_last_1_reg_209;
wire   [0:0] grp_fu_247_p3;
wire   [0:0] tmp_1_fu_321_p3;
wire   [0:0] ap_phi_reg_pp0_iter0_sendWord_last_reg_228;
reg   [0:0] ap_phi_reg_pp0_iter1_sendWord_last_reg_228;
wire   [0:0] grp_fu_255_p3;
wire   [0:0] tmp_fu_393_p3;
wire   [2:0] select_ln132_fu_419_p3;
wire   [2:0] zext_ln121_fu_477_p1;
wire   [111:0] zext_ln117_fu_461_p1;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] reply_macAddress_fu_439_p1;
wire   [99:0] zext_ln117_cast_fu_451_p4;
wire   [112:0] sendWord_data_fu_515_p3;
wire   [14:0] sendWord_keep_fu_527_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_arpTableReplay_U_apdone_blk;
wire   [127:0] arpTableReplay_TDATA_int_regslice;
wire    arpTableReplay_TVALID_int_regslice;
reg    arpTableReplay_TREADY_int_regslice;
wire    regslice_both_arpTableReplay_U_ack_in;
reg   [511:0] dataOut_TDATA_int_regslice;
reg    dataOut_TVALID_int_regslice;
wire    dataOut_TREADY_int_regslice;
wire    regslice_both_dataOut_V_data_V_U_vld_out;
wire    regslice_both_dataOut_V_keep_V_U_apdone_blk;
reg   [63:0] dataOut_TKEEP_int_regslice;
wire    regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_keep_V_U_vld_out;
wire    regslice_both_dataOut_V_strb_V_U_apdone_blk;
wire    regslice_both_dataOut_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_strb_V_U_vld_out;
wire    regslice_both_dataOut_V_last_V_U_apdone_blk;
reg   [0:0] dataOut_TLAST_int_regslice;
wire    regslice_both_dataOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_last_V_U_vld_out;
reg    ap_condition_103;
reg    ap_condition_367;
reg    ap_condition_298;
reg    ap_condition_294;
reg    ap_condition_309;
reg    ap_condition_319;
reg    ap_condition_315;
reg    ap_condition_328;
reg    ap_condition_244;
reg    ap_condition_279;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 mw_state = 3'd0;
#0 previous_word_data = 112'd0;
#0 previous_word_keep = 14'd0;
end

ethernet_header_inserter_regslice_both #(
    .DataWidth( 128 ))
regslice_both_arpTableReplay_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(arpTableReplay_TDATA),
    .vld_in(arpTableReplay_TVALID),
    .ack_in(regslice_both_arpTableReplay_U_ack_in),
    .data_out(arpTableReplay_TDATA_int_regslice),
    .vld_out(arpTableReplay_TVALID_int_regslice),
    .ack_out(arpTableReplay_TREADY_int_regslice),
    .apdone_blk(regslice_both_arpTableReplay_U_apdone_blk)
);

ethernet_header_inserter_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TDATA_int_regslice),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(dataOut_TREADY_int_regslice),
    .data_out(dataOut_TDATA),
    .vld_out(regslice_both_dataOut_V_data_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk)
);

ethernet_header_inserter_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TKEEP_int_regslice),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy),
    .data_out(dataOut_TKEEP),
    .vld_out(regslice_both_dataOut_V_keep_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk)
);

ethernet_header_inserter_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(64'd0),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_strb_V_U_ack_in_dummy),
    .data_out(dataOut_TSTRB),
    .vld_out(regslice_both_dataOut_V_strb_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_strb_V_U_apdone_blk)
);

ethernet_header_inserter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(dataOut_TLAST_int_regslice),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy),
    .data_out(dataOut_TLAST),
    .vld_out(regslice_both_dataOut_V_last_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (tmp_1_fu_321_p3 == 1'd0) & (grp_fu_247_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_1_reg_209 <= 1'd1;
    end else if ((((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (grp_fu_247_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (tmp_1_fu_321_p3 == 1'd1) & (grp_fu_247_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_1_reg_209 <= 1'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_1_reg_209 <= ap_phi_reg_pp0_iter0_sendWord_last_1_reg_209;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (tmp_fu_393_p3 == 1'd0) & (grp_fu_255_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_reg_228 <= 1'd1;
    end else if ((((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (tmp_fu_393_p3 == 1'd1) & (grp_fu_255_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (grp_fu_255_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_reg_228 <= 1'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_sendWord_last_reg_228 <= ap_phi_reg_pp0_iter0_sendWord_last_reg_228;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_244)) begin
        if ((1'b1 == ap_condition_103)) begin
            mw_state <= zext_ln121_fu_477_p1;
        end else if ((mw_state == 3'd5)) begin
            mw_state <= 3'd0;
        end else if (((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd1))) begin
            mw_state <= select_ln132_fu_419_p3;
        end else if ((1'b1 == ap_condition_328)) begin
            mw_state <= 3'd0;
        end else if ((1'b1 == ap_condition_315)) begin
            mw_state <= 3'd5;
        end else if ((1'b1 == ap_condition_319)) begin
            mw_state <= 3'd0;
        end else if ((1'b1 == ap_condition_309)) begin
            mw_state <= 3'd4;
        end else if ((1'b1 == ap_condition_294)) begin
            mw_state <= 3'd5;
        end else if ((1'b1 == ap_condition_298)) begin
            mw_state <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_244)) begin
        if ((1'b1 == ap_condition_279)) begin
            previous_word_data <= zext_ln117_fu_461_p1;
        end else if (((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3))) begin
            previous_word_data <= {{ip_header_checksum_dout[511:400]}};
        end else if (((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4))) begin
            previous_word_data <= {{no_ip_header_out_dout[511:400]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_244)) begin
        if ((1'b1 == ap_condition_279)) begin
            previous_word_keep <= 14'd16383;
        end else if (((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3))) begin
            previous_word_keep <= {{ip_header_checksum_dout[575:562]}};
        end else if (((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4))) begin
            previous_word_keep <= {{no_ip_header_out_dout[575:562]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mw_state_load_reg_539 <= mw_state;
        mw_state_load_reg_539_pp0_iter1_reg <= mw_state_load_reg_539;
        previous_word_data_load_reg_543 <= previous_word_data;
        previous_word_keep_load_reg_550 <= previous_word_keep;
        tmp_3_i_reg_577_pp0_iter1_reg <= tmp_3_i_reg_577;
        tmp_4_i_reg_557_pp0_iter1_reg <= tmp_4_i_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((mw_state == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_i_reg_577 <= grp_nbreadreq_fu_152_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((mw_state == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_i_reg_557 <= grp_nbreadreq_fu_138_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_i_reg_589 <= {{ip_header_checksum_dout[561:512]}};
        trunc_ln154_reg_584 <= trunc_ln154_fu_341_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_9_i_reg_569 <= {{no_ip_header_out_dout[561:512]}};
        trunc_ln186_reg_564 <= trunc_ln186_fu_275_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_103)) begin
        if ((reply_hit_fu_443_p3 == 1'd0)) begin
            ap_phi_mux_storemerge1_i_phi_fu_201_p4 = 2'd1;
        end else if ((reply_hit_fu_443_p3 == 1'd1)) begin
            ap_phi_mux_storemerge1_i_phi_fu_201_p4 = 2'd3;
        end else begin
            ap_phi_mux_storemerge1_i_phi_fu_201_p4 = ap_phi_reg_pp0_iter0_storemerge1_i_reg_198;
        end
    end else begin
        ap_phi_mux_storemerge1_i_phi_fu_201_p4 = ap_phi_reg_pp0_iter0_storemerge1_i_reg_198;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_predicate_op80_read_state1 == 1'b1))) begin
        arpTableReplay_TDATA_blk_n = arpTableReplay_TVALID_int_regslice;
    end else begin
        arpTableReplay_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op80_read_state1 == 1'b1))) begin
        arpTableReplay_TREADY_int_regslice = 1'b1;
    end else begin
        arpTableReplay_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op107_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (mw_state_load_reg_539 == 3'd5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op97_write_state2 == 1'b1)))) begin
        dataOut_TDATA_blk_n = dataOut_TREADY_int_regslice;
    end else begin
        dataOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_367)) begin
        if ((mw_state_load_reg_539 == 3'd5)) begin
            dataOut_TDATA_int_regslice = zext_ln104_fu_522_p1;
        end else if ((ap_predicate_op101_write_state2 == 1'b1)) begin
            dataOut_TDATA_int_regslice = sendWord_data_1_fu_501_p3;
        end else if ((ap_predicate_op97_write_state2 == 1'b1)) begin
            dataOut_TDATA_int_regslice = sendWord_data_2_fu_487_p3;
        end else begin
            dataOut_TDATA_int_regslice = 'bx;
        end
    end else begin
        dataOut_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_367)) begin
        if ((mw_state_load_reg_539 == 3'd5)) begin
            dataOut_TKEEP_int_regslice = zext_ln104_1_fu_534_p1;
        end else if ((ap_predicate_op101_write_state2 == 1'b1)) begin
            dataOut_TKEEP_int_regslice = sendWord_keep_1_fu_508_p3;
        end else if ((ap_predicate_op97_write_state2 == 1'b1)) begin
            dataOut_TKEEP_int_regslice = sendWord_keep_2_fu_494_p3;
        end else begin
            dataOut_TKEEP_int_regslice = 'bx;
        end
    end else begin
        dataOut_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_367)) begin
        if ((mw_state_load_reg_539 == 3'd5)) begin
            dataOut_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op101_write_state2 == 1'b1)) begin
            dataOut_TLAST_int_regslice = ap_phi_reg_pp0_iter1_sendWord_last_reg_228;
        end else if ((ap_predicate_op97_write_state2 == 1'b1)) begin
            dataOut_TLAST_int_regslice = ap_phi_reg_pp0_iter1_sendWord_last_1_reg_209;
        end else begin
            dataOut_TLAST_int_regslice = 'bx;
        end
    end else begin
        dataOut_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (mw_state_load_reg_539 == 3'd5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op101_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op97_write_state2 == 1'b1)))) begin
        dataOut_TVALID_int_regslice = 1'b1;
    end else begin
        dataOut_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op71_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0)))) begin
        ip_header_checksum_blk_n = ip_header_checksum_empty_n;
    end else begin
        ip_header_checksum_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op71_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ip_header_checksum_read = 1'b1;
    end else begin
        ip_header_checksum_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        myMacAddress_blk_n = myMacAddress_empty_n;
    end else begin
        myMacAddress_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myMacAddress_read = 1'b1;
    end else begin
        myMacAddress_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op62_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0)))) begin
        no_ip_header_out_blk_n = no_ip_header_out_empty_n;
    end else begin
        no_ip_header_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op62_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op24_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        no_ip_header_out_read = 1'b1;
    end else begin
        no_ip_header_out_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op107_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539 == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((myMacAddress_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((ap_predicate_op71_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op62_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 
    == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((arpTableReplay_TVALID_int_regslice == 1'b0) & (ap_predicate_op80_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op107_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539 == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((myMacAddress_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((ap_predicate_op71_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op62_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ip_header_checksum_empty_n 
    == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((arpTableReplay_TVALID_int_regslice == 1'b0) & (ap_predicate_op80_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op107_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539 == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((myMacAddress_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((ap_predicate_op71_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op62_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ip_header_checksum_empty_n 
    == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((arpTableReplay_TVALID_int_regslice == 1'b0) & (ap_predicate_op80_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((myMacAddress_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((ap_predicate_op71_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op62_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ip_header_checksum_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (no_ip_header_out_empty_n == 1'b0)) | ((arpTableReplay_TVALID_int_regslice == 1'b0) & (ap_predicate_op80_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539 == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539 == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op101_write_state2 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op107_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | ((dataOut_TREADY_int_regslice == 1'b0) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd5)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op109_write_state3 == 1'b1)) | ((dataOut_TREADY_int_regslice == 1'b0) & (ap_predicate_op107_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_103 = (~(mw_state == 3'd5) & ~(mw_state == 3'd1) & ~(mw_state == 3'd2) & ~(mw_state == 3'd3) & ~(mw_state == 3'd4) & (tmp_i_nbreadreq_fu_166_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_244 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_279 = (~(mw_state == 3'd5) & ~(mw_state == 3'd1) & ~(mw_state == 3'd2) & ~(mw_state == 3'd3) & ~(mw_state == 3'd4) & (reply_hit_fu_443_p3 == 1'd1) & (tmp_i_nbreadreq_fu_166_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_294 = ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (tmp_1_fu_321_p3 == 1'd1) & (grp_fu_247_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_298 = ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4) & (tmp_1_fu_321_p3 == 1'd0) & (grp_fu_247_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_309 = ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (grp_fu_255_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_315 = ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (tmp_fu_393_p3 == 1'd1) & (grp_fu_255_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_319 = ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3) & (tmp_fu_393_p3 == 1'd0) & (grp_fu_255_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_328 = ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd2) & (grp_fu_247_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_367 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_sendWord_last_1_reg_209 = 'bx;

assign ap_phi_reg_pp0_iter0_sendWord_last_reg_228 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge1_i_reg_198 = 'bx;

always @ (*) begin
    ap_predicate_op101_write_state2 = ((tmp_3_i_reg_577 == 1'd1) & (mw_state_load_reg_539 == 3'd3));
end

always @ (*) begin
    ap_predicate_op107_write_state3 = ((tmp_4_i_reg_557_pp0_iter1_reg == 1'd1) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd4));
end

always @ (*) begin
    ap_predicate_op109_write_state3 = ((tmp_3_i_reg_577_pp0_iter1_reg == 1'd1) & (mw_state_load_reg_539_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op24_read_state1 = ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd4));
end

always @ (*) begin
    ap_predicate_op42_read_state1 = ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd3));
end

always @ (*) begin
    ap_predicate_op62_read_state1 = ((grp_nbreadreq_fu_138_p3 == 1'd1) & (mw_state == 3'd2));
end

always @ (*) begin
    ap_predicate_op71_read_state1 = ((grp_nbreadreq_fu_152_p3 == 1'd1) & (mw_state == 3'd1));
end

always @ (*) begin
    ap_predicate_op80_read_state1 = (~(mw_state == 3'd5) & ~(mw_state == 3'd1) & ~(mw_state == 3'd2) & ~(mw_state == 3'd3) & ~(mw_state == 3'd4) & (tmp_i_nbreadreq_fu_166_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op97_write_state2 = ((tmp_4_i_reg_557 == 1'd1) & (mw_state_load_reg_539 == 3'd4));
end

assign arpTableReplay_TREADY = regslice_both_arpTableReplay_U_ack_in;

assign dataOut_TVALID = regslice_both_dataOut_V_data_V_U_vld_out;

assign grp_fu_247_p3 = no_ip_header_out_dout[1024'd576];

assign grp_fu_255_p3 = ip_header_checksum_dout[1024'd576];

assign grp_nbreadreq_fu_138_p3 = no_ip_header_out_empty_n;

assign grp_nbreadreq_fu_152_p3 = ip_header_checksum_empty_n;

assign reply_hit_fu_443_p3 = arpTableReplay_TDATA_int_regslice[128'd64];

assign reply_macAddress_fu_439_p1 = arpTableReplay_TDATA_int_regslice[47:0];

assign select_ln132_fu_419_p3 = ((grp_fu_255_p3[0:0] == 1'b1) ? 3'd0 : 3'd2);

assign sendWord_data_1_fu_501_p3 = {{trunc_ln154_reg_584}, {previous_word_data_load_reg_543}};

assign sendWord_data_2_fu_487_p3 = {{trunc_ln186_reg_564}, {previous_word_data_load_reg_543}};

assign sendWord_data_fu_515_p3 = {{1'd0}, {previous_word_data_load_reg_543}};

assign sendWord_keep_1_fu_508_p3 = {{tmp_5_i_reg_589}, {previous_word_keep_load_reg_550}};

assign sendWord_keep_2_fu_494_p3 = {{tmp_9_i_reg_569}, {previous_word_keep_load_reg_550}};

assign sendWord_keep_fu_527_p3 = {{1'd0}, {previous_word_keep_load_reg_550}};

assign tmp_1_fu_321_p3 = no_ip_header_out_dout[32'd562];

assign tmp_fu_393_p3 = ip_header_checksum_dout[32'd562];

assign tmp_i_nbreadreq_fu_166_p3 = arpTableReplay_TVALID_int_regslice;

assign trunc_ln154_fu_341_p1 = ip_header_checksum_dout[399:0];

assign trunc_ln186_fu_275_p1 = no_ip_header_out_dout[399:0];

assign zext_ln104_1_fu_534_p1 = sendWord_keep_fu_527_p3;

assign zext_ln104_fu_522_p1 = sendWord_data_fu_515_p3;

assign zext_ln117_cast_fu_451_p4 = {{{{4'd8}, {myMacAddress_dout}}}, {reply_macAddress_fu_439_p1}};

assign zext_ln117_fu_461_p1 = zext_ln117_cast_fu_451_p4;

assign zext_ln121_fu_477_p1 = ap_phi_mux_storemerge1_i_phi_fu_201_p4;

endmodule //ethernet_header_inserter_handle_output
