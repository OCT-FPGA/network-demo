-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ethernet_header_inserter_broadcaster_and_mac_request is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataIn_TVALID : IN STD_LOGIC;
    arpTableRequest_TREADY : IN STD_LOGIC;
    ip_header_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    ip_header_out_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    ip_header_out_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    ip_header_out_full_n : IN STD_LOGIC;
    ip_header_out_write : OUT STD_LOGIC;
    no_ip_header_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    no_ip_header_out_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    no_ip_header_out_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    no_ip_header_out_full_n : IN STD_LOGIC;
    no_ip_header_out_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    dataIn_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn_TREADY : OUT STD_LOGIC;
    dataIn_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    arpTableRequest_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpTableRequest_TVALID : OUT STD_LOGIC;
    regSubNetMask : IN STD_LOGIC_VECTOR (31 downto 0);
    regDefaultGateway : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ethernet_header_inserter_broadcaster_and_mac_request is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal tmp_i_nbreadreq_fu_66_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op20_read_state1 : BOOLEAN;
    signal ap_predicate_op37_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal bmr_fsm_state_load_reg_217 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_221 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op46_write_state2 : BOOLEAN;
    signal ap_predicate_op47_write_state2 : BOOLEAN;
    signal ap_predicate_op50_write_state2 : BOOLEAN;
    signal ap_predicate_op53_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal bmr_fsm_state_load_reg_217_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_221_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_240_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op54_write_state3 : BOOLEAN;
    signal ap_predicate_op56_write_state3 : BOOLEAN;
    signal regslice_both_arpTableRequest_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal bmr_fsm_state : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dataIn_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal arpTableRequest_TDATA_blk_n : STD_LOGIC;
    signal ip_header_out_blk_n : STD_LOGIC;
    signal no_ip_header_out_blk_n : STD_LOGIC;
    signal reg_137 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_141 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_133_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal currWord_last_reg_225 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_ip_addr_fu_149_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal dst_ip_addr_reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal regDefaultGateway_read_reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal currWord_last_1_reg_244 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal xor_ln58_fu_159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln58_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_fu_189_p4 : STD_LOGIC_VECTOR (576 downto 0);
    signal tmp_3_i_fu_203_p4 : STD_LOGIC_VECTOR (576 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_dataIn_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dataIn_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dataIn_TVALID_int_regslice : STD_LOGIC;
    signal dataIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataIn_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dataIn_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dataIn_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dataIn_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataIn_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn_V_last_V_U_ack_in : STD_LOGIC;
    signal arpTableRequest_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal arpTableRequest_TVALID_int_regslice : STD_LOGIC;
    signal arpTableRequest_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_arpTableRequest_U_vld_out : STD_LOGIC;
    signal ap_condition_245 : BOOLEAN;
    signal ap_condition_395 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component ethernet_header_inserter_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_dataIn_V_data_V_U : component ethernet_header_inserter_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => dataIn_TDATA,
        vld_in => dataIn_TVALID,
        ack_in => regslice_both_dataIn_V_data_V_U_ack_in,
        data_out => dataIn_TDATA_int_regslice,
        vld_out => dataIn_TVALID_int_regslice,
        ack_out => dataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn_V_data_V_U_apdone_blk);

    regslice_both_dataIn_V_keep_V_U : component ethernet_header_inserter_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => dataIn_TKEEP,
        vld_in => dataIn_TVALID,
        ack_in => regslice_both_dataIn_V_keep_V_U_ack_in,
        data_out => dataIn_TKEEP_int_regslice,
        vld_out => regslice_both_dataIn_V_keep_V_U_vld_out,
        ack_out => dataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn_V_keep_V_U_apdone_blk);

    regslice_both_dataIn_V_strb_V_U : component ethernet_header_inserter_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => dataIn_TSTRB,
        vld_in => dataIn_TVALID,
        ack_in => regslice_both_dataIn_V_strb_V_U_ack_in,
        data_out => dataIn_TSTRB_int_regslice,
        vld_out => regslice_both_dataIn_V_strb_V_U_vld_out,
        ack_out => dataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn_V_strb_V_U_apdone_blk);

    regslice_both_dataIn_V_last_V_U : component ethernet_header_inserter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => dataIn_TLAST,
        vld_in => dataIn_TVALID,
        ack_in => regslice_both_dataIn_V_last_V_U_ack_in,
        data_out => dataIn_TLAST_int_regslice,
        vld_out => regslice_both_dataIn_V_last_V_U_vld_out,
        ack_out => dataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn_V_last_V_U_apdone_blk);

    regslice_both_arpTableRequest_U : component ethernet_header_inserter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => arpTableRequest_TDATA_int_regslice,
        vld_in => arpTableRequest_TVALID_int_regslice,
        ack_in => arpTableRequest_TREADY_int_regslice,
        data_out => arpTableRequest_TDATA,
        vld_out => regslice_both_arpTableRequest_U_vld_out,
        ack_out => arpTableRequest_TREADY,
        apdone_blk => regslice_both_arpTableRequest_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bmr_fsm_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_395)) then
                if (((bmr_fsm_state = ap_const_lv1_1) and (grp_fu_133_p1 = ap_const_lv1_1))) then 
                    bmr_fsm_state <= ap_const_lv1_0;
                elsif (((bmr_fsm_state = ap_const_lv1_0) and (grp_fu_133_p1 = ap_const_lv1_0))) then 
                    bmr_fsm_state <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bmr_fsm_state_load_reg_217 <= bmr_fsm_state;
                bmr_fsm_state_load_reg_217_pp0_iter1_reg <= bmr_fsm_state_load_reg_217;
                icmp_ln58_reg_240_pp0_iter1_reg <= icmp_ln58_reg_240;
                tmp_i_reg_221 <= tmp_i_nbreadreq_fu_66_p6;
                tmp_i_reg_221_pp0_iter1_reg <= tmp_i_reg_221;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                currWord_last_1_reg_244 <= dataIn_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                currWord_last_reg_225 <= dataIn_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dst_ip_addr_reg_230 <= dataIn_TDATA_int_regslice(159 downto 128);
                icmp_ln58_reg_240 <= icmp_ln58_fu_171_p2;
                regDefaultGateway_read_reg_235 <= regDefaultGateway;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_137 <= dataIn_TDATA_int_regslice;
                reg_141 <= dataIn_TKEEP_int_regslice;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln58_fu_165_p2 <= (xor_ln58_fu_159_p2 and regSubNetMask);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_done_reg, ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ip_header_out_full_n, ap_predicate_op50_write_state2, no_ip_header_out_full_n, ap_predicate_op53_write_state2, ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, regslice_both_arpTableRequest_U_apdone_blk, dataIn_TVALID_int_regslice, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op37_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_arpTableRequest_U_apdone_blk = ap_const_logic_1) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ip_header_out_full_n = ap_const_logic_0)) or ((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and 
    (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((no_ip_header_out_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_done_reg, ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ip_header_out_full_n, ap_predicate_op50_write_state2, no_ip_header_out_full_n, ap_predicate_op53_write_state2, ap_block_state2_io, ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, regslice_both_arpTableRequest_U_apdone_blk, ap_block_state3_io, dataIn_TVALID_int_regslice, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op37_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_arpTableRequest_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ip_header_out_full_n = ap_const_logic_0)) or ((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice 
    = ap_const_logic_0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((no_ip_header_out_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_done_reg, ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ip_header_out_full_n, ap_predicate_op50_write_state2, no_ip_header_out_full_n, ap_predicate_op53_write_state2, ap_block_state2_io, ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, regslice_both_arpTableRequest_U_apdone_blk, ap_block_state3_io, dataIn_TVALID_int_regslice, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op37_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_arpTableRequest_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ip_header_out_full_n = ap_const_logic_0)) or ((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice 
    = ap_const_logic_0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((no_ip_header_out_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_done_reg, dataIn_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op37_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (dataIn_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_state2_io <= (((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ip_header_out_full_n, ap_predicate_op50_write_state2, no_ip_header_out_full_n, ap_predicate_op53_write_state2, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ip_header_out_full_n = ap_const_logic_0)) or ((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (arpTableRequest_TREADY_int_regslice = ap_const_logic_0)) or ((no_ip_header_out_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, regslice_both_arpTableRequest_U_apdone_blk, arpTableRequest_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_arpTableRequest_U_apdone_blk = ap_const_logic_1) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((arpTableRequest_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_245_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_245 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_395_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, tmp_i_nbreadreq_fu_66_p6, ap_block_pp0_stage0_11001)
    begin
                ap_condition_395 <= ((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op20_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_66_p6, bmr_fsm_state)
    begin
                ap_predicate_op20_read_state1 <= ((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_0));
    end process;


    ap_predicate_op37_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_66_p6, bmr_fsm_state)
    begin
                ap_predicate_op37_read_state1 <= ((tmp_i_nbreadreq_fu_66_p6 = ap_const_lv1_1) and (bmr_fsm_state = ap_const_lv1_1));
    end process;


    ap_predicate_op46_write_state2_assign_proc : process(bmr_fsm_state_load_reg_217, tmp_i_reg_221, icmp_ln58_reg_240)
    begin
                ap_predicate_op46_write_state2 <= ((icmp_ln58_reg_240 = ap_const_lv1_0) and (tmp_i_reg_221 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217 = ap_const_lv1_0));
    end process;


    ap_predicate_op47_write_state2_assign_proc : process(bmr_fsm_state_load_reg_217, tmp_i_reg_221, icmp_ln58_reg_240)
    begin
                ap_predicate_op47_write_state2 <= ((icmp_ln58_reg_240 = ap_const_lv1_1) and (tmp_i_reg_221 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217 = ap_const_lv1_0));
    end process;


    ap_predicate_op50_write_state2_assign_proc : process(bmr_fsm_state_load_reg_217, tmp_i_reg_221)
    begin
                ap_predicate_op50_write_state2 <= ((tmp_i_reg_221 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217 = ap_const_lv1_0));
    end process;


    ap_predicate_op53_write_state2_assign_proc : process(bmr_fsm_state_load_reg_217, tmp_i_reg_221)
    begin
                ap_predicate_op53_write_state2 <= ((tmp_i_reg_221 = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217 = ap_const_lv1_1));
    end process;


    ap_predicate_op54_write_state3_assign_proc : process(bmr_fsm_state_load_reg_217_pp0_iter1_reg, tmp_i_reg_221_pp0_iter1_reg, icmp_ln58_reg_240_pp0_iter1_reg)
    begin
                ap_predicate_op54_write_state3 <= ((icmp_ln58_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (tmp_i_reg_221_pp0_iter1_reg = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op56_write_state3_assign_proc : process(bmr_fsm_state_load_reg_217_pp0_iter1_reg, tmp_i_reg_221_pp0_iter1_reg, icmp_ln58_reg_240_pp0_iter1_reg)
    begin
                ap_predicate_op56_write_state3 <= ((icmp_ln58_reg_240_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_reg_221_pp0_iter1_reg = ap_const_lv1_1) and (bmr_fsm_state_load_reg_217_pp0_iter1_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    arpTableRequest_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ap_predicate_op54_write_state3, ap_predicate_op56_write_state3, ap_block_pp0_stage0, arpTableRequest_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op56_write_state3 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op54_write_state3 = ap_const_boolean_1)))) then 
            arpTableRequest_TDATA_blk_n <= arpTableRequest_TREADY_int_regslice;
        else 
            arpTableRequest_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpTableRequest_TDATA_int_regslice_assign_proc : process(ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, dst_ip_addr_reg_230, regDefaultGateway_read_reg_235, ap_condition_245)
    begin
        if ((ap_const_boolean_1 = ap_condition_245)) then
            if ((ap_predicate_op47_write_state2 = ap_const_boolean_1)) then 
                arpTableRequest_TDATA_int_regslice <= dst_ip_addr_reg_230;
            elsif ((ap_predicate_op46_write_state2 = ap_const_boolean_1)) then 
                arpTableRequest_TDATA_int_regslice <= regDefaultGateway_read_reg_235;
            else 
                arpTableRequest_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arpTableRequest_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    arpTableRequest_TVALID <= regslice_both_arpTableRequest_U_vld_out;

    arpTableRequest_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op46_write_state2, ap_predicate_op47_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op47_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op46_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            arpTableRequest_TVALID_int_regslice <= ap_const_logic_1;
        else 
            arpTableRequest_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dataIn_TDATA_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_done_reg, ap_block_pp0_stage0, dataIn_TVALID_int_regslice)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op37_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dataIn_TDATA_blk_n <= dataIn_TVALID_int_regslice;
        else 
            dataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataIn_TREADY <= regslice_both_dataIn_V_data_V_U_ack_in;

    dataIn_TREADY_int_regslice_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op20_read_state1, ap_predicate_op37_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op37_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dataIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    dst_ip_addr_fu_149_p4 <= dataIn_TDATA_int_regslice(159 downto 128);
    grp_fu_133_p1 <= dataIn_TLAST_int_regslice;
    icmp_ln58_fu_171_p2 <= "1" when (and_ln58_fu_165_p2 = ap_const_lv32_0) else "0";

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ip_header_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ip_header_out_full_n, ap_predicate_op50_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ip_header_out_blk_n <= ip_header_out_full_n;
        else 
            ip_header_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ip_header_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_i_fu_189_p4),1024));

    ip_header_out_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op50_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ip_header_out_write <= ap_const_logic_1;
        else 
            ip_header_out_write <= ap_const_logic_0;
        end if; 
    end process;


    no_ip_header_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, no_ip_header_out_full_n, ap_predicate_op53_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1))) then 
            no_ip_header_out_blk_n <= no_ip_header_out_full_n;
        else 
            no_ip_header_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    no_ip_header_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_i_fu_203_p4),1024));

    no_ip_header_out_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_write_state2 = ap_const_boolean_1))) then 
            no_ip_header_out_write <= ap_const_logic_1;
        else 
            no_ip_header_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_i_fu_203_p4 <= ((currWord_last_1_reg_244 & reg_141) & reg_137);
    tmp_4_i_fu_189_p4 <= ((currWord_last_reg_225 & reg_141) & reg_137);
    tmp_i_nbreadreq_fu_66_p6 <= (0=>(dataIn_TVALID_int_regslice), others=>'-');
    xor_ln58_fu_159_p2 <= (regDefaultGateway xor dst_ip_addr_fu_149_p4);
end behav;
